/********* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc *********/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using EarthView.World.Core;

namespace EarthView
{
	namespace World
	{
		namespace Spatial3D
		{
			/// <summary>
			/// 固定在视口指定位置的三维元素的相机监听类
			/// </summary>
			public class FixedElementCameraListener : EarthView.World.Graphic.Camera.CameraListener
			{
				/// <summary>
				/// 构造函数
				/// </summary>
				/// <param name="fixedelement">相机监听类</param>
				/// <returns></returns>	
				public FixedElementCameraListener(EarthView.World.Spatial3D.FixedElement ref_fixedelement) : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					NameValuePairList list = new NameValuePairList();
					BasePtr valueref_fixedelement = new BasePtr(ref_fixedelement);
					list.Add("ref_fixedelement", valueref_fixedelement.PtrVal);
					Create("CFixedElementCameraListenerProxy", list);
					if (!"EarthView.World.Spatial3D.FixedElementCameraListener".Equals(((Object)this).GetType().ToString()))
					{
						this.SetCustomExtend(true);
					}
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera_NoVirtual(IntPtr pNativeObject, IntPtr cam);

				/// <summary>
				/// 渲染场景之前被访问
				/// </summary>
				/// <param name="cam">摄像机</param>
				/// <returns></returns>
				public new void CameraPreRenderScene_NoVirtual(EarthView.World.Graphic.Camera cam)
				{
					EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera_NoVirtual(this.NativeObject, object.Equals(cam, null) ? IntPtr.Zero : cam.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera(IntPtr pNativeObject, IntPtr cam);

				/// <summary>
				/// 渲染场景之前被访问
				/// </summary>
				/// <param name="cam">摄像机</param>
				/// <returns></returns>
				public override void CameraPreRenderScene(EarthView.World.Graphic.Camera cam)
				{
					EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera(this.NativeObject, object.Equals(cam, null) ? IntPtr.Zero : cam.NativeObject);
					
				}

				#if DEBUG 
					#if Windows 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#elif Linux 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_d.so");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.so");

					#else 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#endif 
				#else 
					#if Windows 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#elif Linux 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine.so");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp.so");

					#else 
						private static bool bLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadFixedElementCameraListener = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#endif 
				#endif 

				private static bool registerStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CFixedElementCameraListener", new FixedElementCameraListenerClassFactory());

				private static bool registerProxyStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CFixedElementCameraListenerProxy", new FixedElementCameraListenerClassFactory());

				public FixedElementCameraListener(CreatedWhenConstruct bAutoCreate) : base(bAutoCreate)
				{
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera(IntPtr pObject, cameraPreRenderScene_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPostRenderScene_void_CCamera(IntPtr pObject, cameraPostRenderScene_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraDestroyed_void_CCamera(IntPtr pObject, cameraDestroyed_CallBack_void_CCamera pCallback);

				public override void RegisterCallBack()
				{
					if (this.NativeObject != IntPtr.Zero)
					{
						m_cameraPreRenderScene_CallBack_void_CCamera = EarthView_World_Graphic_CCamera_CCameraListener_cameraPreRenderScene_void_CCamera_Function;
						GC.KeepAlive(m_cameraPreRenderScene_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPreRenderScene_void_CCamera(this.NativeObject, m_cameraPreRenderScene_CallBack_void_CCamera);
						m_cameraPostRenderScene_CallBack_void_CCamera = EarthView_World_Graphic_CCamera_CCameraListener_cameraPostRenderScene_void_CCamera_Function;
						GC.KeepAlive(m_cameraPostRenderScene_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraPostRenderScene_void_CCamera(this.NativeObject, m_cameraPostRenderScene_CallBack_void_CCamera);
						m_cameraDestroyed_CallBack_void_CCamera = EarthView_World_Graphic_CCamera_CCameraListener_cameraDestroyed_void_CCamera_Function;
						GC.KeepAlive(m_cameraDestroyed_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CFixedElementCameraListener_cameraDestroyed_void_CCamera(this.NativeObject, m_cameraDestroyed_CallBack_void_CCamera);
					}
				}
				public override void CameraPostRenderScene(EarthView.World.Graphic.Camera cam)
				{
					base.CameraPostRenderScene_NoVirtual(cam);
				}
				public override void CameraDestroyed(EarthView.World.Graphic.Camera cam)
				{
					base.CameraDestroyed_NoVirtual(cam);
				}
				public static FixedElementCameraListener FromBaseObject(BaseObject baseObj)
				{
					if (baseObj == null || baseObj.NativeObject == IntPtr.Zero)
						return null;
					FixedElementCameraListener obj = baseObj as  FixedElementCameraListener;
					if (object.Equals(obj, null))
					{
						obj = new FixedElementCameraListener(CreatedWhenConstruct.CWC_NotToCreate);
						obj.BindNativeObject(baseObj.NativeObject, "CFixedElementCameraListener");
						obj.IncreaseCast();
					}

					return obj;
				}
			}

			public class FixedElementCameraListenerClassFactory : IClassFactory
			{
				public BaseObject Create()
				{
					FixedElementCameraListener emptyInstance = new FixedElementCameraListener(CreatedWhenConstruct.CWC_NotToCreate);
					return emptyInstance;
				}
			}

			/// <summary>
			/// 固定在视口指定位置的三维元素
			/// </summary>
			public class FixedElement : EarthView.World.Core.BaseObject
			{
				/// <summary>
				/// 几种预设的屏幕布局
				/// </summary>
				public enum SCREENLAYOUT
				{
								CENTER = 0,
								LEFTDOWN = 1,
								LEFTUP = 2,
								RIGHTDOWN = 3,
								RIGHTUP = 4,
								SETXY = 5
				
				}

				/// <summary>
				/// 构造函数
				/// </summary>
				/// <param name="ref_cam">当前场景中的相机</param>
				/// <param name="x">x轴坐标</param>
				/// <param name="y">y轴坐标</param>
				/// <returns></returns>	
				public FixedElement(EarthView.World.Graphic.Camera ref_cam, uint x, uint y) : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					NameValuePairList list = new NameValuePairList();
					BasePtr valueref_cam = new BasePtr(ref_cam);
					list.Add("ref_cam", valueref_cam.PtrVal);
					BasePtr valuex = new BasePtr(x);
					list.Add("x", valuex.PtrVal);
					BasePtr valuey = new BasePtr(y);
					list.Add("y", valuey.PtrVal);
					Create("CFixedElement", list);
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}
				/// <summary>
				/// 构造函数
				/// </summary>
				/// <param name="ref_cam">当前场景中的相机</param>
				/// <param name="eLayout">屏幕布局枚举</param>
				/// <returns></returns>	
				public FixedElement(EarthView.World.Graphic.Camera ref_cam, EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT eLayout) : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					NameValuePairList list = new NameValuePairList();
					BasePtr valueref_cam = new BasePtr(ref_cam);
					list.Add("ref_cam", valueref_cam.PtrVal);
					BasePtr valueeLayout = new BasePtr(eLayout);
					list.Add("eLayout", valueeLayout.PtrVal);
					Create("CFixedElement", list);
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}
				/// <summary>
				/// 构造函数
				/// </summary>
				/// <param name="ref_cam">当前场景中的相机</param>
				/// <returns></returns>	
				public FixedElement(EarthView.World.Graphic.Camera ref_cam) : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					NameValuePairList list = new NameValuePairList();
					BasePtr valueref_cam = new BasePtr(ref_cam);
					list.Add("ref_cam", valueref_cam.PtrVal);
					Create("CFixedElement", list);
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElement_setScreenPos_void_ev_uint32_ev_uint32(IntPtr pNativeObject, uint x, uint y);

				/// <summary>
				/// 设置坐标轴的位置
				/// </summary>
				/// <param name="x">x轴坐标</param>
				/// <param name="y">y轴坐标</param>
				/// <returns></returns>	
				public void SetScreenPos(uint x, uint y)
				{
					EarthView_World_Spatial3D_CFixedElement_setScreenPos_void_ev_uint32_ev_uint32(this.NativeObject, x, y);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElement_setScreenPos_void_ScreenLayout(IntPtr pNativeObject, EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT eLayout);

				/// <summary>
				/// 设置坐标轴的位置
				/// </summary>
				/// <param name="eLayout">坐标轴位置枚举</param>
				/// <returns></returns>	
				public void SetScreenPos(EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT eLayout)
				{
					EarthView_World_Spatial3D_CFixedElement_setScreenPos_void_ScreenLayout(this.NativeObject, eLayout);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElement_addMovable_void_CMovableObject(IntPtr pNativeObject, IntPtr ref_mo);

				/// <summary>
				/// 添加movable
				/// </summary>
				/// <param name="ref_mo">要添加的物体</param>
				/// <returns></returns>			
				public void AddMovable(EarthView.World.Graphic.MovableObject ref_mo)
				{
					EarthView_World_Spatial3D_CFixedElement_addMovable_void_CMovableObject(this.NativeObject, object.Equals(ref_mo, null) ? IntPtr.Zero : ref_mo.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElement_removeMovable_void_CMovableObject(IntPtr pNativeObject, IntPtr mo);

				/// <summary>
				/// 删除movable
				/// </summary>
				/// <param name="mo">要删除的物体</param>
				/// <returns></returns>			
				public void RemoveMovable(EarthView.World.Graphic.MovableObject mo)
				{
					EarthView_World_Spatial3D_CFixedElement_removeMovable_void_CMovableObject(this.NativeObject, object.Equals(mo, null) ? IntPtr.Zero : mo.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CFixedElement_notifiCamera_void_CCamera(IntPtr pNativeObject, IntPtr cam);

				/// <summary>
				/// 相机监听
				/// </summary>
				/// <param name="cam">要监听的相机</param>
				/// <returns></returns>		
				public void NotifiCamera(EarthView.World.Graphic.Camera cam)
				{
					EarthView_World_Spatial3D_CFixedElement_notifiCamera_void_CCamera(this.NativeObject, object.Equals(cam, null) ? IntPtr.Zero : cam.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CFixedElement_getFixedElementCameraListener_CFixedElementCameraListener(IntPtr pNativeObject);

				/// <summary>
				/// 获得固定部件坐标轴的相机Listener
				/// </summary>
				/// <returns>EarthView::World::Spatial3D::CFixedElementCameraListener *,固定部件的相机监听类指针</returns>	
				public EarthView.World.Spatial3D.FixedElementCameraListener GetFixedElementCameraListener()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CFixedElement_getFixedElementCameraListener_CFixedElementCameraListener(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Spatial3D.FixedElementCameraListener csObj = new EarthView.World.Spatial3D.FixedElementCameraListener(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CFixedElementCameraListener");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Spatial3D.FixedElementCameraListener;
						csObj.BindNativeObject(__ptr, "CFixedElementCameraListener");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CFixedElement_getCamera_CCamera(IntPtr pNativeObject);

				/// <summary>
				/// 获得当前相机
				/// </summary>
				/// <returns>EarthView::World::Graphic::CCamera *,相机指针</returns>	
				public EarthView.World.Graphic.Camera GetCamera()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CFixedElement_getCamera_CCamera(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Graphic.Camera csObj = new EarthView.World.Graphic.Camera(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CCamera");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Graphic.Camera;
						csObj.BindNativeObject(__ptr, "CCamera");
						csObj.Delegate = true;
					}
					return csObj;
					
				}

				#if DEBUG 
					#if Windows 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#elif Linux 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_d.so");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.so");

					#else 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#endif 
				#else 
					#if Windows 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#elif Linux 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine.so");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp.so");

					#else 
						private static bool bLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadFixedElement = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#endif 
				#endif 

				private static bool registerStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CFixedElement", new FixedElementClassFactory());

				public FixedElement(CreatedWhenConstruct bAutoCreate) : base(bAutoCreate)
				{
				}

				public override void RegisterCallBack()
				{
					if (this.NativeObject != IntPtr.Zero)
					{
					}
				}
				public static FixedElement FromBaseObject(BaseObject baseObj)
				{
					if (baseObj == null || baseObj.NativeObject == IntPtr.Zero)
						return null;
					FixedElement obj = baseObj as  FixedElement;
					if (object.Equals(obj, null))
					{
						obj = new FixedElement(CreatedWhenConstruct.CWC_NotToCreate);
						obj.BindNativeObject(baseObj.NativeObject, "CFixedElement");
						obj.IncreaseCast();
					}

					return obj;
				}
			}

			public class FixedElementClassFactory : IClassFactory
			{
				public BaseObject Create()
				{
					FixedElement emptyInstance = new FixedElement(CreatedWhenConstruct.CWC_NotToCreate);
					return emptyInstance;
				}
			}

		}
	}
}
namespace EarthView
{
	namespace World
	{
		namespace Spatial3D
		{
			/// <summary>
			/// 通用场景管理器类
			/// </summary>
			public class CommonSceneManager : EarthView.World.Graphic.OctreeSceneManager
			{
				/// <summary>
				/// 构造函数
				/// </summary>
				/// <param name="name">通用场景管理器名称</param>
				/// <returns></returns>	
				public CommonSceneManager(string name) : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					NameValuePairList list = new NameValuePairList();
					BasePtr valuename = new BasePtr(name);
					list.Add("name", valuename.PtrVal);
					Create("CCommonSceneManagerProxy", list);
					if (!"EarthView.World.Spatial3D.CommonSceneManager".Equals(((Object)this).GetType().ToString()))
					{
						this.SetCustomExtend(true);
					}
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_showOrthAxis_void_ev_bool(IntPtr pNativeObject, byte visible);

				/// <summary>
				/// 显示坐标轴
				/// </summary>
				/// <param name="visible">是否显示</param>
				/// <returns></returns>	
				public void ShowOrthAxis(bool visible)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_showOrthAxis_void_ev_bool(this.NativeObject, Convert.ToByte(visible));
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setAxisPos_void_CCamera_ScreenLayout(IntPtr pNativeObject, IntPtr cam, EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT layout);

				/// <summary>
				/// 设置坐标轴位置
				/// </summary>
				/// <param name="cam">相机</param>
				/// <param name="layout">屏幕布局枚举</param>
				/// <returns></returns>	
				public void SetAxisPos(EarthView.World.Graphic.Camera cam, EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT layout)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setAxisPos_void_CCamera_ScreenLayout(this.NativeObject, object.Equals(cam, null) ? IntPtr.Zero : cam.NativeObject, layout);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setAxisPos_void_CCamera_ev_int32_ev_int32(IntPtr pNativeObject, IntPtr cam, int x, int y);

				/// <summary>
				/// 设置坐标轴位置
				/// </summary>
				/// <param name="cam">相机</param>
				/// <param name="x">x轴坐标</param>
				/// <param name="y">y轴坐标</param>
				/// <returns></returns>	
				public void SetAxisPos(EarthView.World.Graphic.Camera cam, int x, int y)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setAxisPos_void_CCamera_ev_int32_ev_int32(this.NativeObject, object.Equals(cam, null) ? IntPtr.Zero : cam.NativeObject, x, y);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getOrthAxis_COrthaxis(IntPtr pNativeObject);

				/// <summary>
				/// 获得坐标轴
				/// </summary>
				/// <returns>EarthView::World::Geometry3D::COrthaxis,返回坐标轴</returns>	
				public EarthView.World.Geometry3D.Orthaxis GetOrthAxis()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getOrthAxis_COrthaxis(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Geometry3D.Orthaxis csObj = new EarthView.World.Geometry3D.Orthaxis(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "COrthaxis");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Geometry3D.Orthaxis;
						csObj.BindNativeObject(__ptr, "COrthaxis");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_showPlanaGrid_void_ev_bool(IntPtr pNativeObject, byte visible);

				/// <summary>
				/// 显示网格
				/// </summary>
				/// <param name="visible">是否显示</param>
				public void ShowPlanaGrid(bool visible)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_showPlanaGrid_void_ev_bool(this.NativeObject, Convert.ToByte(visible));
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getPlanarGrid_CPlanargrid(IntPtr pNativeObject);

				/// <summary>
				/// 获得网格
				/// </summary>
				/// <returns>EarthView::World::Geometry3D::CPlanargrid,返回网格</returns>	
				public EarthView.World.Geometry3D.Planargrid GetPlanarGrid()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getPlanarGrid_CPlanargrid(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Geometry3D.Planargrid csObj = new EarthView.World.Geometry3D.Planargrid(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CPlanargrid");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Geometry3D.Planargrid;
						csObj.BindNativeObject(__ptr, "CPlanargrid");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getFixElement_CFixedElement(IntPtr pNativeObject);

				/// <summary>
				/// 返回固定类指针
				/// </summary>
				/// <returns></returns>	
				public EarthView.World.Spatial3D.FixedElement GetFixElement()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getFixElement_CFixedElement(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Spatial3D.FixedElement csObj = new EarthView.World.Spatial3D.FixedElement(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CFixedElement");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Spatial3D.FixedElement;
						csObj.BindNativeObject(__ptr, "CFixedElement");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setPlanarGridScale_void_ev_uint32(IntPtr pNativeObject, uint x);

				/// <summary>
				/// 设置网格方阵大小(x*x)
				/// </summary>
				/// <param name="x">网格方阵大小(x*x)</param>
				/// <returns></returns>	
				public void SetPlanarGridScale(uint x)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setPlanarGridScale_void_ev_uint32(this.NativeObject, x);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setPlanargridLineLength_void_ev_uint32(IntPtr pNativeObject, uint lineLength);

				/// <summary>
				/// 设置单位网格长度
				/// </summary>
				/// <param name="lineLength">单位网格长度</param>
				/// <returns></returns>	
				public void SetPlanargridLineLength(uint lineLength)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setPlanargridLineLength_void_ev_uint32(this.NativeObject, lineLength);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setPlanargridCentreColor_void_CColourValue(IntPtr pNativeObject, IntPtr colorValue);

				/// <summary>
				/// 设置网格中心十字线颜色
				/// </summary>
				/// <param name="colorValue">颜色</param>
				/// <returns></returns>	
				public void SetPlanargridCentreColor(EarthView.World.Graphic.ColourValue colorValue)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setPlanargridCentreColor_void_CColourValue(this.NativeObject, object.Equals(colorValue, null) ? IntPtr.Zero : colorValue.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setOrthaxisLength_void_ev_uint32(IntPtr pNativeObject, uint lenght);

				/// <summary>
				/// 设置坐标轴长度
				/// </summary>
				/// <param name="lenght">坐标轴长度</param>
				/// <returns></returns>	
				public void SetOrthaxisLength(uint lenght)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setOrthaxisLength_void_ev_uint32(this.NativeObject, lenght);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setMovable_void_bool(IntPtr pNativeObject, byte flag);

				/// <summary>
				/// 设置渲染窗体内对象的可移动属性
				/// </summary>
				/// <param name="flag">是否可移动</param>
				/// <returns></returns>	
				public void SetMovable(bool flag)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setMovable_void_bool(this.NativeObject, Convert.ToByte(flag));
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setScaleable_void_bool(IntPtr pNativeObject, byte flag);

				/// <summary>
				/// 设置渲染窗体内对象的可缩放属性
				/// </summary>
				/// <param name="flag">是否可缩放</param>
				/// <returns></returns>	
				public void SetScaleable(bool flag)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setScaleable_void_bool(this.NativeObject, Convert.ToByte(flag));
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setRotatable_void_bool(IntPtr pNativeObject, byte flag);

				/// <summary>
				/// 设置渲染窗体内对象的可旋转属性
				/// </summary>
				/// <param name="flag">是否可旋转</param>
				/// <returns></returns>	
				public void SetRotatable(bool flag)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setRotatable_void_bool(this.NativeObject, Convert.ToByte(flag));
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern byte EarthView_World_Spatial3D_CCommonSceneManager_getMovable_bool(IntPtr pNativeObject);

				/// <summary>
				/// 获得渲染窗体内对象的可移动属性
				/// </summary>
				/// <returns>bool,是否可移动</returns>	
				public bool GetMovable()
				{
					byte ret=EarthView_World_Spatial3D_CCommonSceneManager_getMovable_bool(this.NativeObject);
					
					return Convert.ToBoolean(ret);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern byte EarthView_World_Spatial3D_CCommonSceneManager_getScaleable_bool(IntPtr pNativeObject);

				/// <summary>
				/// 获得渲染窗体内对象的可缩放属性
				/// </summary>
				/// <returns>bool,是否可移动</returns>	
				public bool GetScaleable()
				{
					byte ret=EarthView_World_Spatial3D_CCommonSceneManager_getScaleable_bool(this.NativeObject);
					
					return Convert.ToBoolean(ret);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern byte EarthView_World_Spatial3D_CCommonSceneManager_getRotatable_bool(IntPtr pNativeObject);

				/// <summary>
				/// 获得渲染窗体内对象的可旋转属性
				/// </summary>
				/// <returns>bool,是否可旋转</returns>	
				public bool GetRotatable()
				{
					byte ret=EarthView_World_Spatial3D_CCommonSceneManager_getRotatable_bool(this.NativeObject);
					
					return Convert.ToBoolean(ret);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setOrthoAxisPosition_void_ScreenLayout(IntPtr pNativeObject, EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT eLayout);

				/// <summary>
				/// 设置坐标轴位置
				/// </summary>
				/// <param name="eLayout">屏幕布局枚举</param>
				/// <returns></returns>	
				public void SetOrthoAxisPosition(EarthView.World.Spatial3D.FixedElement.SCREENLAYOUT eLayout)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setOrthoAxisPosition_void_ScreenLayout(this.NativeObject, eLayout);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_setOrthoAxisPosition_void_ev_int32_ev_int32(IntPtr pNativeObject, int x, int y);

				/// <summary>
				/// 设置坐标轴位置
				/// </summary>
				/// <param name="x">x轴坐标</param>
				/// <param name="y">y轴坐标</param>
				/// <returns></returns>	
				public void SetOrthoAxisPosition(int x, int y)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_setOrthoAxisPosition_void_ev_int32_ev_int32(this.NativeObject, x, y);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString_NoVirtual(IntPtr pNativeObject);

				/// <summary>
				/// 获得当前场景管理器类型
				/// </summary>
				/// <returns>EVString,类型名称</returns>	
				public new string GetTypeName_NoVirtual()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString_NoVirtual(this.NativeObject);
					
					string ret = Marshal.PtrToStringAnsi(__ptr);
					ClassFactory.FreeString(ref __ptr);
					return ret;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString(IntPtr pNativeObject);

				/// <summary>
				/// 获得当前场景管理器类型
				/// </summary>
				/// <returns>EVString,类型名称</returns>	
				public override string GetTypeName()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString(this.NativeObject);
					
					string ret = Marshal.PtrToStringAnsi(__ptr);
					ClassFactory.FreeString(ref __ptr);
					return ret;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString_NoVirtual(IntPtr pNativeObject, string name);

				/// <summary>
				/// 创建相机
				/// </summary>
				/// <param name="name">相机名称</param>
				/// <returns>EarthView::World::Graphic::CCamera,相机</returns>	
				public new EarthView.World.Graphic.Camera CreateCamera_NoVirtual(string name)
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString_NoVirtual(this.NativeObject, name);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Graphic.Camera csObj = new EarthView.World.Graphic.Camera(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CCamera");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Graphic.Camera;
						csObj.BindNativeObject(__ptr, "CCamera");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString(IntPtr pNativeObject, string name);

				/// <summary>
				/// 创建相机
				/// </summary>
				/// <param name="name">相机名称</param>
				/// <returns>EarthView::World::Graphic::CCamera,相机</returns>	
				public override EarthView.World.Graphic.Camera CreateCamera(string name)
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString(this.NativeObject, name);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Graphic.Camera csObj = new EarthView.World.Graphic.Camera(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CCamera");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Graphic.Camera;
						csObj.BindNativeObject(__ptr, "CCamera");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_addMovable_void_CMovableObject_CVector3(IntPtr pNativeObject, IntPtr mov, IntPtr pos);

				/// <summary>
				/// 添加movable
				/// </summary>
				/// <param name="mo">要添加的物体</param>
				/// <param name="pos">物体的位置</param>
				/// <returns></returns>
				public void AddMovable(EarthView.World.Graphic.MovableObject mov, EarthView.World.Spatial.Math.Vector3 pos)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_addMovable_void_CMovableObject_CVector3(this.NativeObject, object.Equals(mov, null) ? IntPtr.Zero : mov.NativeObject, object.Equals(pos, null) ? IntPtr.Zero : pos.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_removeMovable_void_CMovableObject(IntPtr pNativeObject, IntPtr mov);

				/// <summary>
				/// 删除movable
				/// </summary>
				/// <param name="mo">要删除的物体</param>
				/// <returns></returns>		
				public void RemoveMovable(EarthView.World.Graphic.MovableObject mov)
				{
					EarthView_World_Spatial3D_CCommonSceneManager_removeMovable_void_CMovableObject(this.NativeObject, object.Equals(mov, null) ? IntPtr.Zero : mov.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern byte EarthView_World_Spatial3D_CCommonSceneManager_intersect_ev_bool_CRay_CVector3_CCamera_bool_ev_bool_ev_bool_ev_bool(IntPtr pNativeObject, IntPtr ray, IntPtr intersectPoint, IntPtr camera, byte intersectModel, byte positiveSide, byte negativeSide, ref bool modelIntersected);

				/// <summary>
				/// 求交
				/// </summary>
				/// <param name="ray">射线</param>
				/// <param name="intersectPoint">射线起始位置</param>
				/// <param name="camera">相机</param>
				/// <param name="intersectModel">设置是否与模型求交</param>
				/// <param name="positiveSide">设置是否正面求交</param>
				/// <param name="negativeSide">设置是否反面求交</param>
				/// <param name="modelIntersected">是否与模型相交</param>
				/// <returns></returns>	
				public bool Intersect(EarthView.World.Spatial.Math.Ray ray, ref  EarthView.World.Spatial.Math.Vector3 intersectPoint, EarthView.World.Graphic.Camera camera, bool intersectModel, bool positiveSide, bool negativeSide, ref bool modelIntersected)
				{
					byte ret=EarthView_World_Spatial3D_CCommonSceneManager_intersect_ev_bool_CRay_CVector3_CCamera_bool_ev_bool_ev_bool_ev_bool(this.NativeObject, object.Equals(ray, null) ? IntPtr.Zero : ray.NativeObject, object.Equals(intersectPoint, null) ? IntPtr.Zero : intersectPoint.NativeObject, object.Equals(camera, null) ? IntPtr.Zero : camera.NativeObject, Convert.ToByte(intersectModel), Convert.ToByte(positiveSide), Convert.ToByte(negativeSide), ref modelIntersected);
					
					return Convert.ToBoolean(ret);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_mergeAlignedBox_CAxisAlignedBox_CAxisAlignedBox(IntPtr pNativeObject, IntPtr rhs);

				public EarthView.World.Spatial.Math.AxisAlignedBox MergeAlignedBox(EarthView.World.Spatial.Math.AxisAlignedBox rhs)
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_mergeAlignedBox_CAxisAlignedBox_CAxisAlignedBox(this.NativeObject, object.Equals(rhs, null) ? IntPtr.Zero : rhs.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Spatial.Math.AxisAlignedBox csObj = new EarthView.World.Spatial.Math.AxisAlignedBox(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CAxisAlignedBox");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Spatial.Math.AxisAlignedBox;
						csObj.BindNativeObject(__ptr, "CAxisAlignedBox");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getWholeAlignedBox_CAxisAlignedBox(IntPtr pNativeObject);

				public EarthView.World.Spatial.Math.AxisAlignedBox GetWholeAlignedBox()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getWholeAlignedBox_CAxisAlignedBox(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Spatial.Math.AxisAlignedBox csObj = new EarthView.World.Spatial.Math.AxisAlignedBox(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CAxisAlignedBox");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Spatial.Math.AxisAlignedBox;
						csObj.BindNativeObject(__ptr, "CAxisAlignedBox");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManager_initWholeAlignedBox_void(IntPtr pNativeObject);

				public void InitWholeAlignedBox()
				{
					EarthView_World_Spatial3D_CCommonSceneManager_initWholeAlignedBox_void(this.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManager_getFixELementCameraListener_CFixedElementCameraListener(IntPtr pNativeObject);

				/// <summary>
				/// 获得坐标轴相机Listener
				/// </summary>
				/// <returns></returns>	
				public EarthView.World.Spatial3D.FixedElementCameraListener GetFixELementCameraListener()
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManager_getFixELementCameraListener_CFixedElementCameraListener(this.NativeObject);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Spatial3D.FixedElementCameraListener csObj = new EarthView.World.Spatial3D.FixedElementCameraListener(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CFixedElementCameraListener");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Spatial3D.FixedElementCameraListener;
						csObj.BindNativeObject(__ptr, "CFixedElementCameraListener");
						csObj.Delegate = true;
					}
					return csObj;
					
				}

				#if DEBUG 
					#if Windows 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#elif Linux 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_d.so");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.so");

					#else 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#endif 
				#else 
					#if Windows 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#elif Linux 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine.so");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp.so");

					#else 
						private static bool bLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadCommonSceneManager = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#endif 
				#endif 

				private static bool registerStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CCommonSceneManager", new CommonSceneManagerClassFactory());

				private static bool registerProxyStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CCommonSceneManagerProxy", new CommonSceneManagerClassFactory());

				public CommonSceneManager(CreatedWhenConstruct bAutoCreate) : base(bAutoCreate)
				{
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__alertVisibleObjects_void(IntPtr pObject, _alertVisibleObjects_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNodeImpl_CSceneNode(IntPtr pObject, createSceneNodeImpl_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNodeImpl_CSceneNode_EVString(IntPtr pObject, createSceneNodeImpl_CallBack_CSceneNode_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_initRenderQueue_void(IntPtr pObject, initRenderQueue_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_deriveShadowCasterPass_CPass_CPass(IntPtr pObject, deriveShadowCasterPass_CallBack_CPass_CPass pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_deriveShadowReceiverPass_CPass_CPass(IntPtr pObject, deriveShadowReceiverPass_CallBack_CPass_CPass pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_validatePassForRendering_ev_bool_CPass(IntPtr pObject, validatePassForRendering_CallBack_ev_bool_CPass pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable(IntPtr pObject, validateRenderableForRendering_CallBack_ev_bool_CPass_CRenderable pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString(IntPtr pObject, createSkyboxPlane_CallBack_CMeshPtr_BoxPlane_Real_CQuaternion_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(IntPtr pObject, createSkydomePlane_CallBack_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool(IntPtr pObject, useRenderableViewProjMode_CallBack_void_CRenderable_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetViewProjMode_void_ev_bool(IntPtr pObject, resetViewProjMode_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreRenderQueues_void(IntPtr pObject, firePreRenderQueues_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostRenderQueues_void(IntPtr pObject, firePostRenderQueues_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString(IntPtr pObject, fireRenderQueueStarted_CallBack_ev_bool_ev_uint8_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString(IntPtr pObject, fireRenderQueueEnded_CallBack_ev_bool_ev_uint8_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(IntPtr pObject, fireRenderSingleObjectStarted_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(IntPtr pObject, fireRenderSingleObjectEnd_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesUpdated_void_ev_size_t(IntPtr pObject, fireShadowTexturesUpdated_CallBack_void_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t(IntPtr pObject, fireShadowTexturesPreCaster_CallBack_void_CLight_CCamera_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum(IntPtr pObject, fireShadowTexturesPreReceiver_CallBack_void_CLight_CFrustum pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreUpdateSceneGraph_void_CCamera(IntPtr pObject, firePreUpdateSceneGraph_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostUpdateSceneGraph_void_CCamera(IntPtr pObject, firePostUpdateSceneGraph_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreFindVisibleObjects_void_CViewport(IntPtr pObject, firePreFindVisibleObjects_CallBack_void_CViewport pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostFindVisibleObjects_void_CViewport(IntPtr pObject, firePostFindVisibleObjects_CallBack_void_CViewport pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireSceneManagerDestroyed_void(IntPtr pObject, fireSceneManagerDestroyed_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setViewport_void_CViewport(IntPtr pObject, setViewport_CallBack_void_CViewport pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderVisibleObjectsDefaultSequence_void(IntPtr pObject, renderVisibleObjectsDefaultSequence_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence(IntPtr pObject, renderVisibleObjectsCustomSequence_CallBack_void_CRenderQueueInvocationSequence pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareRenderQueue_void(IntPtr pObject, prepareRenderQueue_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList(IntPtr pObject, renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool(IntPtr pObject, renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAutoParamDataSource_CAutoParamDataSource(IntPtr pObject, createAutoParamDataSource_CallBack_CAutoParamDataSource pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_findLightsAffectingFrustum_void_CCamera(IntPtr pObject, findLightsAffectingFrustum_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_initShadowVolumeMaterials_void(IntPtr pObject, initShadowVolumeMaterials_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_ensureShadowTexturesCreated_void(IntPtr pObject, ensureShadowTexturesCreated_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyShadowTextures_void(IntPtr pObject, destroyShadowTextures_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList(IntPtr pObject, prepareShadowTextures_CallBack_void_CCamera_CViewport_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareShadowTextures_void_CCamera_CViewport(IntPtr pObject, prepareShadowTextures_CallBack_void_CCamera_CViewport pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setImageDefaultMaterial_void_CMaterialPtr(IntPtr pObject, setImageDefaultMaterial_CallBack_void_CMaterialPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setImageUseDefaultMaterial_void_ev_bool(IntPtr pObject, setImageUseDefaultMaterial_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSunPosition_CVector3(IntPtr pObject, getSunPosition_CallBack_CVector3 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setAtmosphereVisible_void_ev_bool(IntPtr pObject, setAtmosphereVisible_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_storeAtmosphereVisibleState_void(IntPtr pObject, storeAtmosphereVisibleState_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_restoreAtmosphereVisibleState_void(IntPtr pObject, restoreAtmosphereVisibleState_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSunVisible_void_ev_bool(IntPtr pObject, setSunVisible_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__pauseRendering_RenderContext(IntPtr pObject, _pauseRendering_CallBack_RenderContext pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__resumeRendering_void_RenderContext(IntPtr pObject, _resumeRendering_CallBack_void_RenderContext pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool(IntPtr pObject, renderShadowVolumesToStencil_CallBack_void_CLight_CCamera_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool(IntPtr pObject, setShadowVolumeStencilState_CallBack_void_ev_bool_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera(IntPtr pObject, findShadowCastersForLight_CallBack_ShadowCasterList_CLight_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderBasicQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderAdditiveStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderModulativeStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderTextureShadowCasterQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderTextureShadowReceiverQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderModulativeTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, renderAdditiveTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(IntPtr pObject, renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(IntPtr pObject, renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(IntPtr pObject, renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(IntPtr pObject, renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateRenderQueueSplitOptions_void(IntPtr pObject, updateRenderQueueSplitOptions_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool(IntPtr pObject, updateRenderQueueGroupSplitOptions_CallBack_void_CRenderQueueGroup_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera(IntPtr pObject, buildAndSetScissor_CallBack_ClipResult_LightList_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildScissor_void_CLight_CCamera_RealRect(IntPtr pObject, buildScissor_CallBack_void_CLight_CCamera_RealRect pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetScissor_void(IntPtr pObject, resetScissor_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildAndSetLightClip_ClipResult_LightList(IntPtr pObject, buildAndSetLightClip_CallBack_ClipResult_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildLightClip_void_CLight_PlaneList(IntPtr pObject, buildLightClip_CallBack_void_CLight_PlaneList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetLightClip_void(IntPtr pObject, resetLightClip_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_checkCachedLightClippingInfo_void(IntPtr pObject, checkCachedLightClippingInfo_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useLights_void_LightList_ev_uint16(IntPtr pObject, useLights_CallBack_void_LightList_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setViewMatrix_void_CMatrix4(IntPtr pObject, setViewMatrix_CallBack_void_CMatrix4 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useLightsGpuProgram_void_CPass_LightList(IntPtr pObject, useLightsGpuProgram_CallBack_void_CPass_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_bindGpuProgram_void_CGpuProgram(IntPtr pObject, bindGpuProgram_CallBack_void_CGpuProgram pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateGpuProgramParameters_void_CPass(IntPtr pObject, updateGpuProgramParameters_CallBack_void_CPass pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString(IntPtr pObject, getTypeName_CallBack_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString(IntPtr pObject, createCamera_CallBack_CCamera_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCamera_CCamera_EVString(IntPtr pObject, getCamera_CallBack_CCamera_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasCamera_ev_bool_EVString(IntPtr pObject, hasCamera_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyCamera_void_CCamera(IntPtr pObject, destroyCamera_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyCamera_void_EVString(IntPtr pObject, destroyCamera_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllCameras_void(IntPtr pObject, destroyAllCameras_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createLight_CLight_EVString(IntPtr pObject, createLight_CallBack_CLight_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createLight_CLight(IntPtr pObject, createLight_CallBack_CLight pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightCount_ev_uint16(IntPtr pObject, getLightCount_CallBack_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLight_CLight_ev_uint16(IntPtr pObject, getLight_CallBack_CLight_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLight_CLight_EVString(IntPtr pObject, getLight_CallBack_CLight_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasLight_ev_bool_EVString(IntPtr pObject, hasLight_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightClippingPlanes_PlaneList_CLight(IntPtr pObject, getLightClippingPlanes_CallBack_PlaneList_CLight pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightScissorRect_RealRect_CLight_CCamera(IntPtr pObject, getLightScissorRect_CallBack_RealRect_CLight_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyLight_void_EVString(IntPtr pObject, destroyLight_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyLight_void_CLight(IntPtr pObject, destroyLight_CallBack_void_CLight pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllLights_void(IntPtr pObject, destroyAllLights_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowTexName_EVString(IntPtr pObject, getSoftShadowTexName_CallBack_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTexCam_CCamera(IntPtr pObject, getShadowTexCam_CallBack_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16(IntPtr pObject, getSoftShadowProjMatrix_CallBack_CMatrix4_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadeEyeSpaceDepthArray_CVector4(IntPtr pObject, getCascadeEyeSpaceDepthArray_CallBack_CVector4 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowNearClip_float_ev_uint8(IntPtr pObject, getSoftShadowNearClip_CallBack_float_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowFarClip_float_ev_uint8(IntPtr pObject, getSoftShadowFarClip_CallBack_float_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getIsUseSoftShadowFitToCascadesMode_bool(IntPtr pObject, getIsUseSoftShadowFitToCascadesMode_CallBack_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool(IntPtr pObject, setIsUseSoftShadowFitToCascadesMode_CallBack_void_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCurrentClipIndex_ev_uint8(IntPtr pObject, getCurrentClipIndex_CallBack_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getIsUseSoftShadowTechnique_bool(IntPtr pObject, getIsUseSoftShadowTechnique_CallBack_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setIsUseSoftShadowTechnique_void_bool(IntPtr pObject, setIsUseSoftShadowTechnique_CallBack_void_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadePartitionsPercent_float(IntPtr pObject, getCascadePartitionsPercent_CallBack_float pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCascadePartitionsPercent_void_float(IntPtr pObject, setCascadePartitionsPercent_CallBack_void_float pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadePartitionsDistance_int_ev_uint8(IntPtr pObject, getCascadePartitionsDistance_CallBack_int_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8(IntPtr pObject, setCascadePartitionsDistance_CallBack_void_ev_uint8_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowOffsetFormat_PixelFormat(IntPtr pObject, getSoftShadowOffsetFormat_CallBack_PixelFormat pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_checkShadowCasterInFrustum_void_CCamera(IntPtr pObject, checkShadowCasterInFrustum_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasShadowCasterInFrustum_bool(IntPtr pObject, hasShadowCasterInFrustum_CallBack_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowLightBleedPower_Real(IntPtr pObject, getSoftShadowLightBleedPower_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowLightBleedPower_void_Real(IntPtr pObject, setSoftShadowLightBleedPower_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowDepthOffset_Real(IntPtr pObject, getSoftShadowDepthOffset_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowDepthOffset_void_Real(IntPtr pObject, setSoftShadowDepthOffset_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowNormalFactor_float(IntPtr pObject, getSoftShadowNormalFactor_CallBack_float pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowNormalFactor_void_float(IntPtr pObject, setSoftShadowNormalFactor_CallBack_void_float pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__notifyLightsDirty_void(IntPtr pObject, _notifyLightsDirty_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__getLightsAffectingFrustum_LightList(IntPtr pObject, _getLightsAffectingFrustum_CallBack_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32(IntPtr pObject, _populateLightList_CallBack_void_CVector3_Real_LightList_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CVector3_Real_LightList(IntPtr pObject, _populateLightList_CallBack_void_CVector3_Real_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showImage_void_ev_bool(IntPtr pObject, showImage_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getImageVisible_ev_bool(IntPtr pObject, getImageVisible_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showOcean_void_ev_bool(IntPtr pObject, showOcean_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOceanVisible_ev_bool(IntPtr pObject, getOceanVisible_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32(IntPtr pObject, _populateLightList_CallBack_void_CSceneNode_Real_LightList_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CSceneNode_Real_LightList(IntPtr pObject, _populateLightList_CallBack_void_CSceneNode_Real_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNode_CSceneNode(IntPtr pObject, createSceneNode_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNode_CSceneNode_EVString(IntPtr pObject, createSceneNode_CallBack_CSceneNode_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroySceneNode_void_EVString(IntPtr pObject, destroySceneNode_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroySceneNode_void_CSceneNode(IntPtr pObject, destroySceneNode_CallBack_void_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRootSceneNode_CSceneNode(IntPtr pObject, getRootSceneNode_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSceneNode_CSceneNode_EVString(IntPtr pObject, getSceneNode_CallBack_CSceneNode_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasSceneNode_ev_bool_EVString(IntPtr pObject, hasSceneNode_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString(IntPtr pObject, createEntity_CallBack_CEntity_EVString_EVString_IntVector_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_EVString(IntPtr pObject, createEntity_CallBack_CEntity_EVString_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_IntVector(IntPtr pObject, createEntity_CallBack_CEntity_EVString_EVString_IntVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString(IntPtr pObject, createEntity_CallBack_CEntity_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector(IntPtr pObject, createEntity_CallBack_CEntity_EVString_CMeshPtr_IntVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_CMeshPtr(IntPtr pObject, createEntity_CallBack_CEntity_EVString_CMeshPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_CMeshPtr_IntVector(IntPtr pObject, createEntity_CallBack_CEntity_CMeshPtr_IntVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_CMeshPtr(IntPtr pObject, createEntity_CallBack_CEntity_CMeshPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_IntVector(IntPtr pObject, createEntity_CallBack_CEntity_EVString_IntVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString(IntPtr pObject, createEntity_CallBack_CEntity_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_PrefabType(IntPtr pObject, createEntity_CallBack_CEntity_EVString_PrefabType pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_PrefabType(IntPtr pObject, createEntity_CallBack_CEntity_PrefabType pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getEntity_CEntity_EVString(IntPtr pObject, getEntity_CallBack_CEntity_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasEntity_ev_bool_EVString(IntPtr pObject, hasEntity_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyEntity_void_CEntity(IntPtr pObject, destroyEntity_CallBack_void_CEntity pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyEntity_void_EVString(IntPtr pObject, destroyEntity_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllEntities_void(IntPtr pObject, destroyAllEntities_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createManualObject_CManualObject_EVString(IntPtr pObject, createManualObject_CallBack_CManualObject_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createManualObject_CManualObject(IntPtr pObject, createManualObject_CallBack_CManualObject pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getManualObject_CManualObject_EVString(IntPtr pObject, getManualObject_CallBack_CManualObject_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasManualObject_ev_bool_EVString(IntPtr pObject, hasManualObject_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyManualObject_void_CManualObject(IntPtr pObject, destroyManualObject_CallBack_void_CManualObject pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyManualObject_void_EVString(IntPtr pObject, destroyManualObject_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllManualObjects_void(IntPtr pObject, destroyAllManualObjects_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_usingWebMercator_ev_bool(IntPtr pObject, usingWebMercator_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardChain_CBillboardChain_EVString(IntPtr pObject, createBillboardChain_CallBack_CBillboardChain_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardChain_CBillboardChain(IntPtr pObject, createBillboardChain_CallBack_CBillboardChain pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBillboardChain_CBillboardChain_EVString(IntPtr pObject, getBillboardChain_CallBack_CBillboardChain_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasBillboardChain_ev_bool_EVString(IntPtr pObject, hasBillboardChain_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardChain_void_CBillboardChain(IntPtr pObject, destroyBillboardChain_CallBack_void_CBillboardChain pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardChain_void_EVString(IntPtr pObject, destroyBillboardChain_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllBillboardChains_void(IntPtr pObject, destroyAllBillboardChains_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRibbonTrail_CRibbonTrail_EVString(IntPtr pObject, createRibbonTrail_CallBack_CRibbonTrail_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRibbonTrail_CRibbonTrail(IntPtr pObject, createRibbonTrail_CallBack_CRibbonTrail pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRibbonTrail_CRibbonTrail_EVString(IntPtr pObject, getRibbonTrail_CallBack_CRibbonTrail_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasRibbonTrail_ev_bool_EVString(IntPtr pObject, hasRibbonTrail_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyRibbonTrail_void_CRibbonTrail(IntPtr pObject, destroyRibbonTrail_CallBack_void_CRibbonTrail pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyRibbonTrail_void_EVString(IntPtr pObject, destroyRibbonTrail_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllRibbonTrails_void(IntPtr pObject, destroyAllRibbonTrails_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_EVString(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_ev_size_t_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_ev_size_t(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem(IntPtr pObject, createParticleSystem_CallBack_CParticleSystem pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getParticleSystem_CParticleSystem_EVString(IntPtr pObject, getParticleSystem_CallBack_CParticleSystem_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasParticleSystem_ev_bool_EVString(IntPtr pObject, hasParticleSystem_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyParticleSystem_void_CParticleSystem(IntPtr pObject, destroyParticleSystem_CallBack_void_CParticleSystem pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyParticleSystem_void_EVString(IntPtr pObject, destroyParticleSystem_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllParticleSystems_void(IntPtr pObject, destroyAllParticleSystems_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_clearScene_void(IntPtr pObject, clearScene_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_EVString(IntPtr pObject, prepareWorldGeometry_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString(IntPtr pObject, prepareWorldGeometry_CallBack_void_DataStreamPtr_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_DataStreamPtr(IntPtr pObject, prepareWorldGeometry_CallBack_void_DataStreamPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_EVString(IntPtr pObject, setWorldGeometry_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_DataStreamPtr_EVString(IntPtr pObject, setWorldGeometry_CallBack_void_DataStreamPtr_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_DataStreamPtr(IntPtr pObject, setWorldGeometry_CallBack_void_DataStreamPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_EVString(IntPtr pObject, estimateWorldGeometry_CallBack_ev_size_t_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString(IntPtr pObject, estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr(IntPtr pObject, estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool(IntPtr pObject, getSuggestedViewpoint_CallBack_ViewPoint_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSuggestedViewpoint_ViewPoint(IntPtr pObject, getSuggestedViewpoint_CallBack_ViewPoint pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setOption_ev_bool_EVString_void(IntPtr pObject, setOption_CallBack_ev_bool_EVString_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOption_ev_bool_EVString_void(IntPtr pObject, getOption_CallBack_ev_bool_EVString_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasOption_ev_bool_EVString(IntPtr pObject, hasOption_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOptionValues_ev_bool_EVString_StringVector(IntPtr pObject, getOptionValues_CallBack_ev_bool_EVString_StringVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOptionKeys_ev_bool_StringVector(IntPtr pObject, getOptionKeys_CallBack_ev_bool_StringVector pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__updateSceneGraph_void_CCamera(IntPtr pObject, _updateSceneGraph_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool(IntPtr pObject, _findVisibleObjects_CallBack_void_CCamera_VisibleObjectsBoundsInfo_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__applySceneAnimations_void(IntPtr pObject, _applySceneAnimations_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderVisibleObjects_void(IntPtr pObject, _renderVisibleObjects_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderScene_void_CCamera_CViewport_ev_bool(IntPtr pObject, _renderScene_CallBack_void_CCamera_CViewport_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__queueSkiesForRendering_void_CCamera(IntPtr pObject, _queueSkiesForRendering_CallBack_void_CCamera pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setDestinationRenderSystem_void_CRenderSystem(IntPtr pObject, _setDestinationRenderSystem_CallBack_void_CRenderSystem pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString(IntPtr pObject, setSkyPlane_CallBack_void_ev_bool_CPlane_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString(IntPtr pObject, _setSkyPlane_CallBack_void_ev_bool_CPlane_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlaneEnabled_void_ev_bool(IntPtr pObject, setSkyPlaneEnabled_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyPlaneEnabled_ev_bool(IntPtr pObject, isSkyPlaneEnabled_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyPlaneNode_CSceneNode(IntPtr pObject, getSkyPlaneNode_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters(IntPtr pObject, getSkyPlaneGenParameters_CallBack_SkyPlaneGenParameters pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString(IntPtr pObject, setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion(IntPtr pObject, setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool(IntPtr pObject, setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real(IntPtr pObject, setSkyBox_CallBack_void_ev_bool_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString(IntPtr pObject, setSkyBox_CallBack_void_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString(IntPtr pObject, _setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion(IntPtr pObject, _setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8(IntPtr pObject, _setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real(IntPtr pObject, _setSkyBox_CallBack_void_ev_bool_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString(IntPtr pObject, _setSkyBox_CallBack_void_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBoxEnabled_void_ev_bool(IntPtr pObject, setSkyBoxEnabled_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyBoxEnabled_ev_bool(IntPtr pObject, isSkyBoxEnabled_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyBoxNode_CSceneNode(IntPtr pObject, getSkyBoxNode_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters(IntPtr pObject, getSkyBoxGenParameters_CallBack_SkyBoxGenParameters pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString(IntPtr pObject, setSkyDome_CallBack_void_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString(IntPtr pObject, _setSkyDome_CallBack_void_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDomeEnabled_void_ev_bool(IntPtr pObject, setSkyDomeEnabled_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyDomeEnabled_ev_bool(IntPtr pObject, isSkyDomeEnabled_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyDomeNode_CSceneNode(IntPtr pObject, getSkyDomeNode_CallBack_CSceneNode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters(IntPtr pObject, getSkyDomeGenParameters_CallBack_SkyDomeGenParameters pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogMode_FogMode(IntPtr pObject, getFogMode_CallBack_FogMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogColour_CColourValue(IntPtr pObject, getFogColour_CallBack_CColourValue pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogStart_Real(IntPtr pObject, getFogStart_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogEnd_Real(IntPtr pObject, getFogEnd_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogDensity_Real(IntPtr pObject, getFogDensity_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32(IntPtr pObject, createBillboardSet_CallBack_CBillboardSet_EVString_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_EVString(IntPtr pObject, createBillboardSet_CallBack_CBillboardSet_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_ev_uint32(IntPtr pObject, createBillboardSet_CallBack_CBillboardSet_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet(IntPtr pObject, createBillboardSet_CallBack_CBillboardSet pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBillboardSet_CBillboardSet_EVString(IntPtr pObject, getBillboardSet_CallBack_CBillboardSet_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasBillboardSet_ev_bool_EVString(IntPtr pObject, hasBillboardSet_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardSet_void_CBillboardSet(IntPtr pObject, destroyBillboardSet_CallBack_void_CBillboardSet pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardSet_void_EVString(IntPtr pObject, destroyBillboardSet_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllBillboardSets_void(IntPtr pObject, destroyAllBillboardSets_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setDisplaySceneNodes_void_ev_bool(IntPtr pObject, setDisplaySceneNodes_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getDisplaySceneNodes_ev_bool(IntPtr pObject, getDisplaySceneNodes_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAnimation_CAnimation_EVString_Real(IntPtr pObject, createAnimation_CallBack_CAnimation_EVString_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getAnimation_CAnimation_EVString(IntPtr pObject, getAnimation_CallBack_CAnimation_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasAnimation_ev_bool_EVString(IntPtr pObject, hasAnimation_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAnimation_void_EVString(IntPtr pObject, destroyAnimation_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllAnimations_void(IntPtr pObject, destroyAllAnimations_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAnimationState_CAnimationState_EVString(IntPtr pObject, createAnimationState_CallBack_CAnimationState_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getAnimationState_CAnimationState_EVString(IntPtr pObject, getAnimationState_CallBack_CAnimationState_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasAnimationState_ev_bool_EVString(IntPtr pObject, hasAnimationState_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAnimationState_void_EVString(IntPtr pObject, destroyAnimationState_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllAnimationStates_void(IntPtr pObject, destroyAllAnimationStates_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool(IntPtr pObject, manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4(IntPtr pObject, manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList(IntPtr pObject, manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool(IntPtr pObject, manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool(IntPtr pObject, manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool(IntPtr pObject, manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4(IntPtr pObject, manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRenderQueue_CRenderQueue(IntPtr pObject, getRenderQueue_CallBack_CRenderQueue pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addRenderQueueListener_void_CRenderQueueListener(IntPtr pObject, addRenderQueueListener_CallBack_void_CRenderQueueListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeRenderQueueListener_void_CRenderQueueListener(IntPtr pObject, removeRenderQueueListener_CallBack_void_CRenderQueueListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addRenderObjectListener_void_CRenderObjectListener(IntPtr pObject, addRenderObjectListener_CallBack_void_CRenderObjectListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeRenderObjectListener_void_CRenderObjectListener(IntPtr pObject, removeRenderObjectListener_CallBack_void_CRenderObjectListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addSpecialCaseRenderQueue_void_ev_uint8(IntPtr pObject, addSpecialCaseRenderQueue_CallBack_void_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8(IntPtr pObject, removeSpecialCaseRenderQueue_CallBack_void_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_clearSpecialCaseRenderQueues_void(IntPtr pObject, clearSpecialCaseRenderQueues_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode(IntPtr pObject, setSpecialCaseRenderQueueMode_CallBack_void_SpecialCaseRenderQueueMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode(IntPtr pObject, getSpecialCaseRenderQueueMode_CallBack_SpecialCaseRenderQueueMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8(IntPtr pObject, isRenderQueueToBeProcessed_CallBack_ev_bool_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometryRenderQueue_void_ev_uint8(IntPtr pObject, setWorldGeometryRenderQueue_CallBack_void_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getWorldGeometryRenderQueue_ev_uint8(IntPtr pObject, getWorldGeometryRenderQueue_CallBack_ev_uint8 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showBoundingBoxes_void_ev_bool(IntPtr pObject, showBoundingBoxes_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShowBoundingBoxes_ev_bool(IntPtr pObject, getShowBoundingBoxes_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool(IntPtr pObject, _notifyAutotrackingSceneNode_CallBack_void_CSceneNode_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32(IntPtr pObject, createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox(IntPtr pObject, createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32(IntPtr pObject, createSphereQuery_CallBack_CSphereSceneQuery_CSphere_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSphereQuery_CSphereSceneQuery_CSphere(IntPtr pObject, createSphereQuery_CallBack_CSphereSceneQuery_CSphere pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32(IntPtr pObject, createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList(IntPtr pObject, createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32(IntPtr pObject, createRayQuery_CallBack_CRaySceneQuery_CRay_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRayQuery_CRaySceneQuery_CRay(IntPtr pObject, createRayQuery_CallBack_CRaySceneQuery_CRay pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32(IntPtr pObject, createIntersectionQuery_CallBack_CIntersectionSceneQuery_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createIntersectionQuery_CIntersectionSceneQuery(IntPtr pObject, createIntersectionQuery_CallBack_CIntersectionSceneQuery pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyQuery_void_CSceneQuery(IntPtr pObject, destroyQuery_CallBack_void_CSceneQuery pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTechnique_void_ShadowTechnique(IntPtr pObject, setShadowTechnique_CallBack_void_ShadowTechnique pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTechnique_ShadowTechnique(IntPtr pObject, getShadowTechnique_CallBack_ShadowTechnique pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShowDebugShadows_void_ev_bool(IntPtr pObject, setShowDebugShadows_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShowDebugShadows_ev_bool(IntPtr pObject, getShowDebugShadows_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColour_void_CColourValue(IntPtr pObject, setShadowColour_CallBack_void_CColourValue pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColour_CColourValue(IntPtr pObject, getShadowColour_CallBack_CColourValue pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real(IntPtr pObject, setShadowDirectionalLightExtrusionDistance_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowDirectionalLightExtrusionDistance_Real(IntPtr pObject, getShadowDirectionalLightExtrusionDistance_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorRRatio_void_Real(IntPtr pObject, setShadowColorRRatio_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorGRatio_void_Real(IntPtr pObject, setShadowColorGRatio_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorBRatio_void_Real(IntPtr pObject, setShadowColorBRatio_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorRRatio_Real(IntPtr pObject, getShadowColorRRatio_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorGRatio_Real(IntPtr pObject, getShadowColorGRatio_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorBRatio_Real(IntPtr pObject, getShadowColorBRatio_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowFarDistance_void_Real(IntPtr pObject, setShadowFarDistance_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowFarDistance_Real(IntPtr pObject, getShadowFarDistance_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowFarDistanceSquared_Real(IntPtr pObject, getShadowFarDistanceSquared_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowIndexBufferSize_void_ev_size_t(IntPtr pObject, setShadowIndexBufferSize_CallBack_void_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowIndexBufferSize_ev_size_t(IntPtr pObject, getShadowIndexBufferSize_CallBack_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSize_void_ev_uint16(IntPtr pObject, setShadowTextureSize_CallBack_void_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat(IntPtr pObject, setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16(IntPtr pObject, setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(IntPtr pObject, setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig(IntPtr pObject, setShadowTextureConfig_CallBack_void_ev_size_t_ShadowTextureConfig pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTexturePixelFormat_void_PixelFormat(IntPtr pObject, setShadowTexturePixelFormat_CallBack_void_PixelFormat pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFSAA_void_ev_uint16(IntPtr pObject, setShadowTextureFSAA_CallBack_void_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureCount_void_ev_size_t(IntPtr pObject, setShadowTextureCount_CallBack_void_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16(IntPtr pObject, setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat(IntPtr pObject, setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16(IntPtr pObject, setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(IntPtr pObject, setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTexture_CTexturePtr_ev_size_t(IntPtr pObject, getShadowTexture_CallBack_CTexturePtr_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowDirLightTextureOffset_void_Real(IntPtr pObject, setShadowDirLightTextureOffset_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowDirLightTextureOffset_Real(IntPtr pObject, getShadowDirLightTextureOffset_CallBack_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFadeStart_void_Real(IntPtr pObject, setShadowTextureFadeStart_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFadeEnd_void_Real(IntPtr pObject, setShadowTextureFadeEnd_CallBack_void_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSelfShadow_void_ev_bool(IntPtr pObject, setShadowTextureSelfShadow_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTextureSelfShadow_ev_bool(IntPtr pObject, getShadowTextureSelfShadow_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureCasterMaterial_void_EVString(IntPtr pObject, setShadowTextureCasterMaterial_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureReceiverMaterial_void_EVString(IntPtr pObject, setShadowTextureReceiverMaterial_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowCasterRenderBackFaces_void_ev_bool(IntPtr pObject, setShadowCasterRenderBackFaces_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowCasterRenderBackFaces_ev_bool(IntPtr pObject, getShadowCasterRenderBackFaces_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr(IntPtr pObject, setShadowCameraSetup_CallBack_void_ShadowCameraSetupPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr(IntPtr pObject, getShadowCameraSetup_CallBack_ShadowCameraSetupPtr pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool(IntPtr pObject, setShadowUseInfiniteFarPlane_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueStencilBased_ev_bool(IntPtr pObject, isShadowTechniqueStencilBased_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueTextureBased_ev_bool(IntPtr pObject, isShadowTechniqueTextureBased_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueModulative_ev_bool(IntPtr pObject, isShadowTechniqueModulative_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueAdditive_ev_bool(IntPtr pObject, isShadowTechniqueAdditive_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueIntegrated_ev_bool(IntPtr pObject, isShadowTechniqueIntegrated_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueInUse_ev_bool(IntPtr pObject, isShadowTechniqueInUse_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowUseLightClipPlanes_void_ev_bool(IntPtr pObject, setShadowUseLightClipPlanes_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowUseLightClipPlanes_ev_bool(IntPtr pObject, getShadowUseLightClipPlanes_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setActiveCompositorChain_void_CCompositorChain(IntPtr pObject, _setActiveCompositorChain_CallBack_void_CCompositorChain pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setLateMaterialResolving_void_ev_bool(IntPtr pObject, setLateMaterialResolving_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isLateMaterialResolving_ev_bool(IntPtr pObject, isLateMaterialResolving_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__getActiveCompositorChain_CCompositorChain(IntPtr pObject, _getActiveCompositorChain_CallBack_CCompositorChain pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addListener_void_CSceneManagerListener(IntPtr pObject, addListener_CallBack_void_CSceneManagerListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeListener_void_CSceneManagerListener(IntPtr pObject, removeListener_CallBack_void_CSceneManagerListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_existListener_ev_bool_CSceneManagerListener(IntPtr pObject, existListener_CallBack_ev_bool_CSceneManagerListener pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createStaticGeometry_CStaticGeometry_EVString(IntPtr pObject, createStaticGeometry_CallBack_CStaticGeometry_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getStaticGeometry_CStaticGeometry_EVString(IntPtr pObject, getStaticGeometry_CallBack_CStaticGeometry_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasStaticGeometry_ev_bool_EVString(IntPtr pObject, hasStaticGeometry_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyStaticGeometry_void_CStaticGeometry(IntPtr pObject, destroyStaticGeometry_CallBack_void_CStaticGeometry pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyStaticGeometry_void_EVString(IntPtr pObject, destroyStaticGeometry_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllStaticGeometry_void(IntPtr pObject, destroyAllStaticGeometry_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstancedGeometry_CInstancedGeometry_EVString(IntPtr pObject, createInstancedGeometry_CallBack_CInstancedGeometry_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getInstancedGeometry_CInstancedGeometry_EVString(IntPtr pObject, getInstancedGeometry_CallBack_CInstancedGeometry_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedGeometry_void_CInstancedGeometry(IntPtr pObject, destroyInstancedGeometry_CallBack_void_CInstancedGeometry pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedGeometry_void_EVString(IntPtr pObject, destroyInstancedGeometry_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllInstancedGeometry_void(IntPtr pObject, destroyAllInstancedGeometry_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(IntPtr pObject, createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(IntPtr pObject, createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t(IntPtr pObject, createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getInstanceManager_CInstanceManager_EVString(IntPtr pObject, getInstanceManager_CallBack_CInstanceManager_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasInstanceManager_ev_bool_EVString(IntPtr pObject, hasInstanceManager_CallBack_ev_bool_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManager_void_EVString(IntPtr pObject, destroyInstanceManager_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManager_void_CInstanceManager(IntPtr pObject, destroyInstanceManager_CallBack_void_CInstanceManager pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString(IntPtr pObject, destroyInstanceManagerWithThreadSafe_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager(IntPtr pObject, destroyInstanceManagerWithThreadSafe_CallBack_void_CInstanceManager pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllInstanceManagers_void(IntPtr pObject, destroyAllInstanceManagers_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t(IntPtr pObject, getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(IntPtr pObject, getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(IntPtr pObject, getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString(IntPtr pObject, createInstancedEntity_CallBack_CInstancedEntity_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedEntity_void_CInstancedEntity(IntPtr pObject, destroyInstancedEntity_CallBack_void_CInstancedEntity pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList(IntPtr pObject, createMovableObject_CallBack_CMovableObject_EVString_EVString_CommonStringPairList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_EVString(IntPtr pObject, createMovableObject_CallBack_CMovableObject_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList(IntPtr pObject, createMovableObject_CallBack_CMovableObject_EVString_CommonStringPairList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString(IntPtr pObject, createMovableObject_CallBack_CMovableObject_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyMovableObject_void_EVString_EVString(IntPtr pObject, destroyMovableObject_CallBack_void_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyMovableObject_void_CMovableObject(IntPtr pObject, destroyMovableObject_CallBack_void_CMovableObject pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllMovableObjectsByType_void_EVString(IntPtr pObject, destroyAllMovableObjectsByType_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllMovableObjects_void(IntPtr pObject, destroyAllMovableObjects_CallBack_void pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getMovableObject_CMovableObject_EVString_EVString(IntPtr pObject, getMovableObject_CallBack_CMovableObject_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasMovableObject_ev_bool_EVString_EVString(IntPtr pObject, hasMovableObject_CallBack_ev_bool_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString(IntPtr pObject, getMovableObjectIterator_CallBack_MovableObjectIterator_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_injectMovableObject_void_CMovableObject(IntPtr pObject, injectMovableObject_CallBack_void_CMovableObject pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractMovableObject_void_EVString_EVString(IntPtr pObject, extractMovableObject_CallBack_void_EVString_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractMovableObject_void_CMovableObject(IntPtr pObject, extractMovableObject_CallBack_void_CMovableObject pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractAllMovableObjectsByType_void_EVString(IntPtr pObject, extractAllMovableObjectsByType_CallBack_void_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setVisibilityMask_void_ev_uint32(IntPtr pObject, setVisibilityMask_CallBack_void_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getVisibilityMask_ev_uint32(IntPtr pObject, getVisibilityMask_CallBack_ev_uint32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setFindVisibleObjects_void_ev_bool(IntPtr pObject, setFindVisibleObjects_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFindVisibleObjects_ev_bool(IntPtr pObject, getFindVisibleObjects_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setNormaliseNormalsOnScale_void_ev_bool(IntPtr pObject, setNormaliseNormalsOnScale_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNormaliseNormalsOnScale_ev_bool(IntPtr pObject, getNormaliseNormalsOnScale_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setFlipCullingOnNegativeScale_void_ev_bool(IntPtr pObject, setFlipCullingOnNegativeScale_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFlipCullingOnNegativeScale_ev_bool(IntPtr pObject, getFlipCullingOnNegativeScale_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList(IntPtr pObject, _injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool_LightList pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool(IntPtr pObject, _injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool(IntPtr pObject, _injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable(IntPtr pObject, _injectRenderWithPass_CallBack_void_CPass_CRenderable pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__suppressRenderStateChanges_void_ev_bool(IntPtr pObject, _suppressRenderStateChanges_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__areRenderStateChangesSuppressed_ev_bool(IntPtr pObject, _areRenderStateChangesSuppressed_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass_ev_bool_ev_bool(IntPtr pObject, _setPass_CallBack_CPass_CPass_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass_ev_bool(IntPtr pObject, _setPass_CallBack_CPass_CPass_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass(IntPtr pObject, _setPass_CallBack_CPass_CPass pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__markGpuParamsDirty_void_ev_uint16(IntPtr pObject, _markGpuParamsDirty_CallBack_void_ev_uint16 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__suppressShadows_void_ev_bool(IntPtr pObject, _suppressShadows_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__areShadowsSuppressed_ev_bool(IntPtr pObject, _areShadowsSuppressed_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(IntPtr pObject, _renderQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCameraRelativeRendering_void_ev_bool(IntPtr pObject, setCameraRelativeRendering_CallBack_void_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCameraRelativeRendering_ev_bool(IntPtr pObject, getCameraRelativeRendering_CallBack_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getHeightAt_Real_Real_Real_ev_real32(IntPtr pObject, getHeightAt_CallBack_Real_Real_Real_ev_real32 pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBestHeightAt_Real_Real_Real(IntPtr pObject, getBestHeightAt_CallBack_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getHeightAtTile_Real_Real_Real(IntPtr pObject, getHeightAtTile_CallBack_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real(IntPtr pObject, getTileEnvelope_CallBack_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addTempLayer_ev_bool_ILayer(IntPtr pObject, addTempLayer_CallBack_ev_bool_ILayer pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeTempLayer_ev_bool_ILayer(IntPtr pObject, removeTempLayer_CallBack_ev_bool_ILayer pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateQuadImage_void_bool_bool_bool(IntPtr pObject, updateQuadImage_CallBack_void_bool_bool_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real(IntPtr pObject, updateQuadImage_CallBack_void_bool_bool_bool_Real_Real_Real_Real pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool(IntPtr pObject, updateOBQ_CallBack_void_ev_bool_ev_bool_ev_bool_ev_bool pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCollisionDetectionEnable_void_ev_bool(IntPtr pObject, setCollisionDetectionEnable_CallBack_void_ev_bool pCallback);

				public override void RegisterCallBack()
				{
					if (this.NativeObject != IntPtr.Zero)
					{
						m__alertVisibleObjects_CallBack_void = EarthView_World_Graphic_COctreeSceneManager__alertVisibleObjects_void_Function;
						GC.KeepAlive(m__alertVisibleObjects_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__alertVisibleObjects_void(this.NativeObject, m__alertVisibleObjects_CallBack_void);
						m_createSceneNodeImpl_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Function;
						GC.KeepAlive(m_createSceneNodeImpl_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNodeImpl_CSceneNode(this.NativeObject, m_createSceneNodeImpl_CallBack_CSceneNode);
						m_createSceneNodeImpl_CallBack_CSceneNode_EVString = EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Function;
						GC.KeepAlive(m_createSceneNodeImpl_CallBack_CSceneNode_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNodeImpl_CSceneNode_EVString(this.NativeObject, m_createSceneNodeImpl_CallBack_CSceneNode_EVString);
						m_initRenderQueue_CallBack_void = EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Function;
						GC.KeepAlive(m_initRenderQueue_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_initRenderQueue_void(this.NativeObject, m_initRenderQueue_CallBack_void);
						m_deriveShadowCasterPass_CallBack_CPass_CPass = EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Function;
						GC.KeepAlive(m_deriveShadowCasterPass_CallBack_CPass_CPass);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_deriveShadowCasterPass_CPass_CPass(this.NativeObject, m_deriveShadowCasterPass_CallBack_CPass_CPass);
						m_deriveShadowReceiverPass_CallBack_CPass_CPass = EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Function;
						GC.KeepAlive(m_deriveShadowReceiverPass_CallBack_CPass_CPass);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_deriveShadowReceiverPass_CPass_CPass(this.NativeObject, m_deriveShadowReceiverPass_CallBack_CPass_CPass);
						m_validatePassForRendering_CallBack_ev_bool_CPass = EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Function;
						GC.KeepAlive(m_validatePassForRendering_CallBack_ev_bool_CPass);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_validatePassForRendering_ev_bool_CPass(this.NativeObject, m_validatePassForRendering_CallBack_ev_bool_CPass);
						m_validateRenderableForRendering_CallBack_ev_bool_CPass_CRenderable = EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Function;
						GC.KeepAlive(m_validateRenderableForRendering_CallBack_ev_bool_CPass_CRenderable);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable(this.NativeObject, m_validateRenderableForRendering_CallBack_ev_bool_CPass_CRenderable);
						m_createSkyboxPlane_CallBack_CMeshPtr_BoxPlane_Real_CQuaternion_EVString = EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Function;
						GC.KeepAlive(m_createSkyboxPlane_CallBack_CMeshPtr_BoxPlane_Real_CQuaternion_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString(this.NativeObject, m_createSkyboxPlane_CallBack_CMeshPtr_BoxPlane_Real_CQuaternion_EVString);
						m_createSkydomePlane_CallBack_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString = EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Function;
						GC.KeepAlive(m_createSkydomePlane_CallBack_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(this.NativeObject, m_createSkydomePlane_CallBack_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						m_useRenderableViewProjMode_CallBack_void_CRenderable_ev_bool = EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Function;
						GC.KeepAlive(m_useRenderableViewProjMode_CallBack_void_CRenderable_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool(this.NativeObject, m_useRenderableViewProjMode_CallBack_void_CRenderable_ev_bool);
						m_resetViewProjMode_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Function;
						GC.KeepAlive(m_resetViewProjMode_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetViewProjMode_void_ev_bool(this.NativeObject, m_resetViewProjMode_CallBack_void_ev_bool);
						m_firePreRenderQueues_CallBack_void = EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Function;
						GC.KeepAlive(m_firePreRenderQueues_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreRenderQueues_void(this.NativeObject, m_firePreRenderQueues_CallBack_void);
						m_firePostRenderQueues_CallBack_void = EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Function;
						GC.KeepAlive(m_firePostRenderQueues_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostRenderQueues_void(this.NativeObject, m_firePostRenderQueues_CallBack_void);
						m_fireRenderQueueStarted_CallBack_ev_bool_ev_uint8_EVString = EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Function;
						GC.KeepAlive(m_fireRenderQueueStarted_CallBack_ev_bool_ev_uint8_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString(this.NativeObject, m_fireRenderQueueStarted_CallBack_ev_bool_ev_uint8_EVString);
						m_fireRenderQueueEnded_CallBack_ev_bool_ev_uint8_EVString = EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Function;
						GC.KeepAlive(m_fireRenderQueueEnded_CallBack_ev_bool_ev_uint8_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString(this.NativeObject, m_fireRenderQueueEnded_CallBack_ev_bool_ev_uint8_EVString);
						m_fireRenderSingleObjectStarted_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool = EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Function;
						GC.KeepAlive(m_fireRenderSingleObjectStarted_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(this.NativeObject, m_fireRenderSingleObjectStarted_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool);
						m_fireRenderSingleObjectEnd_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool = EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Function;
						GC.KeepAlive(m_fireRenderSingleObjectEnd_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(this.NativeObject, m_fireRenderSingleObjectEnd_CallBack_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool);
						m_fireShadowTexturesUpdated_CallBack_void_ev_size_t = EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Function;
						GC.KeepAlive(m_fireShadowTexturesUpdated_CallBack_void_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesUpdated_void_ev_size_t(this.NativeObject, m_fireShadowTexturesUpdated_CallBack_void_ev_size_t);
						m_fireShadowTexturesPreCaster_CallBack_void_CLight_CCamera_ev_size_t = EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Function;
						GC.KeepAlive(m_fireShadowTexturesPreCaster_CallBack_void_CLight_CCamera_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t(this.NativeObject, m_fireShadowTexturesPreCaster_CallBack_void_CLight_CCamera_ev_size_t);
						m_fireShadowTexturesPreReceiver_CallBack_void_CLight_CFrustum = EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Function;
						GC.KeepAlive(m_fireShadowTexturesPreReceiver_CallBack_void_CLight_CFrustum);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum(this.NativeObject, m_fireShadowTexturesPreReceiver_CallBack_void_CLight_CFrustum);
						m_firePreUpdateSceneGraph_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Function;
						GC.KeepAlive(m_firePreUpdateSceneGraph_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreUpdateSceneGraph_void_CCamera(this.NativeObject, m_firePreUpdateSceneGraph_CallBack_void_CCamera);
						m_firePostUpdateSceneGraph_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Function;
						GC.KeepAlive(m_firePostUpdateSceneGraph_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostUpdateSceneGraph_void_CCamera(this.NativeObject, m_firePostUpdateSceneGraph_CallBack_void_CCamera);
						m_firePreFindVisibleObjects_CallBack_void_CViewport = EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Function;
						GC.KeepAlive(m_firePreFindVisibleObjects_CallBack_void_CViewport);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePreFindVisibleObjects_void_CViewport(this.NativeObject, m_firePreFindVisibleObjects_CallBack_void_CViewport);
						m_firePostFindVisibleObjects_CallBack_void_CViewport = EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Function;
						GC.KeepAlive(m_firePostFindVisibleObjects_CallBack_void_CViewport);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_firePostFindVisibleObjects_void_CViewport(this.NativeObject, m_firePostFindVisibleObjects_CallBack_void_CViewport);
						m_fireSceneManagerDestroyed_CallBack_void = EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Function;
						GC.KeepAlive(m_fireSceneManagerDestroyed_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_fireSceneManagerDestroyed_void(this.NativeObject, m_fireSceneManagerDestroyed_CallBack_void);
						m_setViewport_CallBack_void_CViewport = EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Function;
						GC.KeepAlive(m_setViewport_CallBack_void_CViewport);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setViewport_void_CViewport(this.NativeObject, m_setViewport_CallBack_void_CViewport);
						m_renderVisibleObjectsDefaultSequence_CallBack_void = EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Function;
						GC.KeepAlive(m_renderVisibleObjectsDefaultSequence_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderVisibleObjectsDefaultSequence_void(this.NativeObject, m_renderVisibleObjectsDefaultSequence_CallBack_void);
						m_renderVisibleObjectsCustomSequence_CallBack_void_CRenderQueueInvocationSequence = EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Function;
						GC.KeepAlive(m_renderVisibleObjectsCustomSequence_CallBack_void_CRenderQueueInvocationSequence);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence(this.NativeObject, m_renderVisibleObjectsCustomSequence_CallBack_void_CRenderQueueInvocationSequence);
						m_prepareRenderQueue_CallBack_void = EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Function;
						GC.KeepAlive(m_prepareRenderQueue_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareRenderQueue_void(this.NativeObject, m_prepareRenderQueue_CallBack_void);
						m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool_LightList = EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Function;
						GC.KeepAlive(m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList(this.NativeObject, m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool_LightList);
						m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool(this.NativeObject, m_renderSingleObject_CallBack_void_CRenderable_CPass_ev_bool_ev_bool);
						m_createAutoParamDataSource_CallBack_CAutoParamDataSource = EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Function;
						GC.KeepAlive(m_createAutoParamDataSource_CallBack_CAutoParamDataSource);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAutoParamDataSource_CAutoParamDataSource(this.NativeObject, m_createAutoParamDataSource_CallBack_CAutoParamDataSource);
						m_findLightsAffectingFrustum_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Function;
						GC.KeepAlive(m_findLightsAffectingFrustum_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_findLightsAffectingFrustum_void_CCamera(this.NativeObject, m_findLightsAffectingFrustum_CallBack_void_CCamera);
						m_initShadowVolumeMaterials_CallBack_void = EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Function;
						GC.KeepAlive(m_initShadowVolumeMaterials_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_initShadowVolumeMaterials_void(this.NativeObject, m_initShadowVolumeMaterials_CallBack_void);
						m_ensureShadowTexturesCreated_CallBack_void = EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Function;
						GC.KeepAlive(m_ensureShadowTexturesCreated_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_ensureShadowTexturesCreated_void(this.NativeObject, m_ensureShadowTexturesCreated_CallBack_void);
						m_destroyShadowTextures_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Function;
						GC.KeepAlive(m_destroyShadowTextures_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyShadowTextures_void(this.NativeObject, m_destroyShadowTextures_CallBack_void);
						m_prepareShadowTextures_CallBack_void_CCamera_CViewport_LightList = EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Function;
						GC.KeepAlive(m_prepareShadowTextures_CallBack_void_CCamera_CViewport_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList(this.NativeObject, m_prepareShadowTextures_CallBack_void_CCamera_CViewport_LightList);
						m_prepareShadowTextures_CallBack_void_CCamera_CViewport = EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Function;
						GC.KeepAlive(m_prepareShadowTextures_CallBack_void_CCamera_CViewport);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareShadowTextures_void_CCamera_CViewport(this.NativeObject, m_prepareShadowTextures_CallBack_void_CCamera_CViewport);
						m_setImageDefaultMaterial_CallBack_void_CMaterialPtr = EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Function;
						GC.KeepAlive(m_setImageDefaultMaterial_CallBack_void_CMaterialPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setImageDefaultMaterial_void_CMaterialPtr(this.NativeObject, m_setImageDefaultMaterial_CallBack_void_CMaterialPtr);
						m_setImageUseDefaultMaterial_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Function;
						GC.KeepAlive(m_setImageUseDefaultMaterial_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setImageUseDefaultMaterial_void_ev_bool(this.NativeObject, m_setImageUseDefaultMaterial_CallBack_void_ev_bool);
						m_getSunPosition_CallBack_CVector3 = EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Function;
						GC.KeepAlive(m_getSunPosition_CallBack_CVector3);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSunPosition_CVector3(this.NativeObject, m_getSunPosition_CallBack_CVector3);
						m_setAtmosphereVisible_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Function;
						GC.KeepAlive(m_setAtmosphereVisible_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setAtmosphereVisible_void_ev_bool(this.NativeObject, m_setAtmosphereVisible_CallBack_void_ev_bool);
						m_storeAtmosphereVisibleState_CallBack_void = EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Function;
						GC.KeepAlive(m_storeAtmosphereVisibleState_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_storeAtmosphereVisibleState_void(this.NativeObject, m_storeAtmosphereVisibleState_CallBack_void);
						m_restoreAtmosphereVisibleState_CallBack_void = EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Function;
						GC.KeepAlive(m_restoreAtmosphereVisibleState_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_restoreAtmosphereVisibleState_void(this.NativeObject, m_restoreAtmosphereVisibleState_CallBack_void);
						m_setSunVisible_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Function;
						GC.KeepAlive(m_setSunVisible_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSunVisible_void_ev_bool(this.NativeObject, m_setSunVisible_CallBack_void_ev_bool);
						m__pauseRendering_CallBack_RenderContext = EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Function;
						GC.KeepAlive(m__pauseRendering_CallBack_RenderContext);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__pauseRendering_RenderContext(this.NativeObject, m__pauseRendering_CallBack_RenderContext);
						m__resumeRendering_CallBack_void_RenderContext = EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Function;
						GC.KeepAlive(m__resumeRendering_CallBack_void_RenderContext);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__resumeRendering_void_RenderContext(this.NativeObject, m__resumeRendering_CallBack_void_RenderContext);
						m_renderShadowVolumesToStencil_CallBack_void_CLight_CCamera_ev_bool = EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Function;
						GC.KeepAlive(m_renderShadowVolumesToStencil_CallBack_void_CLight_CCamera_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool(this.NativeObject, m_renderShadowVolumesToStencil_CallBack_void_CLight_CCamera_ev_bool);
						m_setShadowVolumeStencilState_CallBack_void_ev_bool_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_setShadowVolumeStencilState_CallBack_void_ev_bool_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool(this.NativeObject, m_setShadowVolumeStencilState_CallBack_void_ev_bool_ev_bool_ev_bool);
						m_findShadowCastersForLight_CallBack_ShadowCasterList_CLight_CCamera = EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Function;
						GC.KeepAlive(m_findShadowCastersForLight_CallBack_ShadowCasterList_CLight_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera(this.NativeObject, m_findShadowCastersForLight_CallBack_ShadowCasterList_CLight_CCamera);
						m_renderBasicQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderBasicQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderBasicQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderAdditiveStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderAdditiveStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderAdditiveStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderModulativeStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderModulativeStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderModulativeStencilShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderTextureShadowCasterQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderTextureShadowCasterQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderTextureShadowCasterQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderTextureShadowReceiverQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderTextureShadowReceiverQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderTextureShadowReceiverQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderModulativeTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderModulativeTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderModulativeTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderAdditiveTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m_renderAdditiveTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m_renderAdditiveTextureShadowedQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList = EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Function;
						GC.KeepAlive(m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(this.NativeObject, m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList);
						m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(this.NativeObject, m_renderObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool);
						m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList = EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Function;
						GC.KeepAlive(m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(this.NativeObject, m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList);
						m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(this.NativeObject, m_renderTransparentShadowCasterObjects_CallBack_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool);
						m_updateRenderQueueSplitOptions_CallBack_void = EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Function;
						GC.KeepAlive(m_updateRenderQueueSplitOptions_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateRenderQueueSplitOptions_void(this.NativeObject, m_updateRenderQueueSplitOptions_CallBack_void);
						m_updateRenderQueueGroupSplitOptions_CallBack_void_CRenderQueueGroup_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_updateRenderQueueGroupSplitOptions_CallBack_void_CRenderQueueGroup_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool(this.NativeObject, m_updateRenderQueueGroupSplitOptions_CallBack_void_CRenderQueueGroup_ev_bool_ev_bool);
						m_buildAndSetScissor_CallBack_ClipResult_LightList_CCamera = EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Function;
						GC.KeepAlive(m_buildAndSetScissor_CallBack_ClipResult_LightList_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera(this.NativeObject, m_buildAndSetScissor_CallBack_ClipResult_LightList_CCamera);
						m_buildScissor_CallBack_void_CLight_CCamera_RealRect = EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Function;
						GC.KeepAlive(m_buildScissor_CallBack_void_CLight_CCamera_RealRect);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildScissor_void_CLight_CCamera_RealRect(this.NativeObject, m_buildScissor_CallBack_void_CLight_CCamera_RealRect);
						m_resetScissor_CallBack_void = EarthView_World_Graphic_CSceneManager_resetScissor_void_Function;
						GC.KeepAlive(m_resetScissor_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetScissor_void(this.NativeObject, m_resetScissor_CallBack_void);
						m_buildAndSetLightClip_CallBack_ClipResult_LightList = EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Function;
						GC.KeepAlive(m_buildAndSetLightClip_CallBack_ClipResult_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildAndSetLightClip_ClipResult_LightList(this.NativeObject, m_buildAndSetLightClip_CallBack_ClipResult_LightList);
						m_buildLightClip_CallBack_void_CLight_PlaneList = EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Function;
						GC.KeepAlive(m_buildLightClip_CallBack_void_CLight_PlaneList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_buildLightClip_void_CLight_PlaneList(this.NativeObject, m_buildLightClip_CallBack_void_CLight_PlaneList);
						m_resetLightClip_CallBack_void = EarthView_World_Graphic_CSceneManager_resetLightClip_void_Function;
						GC.KeepAlive(m_resetLightClip_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_resetLightClip_void(this.NativeObject, m_resetLightClip_CallBack_void);
						m_checkCachedLightClippingInfo_CallBack_void = EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Function;
						GC.KeepAlive(m_checkCachedLightClippingInfo_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_checkCachedLightClippingInfo_void(this.NativeObject, m_checkCachedLightClippingInfo_CallBack_void);
						m_useLights_CallBack_void_LightList_ev_uint16 = EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Function;
						GC.KeepAlive(m_useLights_CallBack_void_LightList_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useLights_void_LightList_ev_uint16(this.NativeObject, m_useLights_CallBack_void_LightList_ev_uint16);
						m_setViewMatrix_CallBack_void_CMatrix4 = EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Function;
						GC.KeepAlive(m_setViewMatrix_CallBack_void_CMatrix4);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setViewMatrix_void_CMatrix4(this.NativeObject, m_setViewMatrix_CallBack_void_CMatrix4);
						m_useLightsGpuProgram_CallBack_void_CPass_LightList = EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Function;
						GC.KeepAlive(m_useLightsGpuProgram_CallBack_void_CPass_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_useLightsGpuProgram_void_CPass_LightList(this.NativeObject, m_useLightsGpuProgram_CallBack_void_CPass_LightList);
						m_bindGpuProgram_CallBack_void_CGpuProgram = EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Function;
						GC.KeepAlive(m_bindGpuProgram_CallBack_void_CGpuProgram);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_bindGpuProgram_void_CGpuProgram(this.NativeObject, m_bindGpuProgram_CallBack_void_CGpuProgram);
						m_updateGpuProgramParameters_CallBack_void_CPass = EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Function;
						GC.KeepAlive(m_updateGpuProgramParameters_CallBack_void_CPass);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateGpuProgramParameters_void_CPass(this.NativeObject, m_updateGpuProgramParameters_CallBack_void_CPass);
						m_getTypeName_CallBack_EVString = EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Function;
						GC.KeepAlive(m_getTypeName_CallBack_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getTypeName_EVString(this.NativeObject, m_getTypeName_CallBack_EVString);
						m_createCamera_CallBack_CCamera_EVString = EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Function;
						GC.KeepAlive(m_createCamera_CallBack_CCamera_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createCamera_CCamera_EVString(this.NativeObject, m_createCamera_CallBack_CCamera_EVString);
						m_getCamera_CallBack_CCamera_EVString = EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Function;
						GC.KeepAlive(m_getCamera_CallBack_CCamera_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCamera_CCamera_EVString(this.NativeObject, m_getCamera_CallBack_CCamera_EVString);
						m_hasCamera_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasCamera_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasCamera_ev_bool_EVString(this.NativeObject, m_hasCamera_CallBack_ev_bool_EVString);
						m_destroyCamera_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Function;
						GC.KeepAlive(m_destroyCamera_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyCamera_void_CCamera(this.NativeObject, m_destroyCamera_CallBack_void_CCamera);
						m_destroyCamera_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Function;
						GC.KeepAlive(m_destroyCamera_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyCamera_void_EVString(this.NativeObject, m_destroyCamera_CallBack_void_EVString);
						m_destroyAllCameras_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Function;
						GC.KeepAlive(m_destroyAllCameras_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllCameras_void(this.NativeObject, m_destroyAllCameras_CallBack_void);
						m_createLight_CallBack_CLight_EVString = EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Function;
						GC.KeepAlive(m_createLight_CallBack_CLight_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createLight_CLight_EVString(this.NativeObject, m_createLight_CallBack_CLight_EVString);
						m_createLight_CallBack_CLight = EarthView_World_Graphic_CSceneManager_createLight_CLight_Function;
						GC.KeepAlive(m_createLight_CallBack_CLight);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createLight_CLight(this.NativeObject, m_createLight_CallBack_CLight);
						m_getLightCount_CallBack_ev_uint16 = EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Function;
						GC.KeepAlive(m_getLightCount_CallBack_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightCount_ev_uint16(this.NativeObject, m_getLightCount_CallBack_ev_uint16);
						m_getLight_CallBack_CLight_ev_uint16 = EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Function;
						GC.KeepAlive(m_getLight_CallBack_CLight_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLight_CLight_ev_uint16(this.NativeObject, m_getLight_CallBack_CLight_ev_uint16);
						m_getLight_CallBack_CLight_EVString = EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Function;
						GC.KeepAlive(m_getLight_CallBack_CLight_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLight_CLight_EVString(this.NativeObject, m_getLight_CallBack_CLight_EVString);
						m_hasLight_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasLight_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasLight_ev_bool_EVString(this.NativeObject, m_hasLight_CallBack_ev_bool_EVString);
						m_getLightClippingPlanes_CallBack_PlaneList_CLight = EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Function;
						GC.KeepAlive(m_getLightClippingPlanes_CallBack_PlaneList_CLight);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightClippingPlanes_PlaneList_CLight(this.NativeObject, m_getLightClippingPlanes_CallBack_PlaneList_CLight);
						m_getLightScissorRect_CallBack_RealRect_CLight_CCamera = EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Function;
						GC.KeepAlive(m_getLightScissorRect_CallBack_RealRect_CLight_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getLightScissorRect_RealRect_CLight_CCamera(this.NativeObject, m_getLightScissorRect_CallBack_RealRect_CLight_CCamera);
						m_destroyLight_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Function;
						GC.KeepAlive(m_destroyLight_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyLight_void_EVString(this.NativeObject, m_destroyLight_CallBack_void_EVString);
						m_destroyLight_CallBack_void_CLight = EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Function;
						GC.KeepAlive(m_destroyLight_CallBack_void_CLight);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyLight_void_CLight(this.NativeObject, m_destroyLight_CallBack_void_CLight);
						m_destroyAllLights_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Function;
						GC.KeepAlive(m_destroyAllLights_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllLights_void(this.NativeObject, m_destroyAllLights_CallBack_void);
						m_getSoftShadowTexName_CallBack_EVString = EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Function;
						GC.KeepAlive(m_getSoftShadowTexName_CallBack_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowTexName_EVString(this.NativeObject, m_getSoftShadowTexName_CallBack_EVString);
						m_getShadowTexCam_CallBack_CCamera = EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Function;
						GC.KeepAlive(m_getShadowTexCam_CallBack_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTexCam_CCamera(this.NativeObject, m_getShadowTexCam_CallBack_CCamera);
						m_getSoftShadowProjMatrix_CallBack_CMatrix4_ev_uint16 = EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Function;
						GC.KeepAlive(m_getSoftShadowProjMatrix_CallBack_CMatrix4_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16(this.NativeObject, m_getSoftShadowProjMatrix_CallBack_CMatrix4_ev_uint16);
						m_getCascadeEyeSpaceDepthArray_CallBack_CVector4 = EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Function;
						GC.KeepAlive(m_getCascadeEyeSpaceDepthArray_CallBack_CVector4);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadeEyeSpaceDepthArray_CVector4(this.NativeObject, m_getCascadeEyeSpaceDepthArray_CallBack_CVector4);
						m_getSoftShadowNearClip_CallBack_float_ev_uint8 = EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Function;
						GC.KeepAlive(m_getSoftShadowNearClip_CallBack_float_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowNearClip_float_ev_uint8(this.NativeObject, m_getSoftShadowNearClip_CallBack_float_ev_uint8);
						m_getSoftShadowFarClip_CallBack_float_ev_uint8 = EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Function;
						GC.KeepAlive(m_getSoftShadowFarClip_CallBack_float_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowFarClip_float_ev_uint8(this.NativeObject, m_getSoftShadowFarClip_CallBack_float_ev_uint8);
						m_getIsUseSoftShadowFitToCascadesMode_CallBack_bool = EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Function;
						GC.KeepAlive(m_getIsUseSoftShadowFitToCascadesMode_CallBack_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getIsUseSoftShadowFitToCascadesMode_bool(this.NativeObject, m_getIsUseSoftShadowFitToCascadesMode_CallBack_bool);
						m_setIsUseSoftShadowFitToCascadesMode_CallBack_void_bool = EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Function;
						GC.KeepAlive(m_setIsUseSoftShadowFitToCascadesMode_CallBack_void_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool(this.NativeObject, m_setIsUseSoftShadowFitToCascadesMode_CallBack_void_bool);
						m_getCurrentClipIndex_CallBack_ev_uint8 = EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Function;
						GC.KeepAlive(m_getCurrentClipIndex_CallBack_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCurrentClipIndex_ev_uint8(this.NativeObject, m_getCurrentClipIndex_CallBack_ev_uint8);
						m_getIsUseSoftShadowTechnique_CallBack_bool = EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Function;
						GC.KeepAlive(m_getIsUseSoftShadowTechnique_CallBack_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getIsUseSoftShadowTechnique_bool(this.NativeObject, m_getIsUseSoftShadowTechnique_CallBack_bool);
						m_setIsUseSoftShadowTechnique_CallBack_void_bool = EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Function;
						GC.KeepAlive(m_setIsUseSoftShadowTechnique_CallBack_void_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setIsUseSoftShadowTechnique_void_bool(this.NativeObject, m_setIsUseSoftShadowTechnique_CallBack_void_bool);
						m_getCascadePartitionsPercent_CallBack_float = EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Function;
						GC.KeepAlive(m_getCascadePartitionsPercent_CallBack_float);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadePartitionsPercent_float(this.NativeObject, m_getCascadePartitionsPercent_CallBack_float);
						m_setCascadePartitionsPercent_CallBack_void_float = EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Function;
						GC.KeepAlive(m_setCascadePartitionsPercent_CallBack_void_float);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCascadePartitionsPercent_void_float(this.NativeObject, m_setCascadePartitionsPercent_CallBack_void_float);
						m_getCascadePartitionsDistance_CallBack_int_ev_uint8 = EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Function;
						GC.KeepAlive(m_getCascadePartitionsDistance_CallBack_int_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCascadePartitionsDistance_int_ev_uint8(this.NativeObject, m_getCascadePartitionsDistance_CallBack_int_ev_uint8);
						m_setCascadePartitionsDistance_CallBack_void_ev_uint8_ev_uint8 = EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Function;
						GC.KeepAlive(m_setCascadePartitionsDistance_CallBack_void_ev_uint8_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8(this.NativeObject, m_setCascadePartitionsDistance_CallBack_void_ev_uint8_ev_uint8);
						m_getSoftShadowOffsetFormat_CallBack_PixelFormat = EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Function;
						GC.KeepAlive(m_getSoftShadowOffsetFormat_CallBack_PixelFormat);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowOffsetFormat_PixelFormat(this.NativeObject, m_getSoftShadowOffsetFormat_CallBack_PixelFormat);
						m_checkShadowCasterInFrustum_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Function;
						GC.KeepAlive(m_checkShadowCasterInFrustum_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_checkShadowCasterInFrustum_void_CCamera(this.NativeObject, m_checkShadowCasterInFrustum_CallBack_void_CCamera);
						m_hasShadowCasterInFrustum_CallBack_bool = EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Function;
						GC.KeepAlive(m_hasShadowCasterInFrustum_CallBack_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasShadowCasterInFrustum_bool(this.NativeObject, m_hasShadowCasterInFrustum_CallBack_bool);
						m_getSoftShadowLightBleedPower_CallBack_Real = EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Function;
						GC.KeepAlive(m_getSoftShadowLightBleedPower_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowLightBleedPower_Real(this.NativeObject, m_getSoftShadowLightBleedPower_CallBack_Real);
						m_setSoftShadowLightBleedPower_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Function;
						GC.KeepAlive(m_setSoftShadowLightBleedPower_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowLightBleedPower_void_Real(this.NativeObject, m_setSoftShadowLightBleedPower_CallBack_void_Real);
						m_getSoftShadowDepthOffset_CallBack_Real = EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Function;
						GC.KeepAlive(m_getSoftShadowDepthOffset_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowDepthOffset_Real(this.NativeObject, m_getSoftShadowDepthOffset_CallBack_Real);
						m_setSoftShadowDepthOffset_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Function;
						GC.KeepAlive(m_setSoftShadowDepthOffset_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowDepthOffset_void_Real(this.NativeObject, m_setSoftShadowDepthOffset_CallBack_void_Real);
						m_getSoftShadowNormalFactor_CallBack_float = EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Function;
						GC.KeepAlive(m_getSoftShadowNormalFactor_CallBack_float);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSoftShadowNormalFactor_float(this.NativeObject, m_getSoftShadowNormalFactor_CallBack_float);
						m_setSoftShadowNormalFactor_CallBack_void_float = EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Function;
						GC.KeepAlive(m_setSoftShadowNormalFactor_CallBack_void_float);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSoftShadowNormalFactor_void_float(this.NativeObject, m_setSoftShadowNormalFactor_CallBack_void_float);
						m__notifyLightsDirty_CallBack_void = EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Function;
						GC.KeepAlive(m__notifyLightsDirty_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__notifyLightsDirty_void(this.NativeObject, m__notifyLightsDirty_CallBack_void);
						m__getLightsAffectingFrustum_CallBack_LightList = EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Function;
						GC.KeepAlive(m__getLightsAffectingFrustum_CallBack_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__getLightsAffectingFrustum_LightList(this.NativeObject, m__getLightsAffectingFrustum_CallBack_LightList);
						m__populateLightList_CallBack_void_CVector3_Real_LightList_ev_uint32 = EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Function;
						GC.KeepAlive(m__populateLightList_CallBack_void_CVector3_Real_LightList_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32(this.NativeObject, m__populateLightList_CallBack_void_CVector3_Real_LightList_ev_uint32);
						m__populateLightList_CallBack_void_CVector3_Real_LightList = EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Function;
						GC.KeepAlive(m__populateLightList_CallBack_void_CVector3_Real_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CVector3_Real_LightList(this.NativeObject, m__populateLightList_CallBack_void_CVector3_Real_LightList);
						m_showImage_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Function;
						GC.KeepAlive(m_showImage_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showImage_void_ev_bool(this.NativeObject, m_showImage_CallBack_void_ev_bool);
						m_getImageVisible_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Function;
						GC.KeepAlive(m_getImageVisible_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getImageVisible_ev_bool(this.NativeObject, m_getImageVisible_CallBack_ev_bool);
						m_showOcean_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Function;
						GC.KeepAlive(m_showOcean_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showOcean_void_ev_bool(this.NativeObject, m_showOcean_CallBack_void_ev_bool);
						m_getOceanVisible_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Function;
						GC.KeepAlive(m_getOceanVisible_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOceanVisible_ev_bool(this.NativeObject, m_getOceanVisible_CallBack_ev_bool);
						m__populateLightList_CallBack_void_CSceneNode_Real_LightList_ev_uint32 = EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Function;
						GC.KeepAlive(m__populateLightList_CallBack_void_CSceneNode_Real_LightList_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32(this.NativeObject, m__populateLightList_CallBack_void_CSceneNode_Real_LightList_ev_uint32);
						m__populateLightList_CallBack_void_CSceneNode_Real_LightList = EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Function;
						GC.KeepAlive(m__populateLightList_CallBack_void_CSceneNode_Real_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__populateLightList_void_CSceneNode_Real_LightList(this.NativeObject, m__populateLightList_CallBack_void_CSceneNode_Real_LightList);
						m_createSceneNode_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Function;
						GC.KeepAlive(m_createSceneNode_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNode_CSceneNode(this.NativeObject, m_createSceneNode_CallBack_CSceneNode);
						m_createSceneNode_CallBack_CSceneNode_EVString = EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Function;
						GC.KeepAlive(m_createSceneNode_CallBack_CSceneNode_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSceneNode_CSceneNode_EVString(this.NativeObject, m_createSceneNode_CallBack_CSceneNode_EVString);
						m_destroySceneNode_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Function;
						GC.KeepAlive(m_destroySceneNode_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroySceneNode_void_EVString(this.NativeObject, m_destroySceneNode_CallBack_void_EVString);
						m_destroySceneNode_CallBack_void_CSceneNode = EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Function;
						GC.KeepAlive(m_destroySceneNode_CallBack_void_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroySceneNode_void_CSceneNode(this.NativeObject, m_destroySceneNode_CallBack_void_CSceneNode);
						m_getRootSceneNode_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Function;
						GC.KeepAlive(m_getRootSceneNode_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRootSceneNode_CSceneNode(this.NativeObject, m_getRootSceneNode_CallBack_CSceneNode);
						m_getSceneNode_CallBack_CSceneNode_EVString = EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Function;
						GC.KeepAlive(m_getSceneNode_CallBack_CSceneNode_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSceneNode_CSceneNode_EVString(this.NativeObject, m_getSceneNode_CallBack_CSceneNode_EVString);
						m_hasSceneNode_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasSceneNode_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasSceneNode_ev_bool_EVString(this.NativeObject, m_hasSceneNode_CallBack_ev_bool_EVString);
						m_createEntity_CallBack_CEntity_EVString_EVString_IntVector_EVString = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_EVString_IntVector_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_EVString_IntVector_EVString);
						m_createEntity_CallBack_CEntity_EVString_EVString_EVString = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_EVString(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_EVString_EVString);
						m_createEntity_CallBack_CEntity_EVString_EVString_IntVector = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_EVString_IntVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString_IntVector(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_EVString_IntVector);
						m_createEntity_CallBack_CEntity_EVString_EVString = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_EVString(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_EVString);
						m_createEntity_CallBack_CEntity_EVString_CMeshPtr_IntVector = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_CMeshPtr_IntVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_CMeshPtr_IntVector);
						m_createEntity_CallBack_CEntity_EVString_CMeshPtr = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_CMeshPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_CMeshPtr(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_CMeshPtr);
						m_createEntity_CallBack_CEntity_CMeshPtr_IntVector = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_CMeshPtr_IntVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_CMeshPtr_IntVector(this.NativeObject, m_createEntity_CallBack_CEntity_CMeshPtr_IntVector);
						m_createEntity_CallBack_CEntity_CMeshPtr = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_CMeshPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_CMeshPtr(this.NativeObject, m_createEntity_CallBack_CEntity_CMeshPtr);
						m_createEntity_CallBack_CEntity_EVString_IntVector = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_IntVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_IntVector(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_IntVector);
						m_createEntity_CallBack_CEntity_EVString = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString(this.NativeObject, m_createEntity_CallBack_CEntity_EVString);
						m_createEntity_CallBack_CEntity_EVString_PrefabType = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_EVString_PrefabType);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_EVString_PrefabType(this.NativeObject, m_createEntity_CallBack_CEntity_EVString_PrefabType);
						m_createEntity_CallBack_CEntity_PrefabType = EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Function;
						GC.KeepAlive(m_createEntity_CallBack_CEntity_PrefabType);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createEntity_CEntity_PrefabType(this.NativeObject, m_createEntity_CallBack_CEntity_PrefabType);
						m_getEntity_CallBack_CEntity_EVString = EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Function;
						GC.KeepAlive(m_getEntity_CallBack_CEntity_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getEntity_CEntity_EVString(this.NativeObject, m_getEntity_CallBack_CEntity_EVString);
						m_hasEntity_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasEntity_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasEntity_ev_bool_EVString(this.NativeObject, m_hasEntity_CallBack_ev_bool_EVString);
						m_destroyEntity_CallBack_void_CEntity = EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Function;
						GC.KeepAlive(m_destroyEntity_CallBack_void_CEntity);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyEntity_void_CEntity(this.NativeObject, m_destroyEntity_CallBack_void_CEntity);
						m_destroyEntity_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Function;
						GC.KeepAlive(m_destroyEntity_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyEntity_void_EVString(this.NativeObject, m_destroyEntity_CallBack_void_EVString);
						m_destroyAllEntities_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Function;
						GC.KeepAlive(m_destroyAllEntities_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllEntities_void(this.NativeObject, m_destroyAllEntities_CallBack_void);
						m_createManualObject_CallBack_CManualObject_EVString = EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Function;
						GC.KeepAlive(m_createManualObject_CallBack_CManualObject_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createManualObject_CManualObject_EVString(this.NativeObject, m_createManualObject_CallBack_CManualObject_EVString);
						m_createManualObject_CallBack_CManualObject = EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Function;
						GC.KeepAlive(m_createManualObject_CallBack_CManualObject);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createManualObject_CManualObject(this.NativeObject, m_createManualObject_CallBack_CManualObject);
						m_getManualObject_CallBack_CManualObject_EVString = EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Function;
						GC.KeepAlive(m_getManualObject_CallBack_CManualObject_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getManualObject_CManualObject_EVString(this.NativeObject, m_getManualObject_CallBack_CManualObject_EVString);
						m_hasManualObject_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasManualObject_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasManualObject_ev_bool_EVString(this.NativeObject, m_hasManualObject_CallBack_ev_bool_EVString);
						m_destroyManualObject_CallBack_void_CManualObject = EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Function;
						GC.KeepAlive(m_destroyManualObject_CallBack_void_CManualObject);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyManualObject_void_CManualObject(this.NativeObject, m_destroyManualObject_CallBack_void_CManualObject);
						m_destroyManualObject_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Function;
						GC.KeepAlive(m_destroyManualObject_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyManualObject_void_EVString(this.NativeObject, m_destroyManualObject_CallBack_void_EVString);
						m_destroyAllManualObjects_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Function;
						GC.KeepAlive(m_destroyAllManualObjects_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllManualObjects_void(this.NativeObject, m_destroyAllManualObjects_CallBack_void);
						m_usingWebMercator_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Function;
						GC.KeepAlive(m_usingWebMercator_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_usingWebMercator_ev_bool(this.NativeObject, m_usingWebMercator_CallBack_ev_bool);
						m_createBillboardChain_CallBack_CBillboardChain_EVString = EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Function;
						GC.KeepAlive(m_createBillboardChain_CallBack_CBillboardChain_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardChain_CBillboardChain_EVString(this.NativeObject, m_createBillboardChain_CallBack_CBillboardChain_EVString);
						m_createBillboardChain_CallBack_CBillboardChain = EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Function;
						GC.KeepAlive(m_createBillboardChain_CallBack_CBillboardChain);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardChain_CBillboardChain(this.NativeObject, m_createBillboardChain_CallBack_CBillboardChain);
						m_getBillboardChain_CallBack_CBillboardChain_EVString = EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Function;
						GC.KeepAlive(m_getBillboardChain_CallBack_CBillboardChain_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBillboardChain_CBillboardChain_EVString(this.NativeObject, m_getBillboardChain_CallBack_CBillboardChain_EVString);
						m_hasBillboardChain_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasBillboardChain_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasBillboardChain_ev_bool_EVString(this.NativeObject, m_hasBillboardChain_CallBack_ev_bool_EVString);
						m_destroyBillboardChain_CallBack_void_CBillboardChain = EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Function;
						GC.KeepAlive(m_destroyBillboardChain_CallBack_void_CBillboardChain);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardChain_void_CBillboardChain(this.NativeObject, m_destroyBillboardChain_CallBack_void_CBillboardChain);
						m_destroyBillboardChain_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Function;
						GC.KeepAlive(m_destroyBillboardChain_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardChain_void_EVString(this.NativeObject, m_destroyBillboardChain_CallBack_void_EVString);
						m_destroyAllBillboardChains_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Function;
						GC.KeepAlive(m_destroyAllBillboardChains_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllBillboardChains_void(this.NativeObject, m_destroyAllBillboardChains_CallBack_void);
						m_createRibbonTrail_CallBack_CRibbonTrail_EVString = EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Function;
						GC.KeepAlive(m_createRibbonTrail_CallBack_CRibbonTrail_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRibbonTrail_CRibbonTrail_EVString(this.NativeObject, m_createRibbonTrail_CallBack_CRibbonTrail_EVString);
						m_createRibbonTrail_CallBack_CRibbonTrail = EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Function;
						GC.KeepAlive(m_createRibbonTrail_CallBack_CRibbonTrail);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRibbonTrail_CRibbonTrail(this.NativeObject, m_createRibbonTrail_CallBack_CRibbonTrail);
						m_getRibbonTrail_CallBack_CRibbonTrail_EVString = EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Function;
						GC.KeepAlive(m_getRibbonTrail_CallBack_CRibbonTrail_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRibbonTrail_CRibbonTrail_EVString(this.NativeObject, m_getRibbonTrail_CallBack_CRibbonTrail_EVString);
						m_hasRibbonTrail_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasRibbonTrail_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasRibbonTrail_ev_bool_EVString(this.NativeObject, m_hasRibbonTrail_CallBack_ev_bool_EVString);
						m_destroyRibbonTrail_CallBack_void_CRibbonTrail = EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Function;
						GC.KeepAlive(m_destroyRibbonTrail_CallBack_void_CRibbonTrail);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyRibbonTrail_void_CRibbonTrail(this.NativeObject, m_destroyRibbonTrail_CallBack_void_CRibbonTrail);
						m_destroyRibbonTrail_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Function;
						GC.KeepAlive(m_destroyRibbonTrail_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyRibbonTrail_void_EVString(this.NativeObject, m_destroyRibbonTrail_CallBack_void_EVString);
						m_destroyAllRibbonTrails_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Function;
						GC.KeepAlive(m_destroyAllRibbonTrails_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllRibbonTrails_void(this.NativeObject, m_destroyAllRibbonTrails_CallBack_void);
						m_createParticleSystem_CallBack_CParticleSystem_EVString_EVString = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_EVString(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_EVString_EVString);
						m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t_EVString = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t_EVString);
						m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_EVString_ev_size_t);
						m_createParticleSystem_CallBack_CParticleSystem_EVString = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_EVString(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_EVString);
						m_createParticleSystem_CallBack_CParticleSystem_ev_size_t_EVString = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_ev_size_t_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_ev_size_t_EVString);
						m_createParticleSystem_CallBack_CParticleSystem_ev_size_t = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem_ev_size_t(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem_ev_size_t);
						m_createParticleSystem_CallBack_CParticleSystem = EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Function;
						GC.KeepAlive(m_createParticleSystem_CallBack_CParticleSystem);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createParticleSystem_CParticleSystem(this.NativeObject, m_createParticleSystem_CallBack_CParticleSystem);
						m_getParticleSystem_CallBack_CParticleSystem_EVString = EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Function;
						GC.KeepAlive(m_getParticleSystem_CallBack_CParticleSystem_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getParticleSystem_CParticleSystem_EVString(this.NativeObject, m_getParticleSystem_CallBack_CParticleSystem_EVString);
						m_hasParticleSystem_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasParticleSystem_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasParticleSystem_ev_bool_EVString(this.NativeObject, m_hasParticleSystem_CallBack_ev_bool_EVString);
						m_destroyParticleSystem_CallBack_void_CParticleSystem = EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Function;
						GC.KeepAlive(m_destroyParticleSystem_CallBack_void_CParticleSystem);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyParticleSystem_void_CParticleSystem(this.NativeObject, m_destroyParticleSystem_CallBack_void_CParticleSystem);
						m_destroyParticleSystem_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Function;
						GC.KeepAlive(m_destroyParticleSystem_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyParticleSystem_void_EVString(this.NativeObject, m_destroyParticleSystem_CallBack_void_EVString);
						m_destroyAllParticleSystems_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Function;
						GC.KeepAlive(m_destroyAllParticleSystems_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllParticleSystems_void(this.NativeObject, m_destroyAllParticleSystems_CallBack_void);
						m_clearScene_CallBack_void = EarthView_World_Graphic_CSceneManager_clearScene_void_Function;
						GC.KeepAlive(m_clearScene_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_clearScene_void(this.NativeObject, m_clearScene_CallBack_void);
						m_prepareWorldGeometry_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Function;
						GC.KeepAlive(m_prepareWorldGeometry_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_EVString(this.NativeObject, m_prepareWorldGeometry_CallBack_void_EVString);
						m_prepareWorldGeometry_CallBack_void_DataStreamPtr_EVString = EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Function;
						GC.KeepAlive(m_prepareWorldGeometry_CallBack_void_DataStreamPtr_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString(this.NativeObject, m_prepareWorldGeometry_CallBack_void_DataStreamPtr_EVString);
						m_prepareWorldGeometry_CallBack_void_DataStreamPtr = EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Function;
						GC.KeepAlive(m_prepareWorldGeometry_CallBack_void_DataStreamPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_prepareWorldGeometry_void_DataStreamPtr(this.NativeObject, m_prepareWorldGeometry_CallBack_void_DataStreamPtr);
						m_setWorldGeometry_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Function;
						GC.KeepAlive(m_setWorldGeometry_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_EVString(this.NativeObject, m_setWorldGeometry_CallBack_void_EVString);
						m_setWorldGeometry_CallBack_void_DataStreamPtr_EVString = EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Function;
						GC.KeepAlive(m_setWorldGeometry_CallBack_void_DataStreamPtr_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_DataStreamPtr_EVString(this.NativeObject, m_setWorldGeometry_CallBack_void_DataStreamPtr_EVString);
						m_setWorldGeometry_CallBack_void_DataStreamPtr = EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Function;
						GC.KeepAlive(m_setWorldGeometry_CallBack_void_DataStreamPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometry_void_DataStreamPtr(this.NativeObject, m_setWorldGeometry_CallBack_void_DataStreamPtr);
						m_estimateWorldGeometry_CallBack_ev_size_t_EVString = EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Function;
						GC.KeepAlive(m_estimateWorldGeometry_CallBack_ev_size_t_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_EVString(this.NativeObject, m_estimateWorldGeometry_CallBack_ev_size_t_EVString);
						m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr_EVString = EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Function;
						GC.KeepAlive(m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString(this.NativeObject, m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr_EVString);
						m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr = EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Function;
						GC.KeepAlive(m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr(this.NativeObject, m_estimateWorldGeometry_CallBack_ev_size_t_DataStreamPtr);
						m_getSuggestedViewpoint_CallBack_ViewPoint_ev_bool = EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Function;
						GC.KeepAlive(m_getSuggestedViewpoint_CallBack_ViewPoint_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool(this.NativeObject, m_getSuggestedViewpoint_CallBack_ViewPoint_ev_bool);
						m_getSuggestedViewpoint_CallBack_ViewPoint = EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Function;
						GC.KeepAlive(m_getSuggestedViewpoint_CallBack_ViewPoint);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSuggestedViewpoint_ViewPoint(this.NativeObject, m_getSuggestedViewpoint_CallBack_ViewPoint);
						m_setOption_CallBack_ev_bool_EVString_void = EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Function;
						GC.KeepAlive(m_setOption_CallBack_ev_bool_EVString_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setOption_ev_bool_EVString_void(this.NativeObject, m_setOption_CallBack_ev_bool_EVString_void);
						m_getOption_CallBack_ev_bool_EVString_void = EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Function;
						GC.KeepAlive(m_getOption_CallBack_ev_bool_EVString_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOption_ev_bool_EVString_void(this.NativeObject, m_getOption_CallBack_ev_bool_EVString_void);
						m_hasOption_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasOption_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasOption_ev_bool_EVString(this.NativeObject, m_hasOption_CallBack_ev_bool_EVString);
						m_getOptionValues_CallBack_ev_bool_EVString_StringVector = EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Function;
						GC.KeepAlive(m_getOptionValues_CallBack_ev_bool_EVString_StringVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOptionValues_ev_bool_EVString_StringVector(this.NativeObject, m_getOptionValues_CallBack_ev_bool_EVString_StringVector);
						m_getOptionKeys_CallBack_ev_bool_StringVector = EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Function;
						GC.KeepAlive(m_getOptionKeys_CallBack_ev_bool_StringVector);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getOptionKeys_ev_bool_StringVector(this.NativeObject, m_getOptionKeys_CallBack_ev_bool_StringVector);
						m__updateSceneGraph_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Function;
						GC.KeepAlive(m__updateSceneGraph_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__updateSceneGraph_void_CCamera(this.NativeObject, m__updateSceneGraph_CallBack_void_CCamera);
						m__findVisibleObjects_CallBack_void_CCamera_VisibleObjectsBoundsInfo_ev_bool = EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Function;
						GC.KeepAlive(m__findVisibleObjects_CallBack_void_CCamera_VisibleObjectsBoundsInfo_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool(this.NativeObject, m__findVisibleObjects_CallBack_void_CCamera_VisibleObjectsBoundsInfo_ev_bool);
						m__applySceneAnimations_CallBack_void = EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Function;
						GC.KeepAlive(m__applySceneAnimations_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__applySceneAnimations_void(this.NativeObject, m__applySceneAnimations_CallBack_void);
						m__renderVisibleObjects_CallBack_void = EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Function;
						GC.KeepAlive(m__renderVisibleObjects_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderVisibleObjects_void(this.NativeObject, m__renderVisibleObjects_CallBack_void);
						m__renderScene_CallBack_void_CCamera_CViewport_ev_bool = EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Function;
						GC.KeepAlive(m__renderScene_CallBack_void_CCamera_CViewport_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderScene_void_CCamera_CViewport_ev_bool(this.NativeObject, m__renderScene_CallBack_void_CCamera_CViewport_ev_bool);
						m__queueSkiesForRendering_CallBack_void_CCamera = EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Function;
						GC.KeepAlive(m__queueSkiesForRendering_CallBack_void_CCamera);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__queueSkiesForRendering_void_CCamera(this.NativeObject, m__queueSkiesForRendering_CallBack_void_CCamera);
						m__setDestinationRenderSystem_CallBack_void_CRenderSystem = EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Function;
						GC.KeepAlive(m__setDestinationRenderSystem_CallBack_void_CRenderSystem);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setDestinationRenderSystem_void_CRenderSystem(this.NativeObject, m__setDestinationRenderSystem_CallBack_void_CRenderSystem);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32 = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_bool);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real);
						m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString = EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Function;
						GC.KeepAlive(m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString(this.NativeObject, m_setSkyPlane_CallBack_void_ev_bool_CPlane_EVString);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32 = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8 = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real_Real);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString_Real);
						m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString = EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Function;
						GC.KeepAlive(m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString(this.NativeObject, m__setSkyPlane_CallBack_void_ev_bool_CPlane_EVString);
						m_setSkyPlaneEnabled_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Function;
						GC.KeepAlive(m_setSkyPlaneEnabled_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyPlaneEnabled_void_ev_bool(this.NativeObject, m_setSkyPlaneEnabled_CallBack_void_ev_bool);
						m_isSkyPlaneEnabled_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Function;
						GC.KeepAlive(m_isSkyPlaneEnabled_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyPlaneEnabled_ev_bool(this.NativeObject, m_isSkyPlaneEnabled_CallBack_ev_bool);
						m_getSkyPlaneNode_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Function;
						GC.KeepAlive(m_getSkyPlaneNode_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyPlaneNode_CSceneNode(this.NativeObject, m_getSkyPlaneNode_CallBack_CSceneNode);
						m_getSkyPlaneGenParameters_CallBack_SkyPlaneGenParameters = EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Function;
						GC.KeepAlive(m_getSkyPlaneGenParameters_CallBack_SkyPlaneGenParameters);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters(this.NativeObject, m_getSkyPlaneGenParameters_CallBack_SkyPlaneGenParameters);
						m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString = EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Function;
						GC.KeepAlive(m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString(this.NativeObject, m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString);
						m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion = EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Function;
						GC.KeepAlive(m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion(this.NativeObject, m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool_CQuaternion);
						m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Function;
						GC.KeepAlive(m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool(this.NativeObject, m_setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_bool);
						m_setSkyBox_CallBack_void_ev_bool_EVString_Real = EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Function;
						GC.KeepAlive(m_setSkyBox_CallBack_void_ev_bool_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString_Real(this.NativeObject, m_setSkyBox_CallBack_void_ev_bool_EVString_Real);
						m_setSkyBox_CallBack_void_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Function;
						GC.KeepAlive(m_setSkyBox_CallBack_void_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBox_void_ev_bool_EVString(this.NativeObject, m_setSkyBox_CallBack_void_ev_bool_EVString);
						m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString = EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Function;
						GC.KeepAlive(m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString(this.NativeObject, m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString);
						m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion = EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Function;
						GC.KeepAlive(m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion(this.NativeObject, m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8_CQuaternion);
						m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8 = EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Function;
						GC.KeepAlive(m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8(this.NativeObject, m__setSkyBox_CallBack_void_ev_bool_EVString_Real_ev_uint8);
						m__setSkyBox_CallBack_void_ev_bool_EVString_Real = EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Function;
						GC.KeepAlive(m__setSkyBox_CallBack_void_ev_bool_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString_Real(this.NativeObject, m__setSkyBox_CallBack_void_ev_bool_EVString_Real);
						m__setSkyBox_CallBack_void_ev_bool_EVString = EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Function;
						GC.KeepAlive(m__setSkyBox_CallBack_void_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyBox_void_ev_bool_EVString(this.NativeObject, m__setSkyBox_CallBack_void_ev_bool_EVString);
						m_setSkyBoxEnabled_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Function;
						GC.KeepAlive(m_setSkyBoxEnabled_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyBoxEnabled_void_ev_bool(this.NativeObject, m_setSkyBoxEnabled_CallBack_void_ev_bool);
						m_isSkyBoxEnabled_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Function;
						GC.KeepAlive(m_isSkyBoxEnabled_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyBoxEnabled_ev_bool(this.NativeObject, m_isSkyBoxEnabled_CallBack_ev_bool);
						m_getSkyBoxNode_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Function;
						GC.KeepAlive(m_getSkyBoxNode_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyBoxNode_CSceneNode(this.NativeObject, m_getSkyBoxNode_CallBack_CSceneNode);
						m_getSkyBoxGenParameters_CallBack_SkyBoxGenParameters = EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Function;
						GC.KeepAlive(m_getSkyBoxGenParameters_CallBack_SkyBoxGenParameters);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters(this.NativeObject, m_getSkyBoxGenParameters_CallBack_SkyBoxGenParameters);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32 = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_bool);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real_Real);
						m_setSkyDome_CallBack_void_ev_bool_EVString_Real = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString_Real(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString_Real);
						m_setSkyDome_CallBack_void_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Function;
						GC.KeepAlive(m_setSkyDome_CallBack_void_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDome_void_ev_bool_EVString(this.NativeObject, m_setSkyDome_CallBack_void_ev_bool_EVString);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32 = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32 = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8 = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real_ev_uint8);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real_Real);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real_Real);
						m__setSkyDome_CallBack_void_ev_bool_EVString_Real = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString_Real(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString_Real);
						m__setSkyDome_CallBack_void_ev_bool_EVString = EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Function;
						GC.KeepAlive(m__setSkyDome_CallBack_void_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setSkyDome_void_ev_bool_EVString(this.NativeObject, m__setSkyDome_CallBack_void_ev_bool_EVString);
						m_setSkyDomeEnabled_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Function;
						GC.KeepAlive(m_setSkyDomeEnabled_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSkyDomeEnabled_void_ev_bool(this.NativeObject, m_setSkyDomeEnabled_CallBack_void_ev_bool);
						m_isSkyDomeEnabled_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Function;
						GC.KeepAlive(m_isSkyDomeEnabled_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isSkyDomeEnabled_ev_bool(this.NativeObject, m_isSkyDomeEnabled_CallBack_ev_bool);
						m_getSkyDomeNode_CallBack_CSceneNode = EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Function;
						GC.KeepAlive(m_getSkyDomeNode_CallBack_CSceneNode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyDomeNode_CSceneNode(this.NativeObject, m_getSkyDomeNode_CallBack_CSceneNode);
						m_getSkyDomeGenParameters_CallBack_SkyDomeGenParameters = EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Function;
						GC.KeepAlive(m_getSkyDomeGenParameters_CallBack_SkyDomeGenParameters);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters(this.NativeObject, m_getSkyDomeGenParameters_CallBack_SkyDomeGenParameters);
						m_getFogMode_CallBack_FogMode = EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Function;
						GC.KeepAlive(m_getFogMode_CallBack_FogMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogMode_FogMode(this.NativeObject, m_getFogMode_CallBack_FogMode);
						m_getFogColour_CallBack_CColourValue = EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Function;
						GC.KeepAlive(m_getFogColour_CallBack_CColourValue);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogColour_CColourValue(this.NativeObject, m_getFogColour_CallBack_CColourValue);
						m_getFogStart_CallBack_Real = EarthView_World_Graphic_CSceneManager_getFogStart_Real_Function;
						GC.KeepAlive(m_getFogStart_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogStart_Real(this.NativeObject, m_getFogStart_CallBack_Real);
						m_getFogEnd_CallBack_Real = EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Function;
						GC.KeepAlive(m_getFogEnd_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogEnd_Real(this.NativeObject, m_getFogEnd_CallBack_Real);
						m_getFogDensity_CallBack_Real = EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Function;
						GC.KeepAlive(m_getFogDensity_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFogDensity_Real(this.NativeObject, m_getFogDensity_CallBack_Real);
						m_createBillboardSet_CallBack_CBillboardSet_EVString_ev_uint32 = EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Function;
						GC.KeepAlive(m_createBillboardSet_CallBack_CBillboardSet_EVString_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32(this.NativeObject, m_createBillboardSet_CallBack_CBillboardSet_EVString_ev_uint32);
						m_createBillboardSet_CallBack_CBillboardSet_EVString = EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Function;
						GC.KeepAlive(m_createBillboardSet_CallBack_CBillboardSet_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_EVString(this.NativeObject, m_createBillboardSet_CallBack_CBillboardSet_EVString);
						m_createBillboardSet_CallBack_CBillboardSet_ev_uint32 = EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Function;
						GC.KeepAlive(m_createBillboardSet_CallBack_CBillboardSet_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet_ev_uint32(this.NativeObject, m_createBillboardSet_CallBack_CBillboardSet_ev_uint32);
						m_createBillboardSet_CallBack_CBillboardSet = EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Function;
						GC.KeepAlive(m_createBillboardSet_CallBack_CBillboardSet);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createBillboardSet_CBillboardSet(this.NativeObject, m_createBillboardSet_CallBack_CBillboardSet);
						m_getBillboardSet_CallBack_CBillboardSet_EVString = EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Function;
						GC.KeepAlive(m_getBillboardSet_CallBack_CBillboardSet_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBillboardSet_CBillboardSet_EVString(this.NativeObject, m_getBillboardSet_CallBack_CBillboardSet_EVString);
						m_hasBillboardSet_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasBillboardSet_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasBillboardSet_ev_bool_EVString(this.NativeObject, m_hasBillboardSet_CallBack_ev_bool_EVString);
						m_destroyBillboardSet_CallBack_void_CBillboardSet = EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Function;
						GC.KeepAlive(m_destroyBillboardSet_CallBack_void_CBillboardSet);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardSet_void_CBillboardSet(this.NativeObject, m_destroyBillboardSet_CallBack_void_CBillboardSet);
						m_destroyBillboardSet_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Function;
						GC.KeepAlive(m_destroyBillboardSet_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyBillboardSet_void_EVString(this.NativeObject, m_destroyBillboardSet_CallBack_void_EVString);
						m_destroyAllBillboardSets_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Function;
						GC.KeepAlive(m_destroyAllBillboardSets_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllBillboardSets_void(this.NativeObject, m_destroyAllBillboardSets_CallBack_void);
						m_setDisplaySceneNodes_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Function;
						GC.KeepAlive(m_setDisplaySceneNodes_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setDisplaySceneNodes_void_ev_bool(this.NativeObject, m_setDisplaySceneNodes_CallBack_void_ev_bool);
						m_getDisplaySceneNodes_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Function;
						GC.KeepAlive(m_getDisplaySceneNodes_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getDisplaySceneNodes_ev_bool(this.NativeObject, m_getDisplaySceneNodes_CallBack_ev_bool);
						m_createAnimation_CallBack_CAnimation_EVString_Real = EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Function;
						GC.KeepAlive(m_createAnimation_CallBack_CAnimation_EVString_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAnimation_CAnimation_EVString_Real(this.NativeObject, m_createAnimation_CallBack_CAnimation_EVString_Real);
						m_getAnimation_CallBack_CAnimation_EVString = EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Function;
						GC.KeepAlive(m_getAnimation_CallBack_CAnimation_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getAnimation_CAnimation_EVString(this.NativeObject, m_getAnimation_CallBack_CAnimation_EVString);
						m_hasAnimation_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasAnimation_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasAnimation_ev_bool_EVString(this.NativeObject, m_hasAnimation_CallBack_ev_bool_EVString);
						m_destroyAnimation_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Function;
						GC.KeepAlive(m_destroyAnimation_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAnimation_void_EVString(this.NativeObject, m_destroyAnimation_CallBack_void_EVString);
						m_destroyAllAnimations_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Function;
						GC.KeepAlive(m_destroyAllAnimations_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllAnimations_void(this.NativeObject, m_destroyAllAnimations_CallBack_void);
						m_createAnimationState_CallBack_CAnimationState_EVString = EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Function;
						GC.KeepAlive(m_createAnimationState_CallBack_CAnimationState_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAnimationState_CAnimationState_EVString(this.NativeObject, m_createAnimationState_CallBack_CAnimationState_EVString);
						m_getAnimationState_CallBack_CAnimationState_EVString = EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Function;
						GC.KeepAlive(m_getAnimationState_CallBack_CAnimationState_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getAnimationState_CAnimationState_EVString(this.NativeObject, m_getAnimationState_CallBack_CAnimationState_EVString);
						m_hasAnimationState_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasAnimationState_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasAnimationState_ev_bool_EVString(this.NativeObject, m_hasAnimationState_CallBack_ev_bool_EVString);
						m_destroyAnimationState_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Function;
						GC.KeepAlive(m_destroyAnimationState_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAnimationState_void_EVString(this.NativeObject, m_destroyAnimationState_CallBack_void_EVString);
						m_destroyAllAnimationStates_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Function;
						GC.KeepAlive(m_destroyAllAnimationStates_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllAnimationStates_void(this.NativeObject, m_destroyAllAnimationStates_CallBack_void);
						m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool(this.NativeObject, m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool);
						m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4 = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4(this.NativeObject, m_manualRender_CallBack_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4);
						m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList(this.NativeObject, m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList);
						m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool(this.NativeObject, m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool);
						m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool(this.NativeObject, m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool);
						m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool(this.NativeObject, m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool);
						m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4 = EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Function;
						GC.KeepAlive(m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4(this.NativeObject, m_manualRender_CallBack_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4);
						m_getRenderQueue_CallBack_CRenderQueue = EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Function;
						GC.KeepAlive(m_getRenderQueue_CallBack_CRenderQueue);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getRenderQueue_CRenderQueue(this.NativeObject, m_getRenderQueue_CallBack_CRenderQueue);
						m_addRenderQueueListener_CallBack_void_CRenderQueueListener = EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Function;
						GC.KeepAlive(m_addRenderQueueListener_CallBack_void_CRenderQueueListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addRenderQueueListener_void_CRenderQueueListener(this.NativeObject, m_addRenderQueueListener_CallBack_void_CRenderQueueListener);
						m_removeRenderQueueListener_CallBack_void_CRenderQueueListener = EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Function;
						GC.KeepAlive(m_removeRenderQueueListener_CallBack_void_CRenderQueueListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeRenderQueueListener_void_CRenderQueueListener(this.NativeObject, m_removeRenderQueueListener_CallBack_void_CRenderQueueListener);
						m_addRenderObjectListener_CallBack_void_CRenderObjectListener = EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Function;
						GC.KeepAlive(m_addRenderObjectListener_CallBack_void_CRenderObjectListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addRenderObjectListener_void_CRenderObjectListener(this.NativeObject, m_addRenderObjectListener_CallBack_void_CRenderObjectListener);
						m_removeRenderObjectListener_CallBack_void_CRenderObjectListener = EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Function;
						GC.KeepAlive(m_removeRenderObjectListener_CallBack_void_CRenderObjectListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeRenderObjectListener_void_CRenderObjectListener(this.NativeObject, m_removeRenderObjectListener_CallBack_void_CRenderObjectListener);
						m_addSpecialCaseRenderQueue_CallBack_void_ev_uint8 = EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Function;
						GC.KeepAlive(m_addSpecialCaseRenderQueue_CallBack_void_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addSpecialCaseRenderQueue_void_ev_uint8(this.NativeObject, m_addSpecialCaseRenderQueue_CallBack_void_ev_uint8);
						m_removeSpecialCaseRenderQueue_CallBack_void_ev_uint8 = EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Function;
						GC.KeepAlive(m_removeSpecialCaseRenderQueue_CallBack_void_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8(this.NativeObject, m_removeSpecialCaseRenderQueue_CallBack_void_ev_uint8);
						m_clearSpecialCaseRenderQueues_CallBack_void = EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Function;
						GC.KeepAlive(m_clearSpecialCaseRenderQueues_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_clearSpecialCaseRenderQueues_void(this.NativeObject, m_clearSpecialCaseRenderQueues_CallBack_void);
						m_setSpecialCaseRenderQueueMode_CallBack_void_SpecialCaseRenderQueueMode = EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Function;
						GC.KeepAlive(m_setSpecialCaseRenderQueueMode_CallBack_void_SpecialCaseRenderQueueMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode(this.NativeObject, m_setSpecialCaseRenderQueueMode_CallBack_void_SpecialCaseRenderQueueMode);
						m_getSpecialCaseRenderQueueMode_CallBack_SpecialCaseRenderQueueMode = EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Function;
						GC.KeepAlive(m_getSpecialCaseRenderQueueMode_CallBack_SpecialCaseRenderQueueMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode(this.NativeObject, m_getSpecialCaseRenderQueueMode_CallBack_SpecialCaseRenderQueueMode);
						m_isRenderQueueToBeProcessed_CallBack_ev_bool_ev_uint8 = EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Function;
						GC.KeepAlive(m_isRenderQueueToBeProcessed_CallBack_ev_bool_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8(this.NativeObject, m_isRenderQueueToBeProcessed_CallBack_ev_bool_ev_uint8);
						m_setWorldGeometryRenderQueue_CallBack_void_ev_uint8 = EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Function;
						GC.KeepAlive(m_setWorldGeometryRenderQueue_CallBack_void_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setWorldGeometryRenderQueue_void_ev_uint8(this.NativeObject, m_setWorldGeometryRenderQueue_CallBack_void_ev_uint8);
						m_getWorldGeometryRenderQueue_CallBack_ev_uint8 = EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Function;
						GC.KeepAlive(m_getWorldGeometryRenderQueue_CallBack_ev_uint8);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getWorldGeometryRenderQueue_ev_uint8(this.NativeObject, m_getWorldGeometryRenderQueue_CallBack_ev_uint8);
						m_showBoundingBoxes_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Function;
						GC.KeepAlive(m_showBoundingBoxes_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_showBoundingBoxes_void_ev_bool(this.NativeObject, m_showBoundingBoxes_CallBack_void_ev_bool);
						m_getShowBoundingBoxes_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Function;
						GC.KeepAlive(m_getShowBoundingBoxes_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShowBoundingBoxes_ev_bool(this.NativeObject, m_getShowBoundingBoxes_CallBack_ev_bool);
						m__notifyAutotrackingSceneNode_CallBack_void_CSceneNode_ev_bool = EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Function;
						GC.KeepAlive(m__notifyAutotrackingSceneNode_CallBack_void_CSceneNode_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool(this.NativeObject, m__notifyAutotrackingSceneNode_CallBack_void_CSceneNode_ev_bool);
						m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32 = EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Function;
						GC.KeepAlive(m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32(this.NativeObject, m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32);
						m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox = EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Function;
						GC.KeepAlive(m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox(this.NativeObject, m_createAABBQuery_CallBack_CAxisAlignedBoxSceneQuery_CAxisAlignedBox);
						m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere_ev_uint32 = EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Function;
						GC.KeepAlive(m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32(this.NativeObject, m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere_ev_uint32);
						m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere = EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Function;
						GC.KeepAlive(m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createSphereQuery_CSphereSceneQuery_CSphere(this.NativeObject, m_createSphereQuery_CallBack_CSphereSceneQuery_CSphere);
						m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32 = EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Function;
						GC.KeepAlive(m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32(this.NativeObject, m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32);
						m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList = EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Function;
						GC.KeepAlive(m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList(this.NativeObject, m_createPlaneBoundedVolumeQuery_CallBack_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList);
						m_createRayQuery_CallBack_CRaySceneQuery_CRay_ev_uint32 = EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Function;
						GC.KeepAlive(m_createRayQuery_CallBack_CRaySceneQuery_CRay_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32(this.NativeObject, m_createRayQuery_CallBack_CRaySceneQuery_CRay_ev_uint32);
						m_createRayQuery_CallBack_CRaySceneQuery_CRay = EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Function;
						GC.KeepAlive(m_createRayQuery_CallBack_CRaySceneQuery_CRay);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createRayQuery_CRaySceneQuery_CRay(this.NativeObject, m_createRayQuery_CallBack_CRaySceneQuery_CRay);
						m_createIntersectionQuery_CallBack_CIntersectionSceneQuery_ev_uint32 = EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Function;
						GC.KeepAlive(m_createIntersectionQuery_CallBack_CIntersectionSceneQuery_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32(this.NativeObject, m_createIntersectionQuery_CallBack_CIntersectionSceneQuery_ev_uint32);
						m_createIntersectionQuery_CallBack_CIntersectionSceneQuery = EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Function;
						GC.KeepAlive(m_createIntersectionQuery_CallBack_CIntersectionSceneQuery);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createIntersectionQuery_CIntersectionSceneQuery(this.NativeObject, m_createIntersectionQuery_CallBack_CIntersectionSceneQuery);
						m_destroyQuery_CallBack_void_CSceneQuery = EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Function;
						GC.KeepAlive(m_destroyQuery_CallBack_void_CSceneQuery);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyQuery_void_CSceneQuery(this.NativeObject, m_destroyQuery_CallBack_void_CSceneQuery);
						m_setShadowTechnique_CallBack_void_ShadowTechnique = EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Function;
						GC.KeepAlive(m_setShadowTechnique_CallBack_void_ShadowTechnique);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTechnique_void_ShadowTechnique(this.NativeObject, m_setShadowTechnique_CallBack_void_ShadowTechnique);
						m_getShadowTechnique_CallBack_ShadowTechnique = EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Function;
						GC.KeepAlive(m_getShadowTechnique_CallBack_ShadowTechnique);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTechnique_ShadowTechnique(this.NativeObject, m_getShadowTechnique_CallBack_ShadowTechnique);
						m_setShowDebugShadows_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Function;
						GC.KeepAlive(m_setShowDebugShadows_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShowDebugShadows_void_ev_bool(this.NativeObject, m_setShowDebugShadows_CallBack_void_ev_bool);
						m_getShowDebugShadows_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Function;
						GC.KeepAlive(m_getShowDebugShadows_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShowDebugShadows_ev_bool(this.NativeObject, m_getShowDebugShadows_CallBack_ev_bool);
						m_setShadowColour_CallBack_void_CColourValue = EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Function;
						GC.KeepAlive(m_setShadowColour_CallBack_void_CColourValue);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColour_void_CColourValue(this.NativeObject, m_setShadowColour_CallBack_void_CColourValue);
						m_getShadowColour_CallBack_CColourValue = EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Function;
						GC.KeepAlive(m_getShadowColour_CallBack_CColourValue);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColour_CColourValue(this.NativeObject, m_getShadowColour_CallBack_CColourValue);
						m_setShadowDirectionalLightExtrusionDistance_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Function;
						GC.KeepAlive(m_setShadowDirectionalLightExtrusionDistance_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real(this.NativeObject, m_setShadowDirectionalLightExtrusionDistance_CallBack_void_Real);
						m_getShadowDirectionalLightExtrusionDistance_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Function;
						GC.KeepAlive(m_getShadowDirectionalLightExtrusionDistance_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowDirectionalLightExtrusionDistance_Real(this.NativeObject, m_getShadowDirectionalLightExtrusionDistance_CallBack_Real);
						m_setShadowColorRRatio_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Function;
						GC.KeepAlive(m_setShadowColorRRatio_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorRRatio_void_Real(this.NativeObject, m_setShadowColorRRatio_CallBack_void_Real);
						m_setShadowColorGRatio_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Function;
						GC.KeepAlive(m_setShadowColorGRatio_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorGRatio_void_Real(this.NativeObject, m_setShadowColorGRatio_CallBack_void_Real);
						m_setShadowColorBRatio_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Function;
						GC.KeepAlive(m_setShadowColorBRatio_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowColorBRatio_void_Real(this.NativeObject, m_setShadowColorBRatio_CallBack_void_Real);
						m_getShadowColorRRatio_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Function;
						GC.KeepAlive(m_getShadowColorRRatio_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorRRatio_Real(this.NativeObject, m_getShadowColorRRatio_CallBack_Real);
						m_getShadowColorGRatio_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Function;
						GC.KeepAlive(m_getShadowColorGRatio_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorGRatio_Real(this.NativeObject, m_getShadowColorGRatio_CallBack_Real);
						m_getShadowColorBRatio_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Function;
						GC.KeepAlive(m_getShadowColorBRatio_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowColorBRatio_Real(this.NativeObject, m_getShadowColorBRatio_CallBack_Real);
						m_setShadowFarDistance_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Function;
						GC.KeepAlive(m_setShadowFarDistance_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowFarDistance_void_Real(this.NativeObject, m_setShadowFarDistance_CallBack_void_Real);
						m_getShadowFarDistance_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Function;
						GC.KeepAlive(m_getShadowFarDistance_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowFarDistance_Real(this.NativeObject, m_getShadowFarDistance_CallBack_Real);
						m_getShadowFarDistanceSquared_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Function;
						GC.KeepAlive(m_getShadowFarDistanceSquared_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowFarDistanceSquared_Real(this.NativeObject, m_getShadowFarDistanceSquared_CallBack_Real);
						m_setShadowIndexBufferSize_CallBack_void_ev_size_t = EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Function;
						GC.KeepAlive(m_setShadowIndexBufferSize_CallBack_void_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowIndexBufferSize_void_ev_size_t(this.NativeObject, m_setShadowIndexBufferSize_CallBack_void_ev_size_t);
						m_getShadowIndexBufferSize_CallBack_ev_size_t = EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Function;
						GC.KeepAlive(m_getShadowIndexBufferSize_CallBack_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowIndexBufferSize_ev_size_t(this.NativeObject, m_getShadowIndexBufferSize_CallBack_ev_size_t);
						m_setShadowTextureSize_CallBack_void_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureSize_CallBack_void_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSize_void_ev_uint16(this.NativeObject, m_setShadowTextureSize_CallBack_void_ev_uint16);
						m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat = EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Function;
						GC.KeepAlive(m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat(this.NativeObject, m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat);
						m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16(this.NativeObject, m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16);
						m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(this.NativeObject, m_setShadowTextureConfig_CallBack_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16);
						m_setShadowTextureConfig_CallBack_void_ev_size_t_ShadowTextureConfig = EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Function;
						GC.KeepAlive(m_setShadowTextureConfig_CallBack_void_ev_size_t_ShadowTextureConfig);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig(this.NativeObject, m_setShadowTextureConfig_CallBack_void_ev_size_t_ShadowTextureConfig);
						m_setShadowTexturePixelFormat_CallBack_void_PixelFormat = EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Function;
						GC.KeepAlive(m_setShadowTexturePixelFormat_CallBack_void_PixelFormat);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTexturePixelFormat_void_PixelFormat(this.NativeObject, m_setShadowTexturePixelFormat_CallBack_void_PixelFormat);
						m_setShadowTextureFSAA_CallBack_void_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureFSAA_CallBack_void_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFSAA_void_ev_uint16(this.NativeObject, m_setShadowTextureFSAA_CallBack_void_ev_uint16);
						m_setShadowTextureCount_CallBack_void_ev_size_t = EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Function;
						GC.KeepAlive(m_setShadowTextureCount_CallBack_void_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureCount_void_ev_size_t(this.NativeObject, m_setShadowTextureCount_CallBack_void_ev_size_t);
						m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16(this.NativeObject, m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16);
						m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat = EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Function;
						GC.KeepAlive(m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat(this.NativeObject, m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat);
						m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16(this.NativeObject, m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16);
						m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16 = EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Function;
						GC.KeepAlive(m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(this.NativeObject, m_setShadowTextureSettings_CallBack_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16);
						m_getShadowTexture_CallBack_CTexturePtr_ev_size_t = EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Function;
						GC.KeepAlive(m_getShadowTexture_CallBack_CTexturePtr_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTexture_CTexturePtr_ev_size_t(this.NativeObject, m_getShadowTexture_CallBack_CTexturePtr_ev_size_t);
						m_setShadowDirLightTextureOffset_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Function;
						GC.KeepAlive(m_setShadowDirLightTextureOffset_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowDirLightTextureOffset_void_Real(this.NativeObject, m_setShadowDirLightTextureOffset_CallBack_void_Real);
						m_getShadowDirLightTextureOffset_CallBack_Real = EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Function;
						GC.KeepAlive(m_getShadowDirLightTextureOffset_CallBack_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowDirLightTextureOffset_Real(this.NativeObject, m_getShadowDirLightTextureOffset_CallBack_Real);
						m_setShadowTextureFadeStart_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Function;
						GC.KeepAlive(m_setShadowTextureFadeStart_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFadeStart_void_Real(this.NativeObject, m_setShadowTextureFadeStart_CallBack_void_Real);
						m_setShadowTextureFadeEnd_CallBack_void_Real = EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Function;
						GC.KeepAlive(m_setShadowTextureFadeEnd_CallBack_void_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureFadeEnd_void_Real(this.NativeObject, m_setShadowTextureFadeEnd_CallBack_void_Real);
						m_setShadowTextureSelfShadow_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Function;
						GC.KeepAlive(m_setShadowTextureSelfShadow_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureSelfShadow_void_ev_bool(this.NativeObject, m_setShadowTextureSelfShadow_CallBack_void_ev_bool);
						m_getShadowTextureSelfShadow_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Function;
						GC.KeepAlive(m_getShadowTextureSelfShadow_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowTextureSelfShadow_ev_bool(this.NativeObject, m_getShadowTextureSelfShadow_CallBack_ev_bool);
						m_setShadowTextureCasterMaterial_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Function;
						GC.KeepAlive(m_setShadowTextureCasterMaterial_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureCasterMaterial_void_EVString(this.NativeObject, m_setShadowTextureCasterMaterial_CallBack_void_EVString);
						m_setShadowTextureReceiverMaterial_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Function;
						GC.KeepAlive(m_setShadowTextureReceiverMaterial_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowTextureReceiverMaterial_void_EVString(this.NativeObject, m_setShadowTextureReceiverMaterial_CallBack_void_EVString);
						m_setShadowCasterRenderBackFaces_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Function;
						GC.KeepAlive(m_setShadowCasterRenderBackFaces_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowCasterRenderBackFaces_void_ev_bool(this.NativeObject, m_setShadowCasterRenderBackFaces_CallBack_void_ev_bool);
						m_getShadowCasterRenderBackFaces_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Function;
						GC.KeepAlive(m_getShadowCasterRenderBackFaces_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowCasterRenderBackFaces_ev_bool(this.NativeObject, m_getShadowCasterRenderBackFaces_CallBack_ev_bool);
						m_setShadowCameraSetup_CallBack_void_ShadowCameraSetupPtr = EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Function;
						GC.KeepAlive(m_setShadowCameraSetup_CallBack_void_ShadowCameraSetupPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr(this.NativeObject, m_setShadowCameraSetup_CallBack_void_ShadowCameraSetupPtr);
						m_getShadowCameraSetup_CallBack_ShadowCameraSetupPtr = EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Function;
						GC.KeepAlive(m_getShadowCameraSetup_CallBack_ShadowCameraSetupPtr);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr(this.NativeObject, m_getShadowCameraSetup_CallBack_ShadowCameraSetupPtr);
						m_setShadowUseInfiniteFarPlane_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Function;
						GC.KeepAlive(m_setShadowUseInfiniteFarPlane_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool(this.NativeObject, m_setShadowUseInfiniteFarPlane_CallBack_void_ev_bool);
						m_isShadowTechniqueStencilBased_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueStencilBased_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueStencilBased_ev_bool(this.NativeObject, m_isShadowTechniqueStencilBased_CallBack_ev_bool);
						m_isShadowTechniqueTextureBased_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueTextureBased_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueTextureBased_ev_bool(this.NativeObject, m_isShadowTechniqueTextureBased_CallBack_ev_bool);
						m_isShadowTechniqueModulative_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueModulative_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueModulative_ev_bool(this.NativeObject, m_isShadowTechniqueModulative_CallBack_ev_bool);
						m_isShadowTechniqueAdditive_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueAdditive_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueAdditive_ev_bool(this.NativeObject, m_isShadowTechniqueAdditive_CallBack_ev_bool);
						m_isShadowTechniqueIntegrated_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueIntegrated_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueIntegrated_ev_bool(this.NativeObject, m_isShadowTechniqueIntegrated_CallBack_ev_bool);
						m_isShadowTechniqueInUse_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Function;
						GC.KeepAlive(m_isShadowTechniqueInUse_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isShadowTechniqueInUse_ev_bool(this.NativeObject, m_isShadowTechniqueInUse_CallBack_ev_bool);
						m_setShadowUseLightClipPlanes_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Function;
						GC.KeepAlive(m_setShadowUseLightClipPlanes_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setShadowUseLightClipPlanes_void_ev_bool(this.NativeObject, m_setShadowUseLightClipPlanes_CallBack_void_ev_bool);
						m_getShadowUseLightClipPlanes_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Function;
						GC.KeepAlive(m_getShadowUseLightClipPlanes_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getShadowUseLightClipPlanes_ev_bool(this.NativeObject, m_getShadowUseLightClipPlanes_CallBack_ev_bool);
						m__setActiveCompositorChain_CallBack_void_CCompositorChain = EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Function;
						GC.KeepAlive(m__setActiveCompositorChain_CallBack_void_CCompositorChain);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setActiveCompositorChain_void_CCompositorChain(this.NativeObject, m__setActiveCompositorChain_CallBack_void_CCompositorChain);
						m_setLateMaterialResolving_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Function;
						GC.KeepAlive(m_setLateMaterialResolving_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setLateMaterialResolving_void_ev_bool(this.NativeObject, m_setLateMaterialResolving_CallBack_void_ev_bool);
						m_isLateMaterialResolving_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Function;
						GC.KeepAlive(m_isLateMaterialResolving_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_isLateMaterialResolving_ev_bool(this.NativeObject, m_isLateMaterialResolving_CallBack_ev_bool);
						m__getActiveCompositorChain_CallBack_CCompositorChain = EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Function;
						GC.KeepAlive(m__getActiveCompositorChain_CallBack_CCompositorChain);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__getActiveCompositorChain_CCompositorChain(this.NativeObject, m__getActiveCompositorChain_CallBack_CCompositorChain);
						m_addListener_CallBack_void_CSceneManagerListener = EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Function;
						GC.KeepAlive(m_addListener_CallBack_void_CSceneManagerListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addListener_void_CSceneManagerListener(this.NativeObject, m_addListener_CallBack_void_CSceneManagerListener);
						m_removeListener_CallBack_void_CSceneManagerListener = EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Function;
						GC.KeepAlive(m_removeListener_CallBack_void_CSceneManagerListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeListener_void_CSceneManagerListener(this.NativeObject, m_removeListener_CallBack_void_CSceneManagerListener);
						m_existListener_CallBack_ev_bool_CSceneManagerListener = EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Function;
						GC.KeepAlive(m_existListener_CallBack_ev_bool_CSceneManagerListener);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_existListener_ev_bool_CSceneManagerListener(this.NativeObject, m_existListener_CallBack_ev_bool_CSceneManagerListener);
						m_createStaticGeometry_CallBack_CStaticGeometry_EVString = EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Function;
						GC.KeepAlive(m_createStaticGeometry_CallBack_CStaticGeometry_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createStaticGeometry_CStaticGeometry_EVString(this.NativeObject, m_createStaticGeometry_CallBack_CStaticGeometry_EVString);
						m_getStaticGeometry_CallBack_CStaticGeometry_EVString = EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Function;
						GC.KeepAlive(m_getStaticGeometry_CallBack_CStaticGeometry_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getStaticGeometry_CStaticGeometry_EVString(this.NativeObject, m_getStaticGeometry_CallBack_CStaticGeometry_EVString);
						m_hasStaticGeometry_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasStaticGeometry_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasStaticGeometry_ev_bool_EVString(this.NativeObject, m_hasStaticGeometry_CallBack_ev_bool_EVString);
						m_destroyStaticGeometry_CallBack_void_CStaticGeometry = EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Function;
						GC.KeepAlive(m_destroyStaticGeometry_CallBack_void_CStaticGeometry);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyStaticGeometry_void_CStaticGeometry(this.NativeObject, m_destroyStaticGeometry_CallBack_void_CStaticGeometry);
						m_destroyStaticGeometry_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Function;
						GC.KeepAlive(m_destroyStaticGeometry_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyStaticGeometry_void_EVString(this.NativeObject, m_destroyStaticGeometry_CallBack_void_EVString);
						m_destroyAllStaticGeometry_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Function;
						GC.KeepAlive(m_destroyAllStaticGeometry_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllStaticGeometry_void(this.NativeObject, m_destroyAllStaticGeometry_CallBack_void);
						m_createInstancedGeometry_CallBack_CInstancedGeometry_EVString = EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Function;
						GC.KeepAlive(m_createInstancedGeometry_CallBack_CInstancedGeometry_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstancedGeometry_CInstancedGeometry_EVString(this.NativeObject, m_createInstancedGeometry_CallBack_CInstancedGeometry_EVString);
						m_getInstancedGeometry_CallBack_CInstancedGeometry_EVString = EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Function;
						GC.KeepAlive(m_getInstancedGeometry_CallBack_CInstancedGeometry_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getInstancedGeometry_CInstancedGeometry_EVString(this.NativeObject, m_getInstancedGeometry_CallBack_CInstancedGeometry_EVString);
						m_destroyInstancedGeometry_CallBack_void_CInstancedGeometry = EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Function;
						GC.KeepAlive(m_destroyInstancedGeometry_CallBack_void_CInstancedGeometry);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedGeometry_void_CInstancedGeometry(this.NativeObject, m_destroyInstancedGeometry_CallBack_void_CInstancedGeometry);
						m_destroyInstancedGeometry_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Function;
						GC.KeepAlive(m_destroyInstancedGeometry_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedGeometry_void_EVString(this.NativeObject, m_destroyInstancedGeometry_CallBack_void_EVString);
						m_destroyAllInstancedGeometry_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Function;
						GC.KeepAlive(m_destroyAllInstancedGeometry_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllInstancedGeometry_void(this.NativeObject, m_destroyAllInstancedGeometry_CallBack_void);
						m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16 = EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Function;
						GC.KeepAlive(m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(this.NativeObject, m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16);
						m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16 = EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Function;
						GC.KeepAlive(m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(this.NativeObject, m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16);
						m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t = EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Function;
						GC.KeepAlive(m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t(this.NativeObject, m_createInstanceManager_CallBack_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t);
						m_getInstanceManager_CallBack_CInstanceManager_EVString = EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Function;
						GC.KeepAlive(m_getInstanceManager_CallBack_CInstanceManager_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getInstanceManager_CInstanceManager_EVString(this.NativeObject, m_getInstanceManager_CallBack_CInstanceManager_EVString);
						m_hasInstanceManager_CallBack_ev_bool_EVString = EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Function;
						GC.KeepAlive(m_hasInstanceManager_CallBack_ev_bool_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasInstanceManager_ev_bool_EVString(this.NativeObject, m_hasInstanceManager_CallBack_ev_bool_EVString);
						m_destroyInstanceManager_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Function;
						GC.KeepAlive(m_destroyInstanceManager_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManager_void_EVString(this.NativeObject, m_destroyInstanceManager_CallBack_void_EVString);
						m_destroyInstanceManager_CallBack_void_CInstanceManager = EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Function;
						GC.KeepAlive(m_destroyInstanceManager_CallBack_void_CInstanceManager);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManager_void_CInstanceManager(this.NativeObject, m_destroyInstanceManager_CallBack_void_CInstanceManager);
						m_destroyInstanceManagerWithThreadSafe_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Function;
						GC.KeepAlive(m_destroyInstanceManagerWithThreadSafe_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString(this.NativeObject, m_destroyInstanceManagerWithThreadSafe_CallBack_void_EVString);
						m_destroyInstanceManagerWithThreadSafe_CallBack_void_CInstanceManager = EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Function;
						GC.KeepAlive(m_destroyInstanceManagerWithThreadSafe_CallBack_void_CInstanceManager);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager(this.NativeObject, m_destroyInstanceManagerWithThreadSafe_CallBack_void_CInstanceManager);
						m_destroyAllInstanceManagers_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Function;
						GC.KeepAlive(m_destroyAllInstanceManagers_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllInstanceManagers_void(this.NativeObject, m_destroyAllInstanceManagers_CallBack_void);
						m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t = EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Function;
						GC.KeepAlive(m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t(this.NativeObject, m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t);
						m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16 = EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Function;
						GC.KeepAlive(m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(this.NativeObject, m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16);
						m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16 = EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Function;
						GC.KeepAlive(m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(this.NativeObject, m_getNumInstancesPerBatch_CallBack_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16);
						m_createInstancedEntity_CallBack_CInstancedEntity_EVString_EVString = EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Function;
						GC.KeepAlive(m_createInstancedEntity_CallBack_CInstancedEntity_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString(this.NativeObject, m_createInstancedEntity_CallBack_CInstancedEntity_EVString_EVString);
						m_destroyInstancedEntity_CallBack_void_CInstancedEntity = EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Function;
						GC.KeepAlive(m_destroyInstancedEntity_CallBack_void_CInstancedEntity);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyInstancedEntity_void_CInstancedEntity(this.NativeObject, m_destroyInstancedEntity_CallBack_void_CInstancedEntity);
						m_createMovableObject_CallBack_CMovableObject_EVString_EVString_CommonStringPairList = EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Function;
						GC.KeepAlive(m_createMovableObject_CallBack_CMovableObject_EVString_EVString_CommonStringPairList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList(this.NativeObject, m_createMovableObject_CallBack_CMovableObject_EVString_EVString_CommonStringPairList);
						m_createMovableObject_CallBack_CMovableObject_EVString_EVString = EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Function;
						GC.KeepAlive(m_createMovableObject_CallBack_CMovableObject_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_EVString(this.NativeObject, m_createMovableObject_CallBack_CMovableObject_EVString_EVString);
						m_createMovableObject_CallBack_CMovableObject_EVString_CommonStringPairList = EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Function;
						GC.KeepAlive(m_createMovableObject_CallBack_CMovableObject_EVString_CommonStringPairList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList(this.NativeObject, m_createMovableObject_CallBack_CMovableObject_EVString_CommonStringPairList);
						m_createMovableObject_CallBack_CMovableObject_EVString = EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Function;
						GC.KeepAlive(m_createMovableObject_CallBack_CMovableObject_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_createMovableObject_CMovableObject_EVString(this.NativeObject, m_createMovableObject_CallBack_CMovableObject_EVString);
						m_destroyMovableObject_CallBack_void_EVString_EVString = EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Function;
						GC.KeepAlive(m_destroyMovableObject_CallBack_void_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyMovableObject_void_EVString_EVString(this.NativeObject, m_destroyMovableObject_CallBack_void_EVString_EVString);
						m_destroyMovableObject_CallBack_void_CMovableObject = EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Function;
						GC.KeepAlive(m_destroyMovableObject_CallBack_void_CMovableObject);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyMovableObject_void_CMovableObject(this.NativeObject, m_destroyMovableObject_CallBack_void_CMovableObject);
						m_destroyAllMovableObjectsByType_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Function;
						GC.KeepAlive(m_destroyAllMovableObjectsByType_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllMovableObjectsByType_void_EVString(this.NativeObject, m_destroyAllMovableObjectsByType_CallBack_void_EVString);
						m_destroyAllMovableObjects_CallBack_void = EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Function;
						GC.KeepAlive(m_destroyAllMovableObjects_CallBack_void);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_destroyAllMovableObjects_void(this.NativeObject, m_destroyAllMovableObjects_CallBack_void);
						m_getMovableObject_CallBack_CMovableObject_EVString_EVString = EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Function;
						GC.KeepAlive(m_getMovableObject_CallBack_CMovableObject_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getMovableObject_CMovableObject_EVString_EVString(this.NativeObject, m_getMovableObject_CallBack_CMovableObject_EVString_EVString);
						m_hasMovableObject_CallBack_ev_bool_EVString_EVString = EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Function;
						GC.KeepAlive(m_hasMovableObject_CallBack_ev_bool_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_hasMovableObject_ev_bool_EVString_EVString(this.NativeObject, m_hasMovableObject_CallBack_ev_bool_EVString_EVString);
						m_getMovableObjectIterator_CallBack_MovableObjectIterator_EVString = EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Function;
						GC.KeepAlive(m_getMovableObjectIterator_CallBack_MovableObjectIterator_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString(this.NativeObject, m_getMovableObjectIterator_CallBack_MovableObjectIterator_EVString);
						m_injectMovableObject_CallBack_void_CMovableObject = EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Function;
						GC.KeepAlive(m_injectMovableObject_CallBack_void_CMovableObject);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_injectMovableObject_void_CMovableObject(this.NativeObject, m_injectMovableObject_CallBack_void_CMovableObject);
						m_extractMovableObject_CallBack_void_EVString_EVString = EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Function;
						GC.KeepAlive(m_extractMovableObject_CallBack_void_EVString_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractMovableObject_void_EVString_EVString(this.NativeObject, m_extractMovableObject_CallBack_void_EVString_EVString);
						m_extractMovableObject_CallBack_void_CMovableObject = EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Function;
						GC.KeepAlive(m_extractMovableObject_CallBack_void_CMovableObject);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractMovableObject_void_CMovableObject(this.NativeObject, m_extractMovableObject_CallBack_void_CMovableObject);
						m_extractAllMovableObjectsByType_CallBack_void_EVString = EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Function;
						GC.KeepAlive(m_extractAllMovableObjectsByType_CallBack_void_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_extractAllMovableObjectsByType_void_EVString(this.NativeObject, m_extractAllMovableObjectsByType_CallBack_void_EVString);
						m_setVisibilityMask_CallBack_void_ev_uint32 = EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Function;
						GC.KeepAlive(m_setVisibilityMask_CallBack_void_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setVisibilityMask_void_ev_uint32(this.NativeObject, m_setVisibilityMask_CallBack_void_ev_uint32);
						m_getVisibilityMask_CallBack_ev_uint32 = EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Function;
						GC.KeepAlive(m_getVisibilityMask_CallBack_ev_uint32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getVisibilityMask_ev_uint32(this.NativeObject, m_getVisibilityMask_CallBack_ev_uint32);
						m_setFindVisibleObjects_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Function;
						GC.KeepAlive(m_setFindVisibleObjects_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setFindVisibleObjects_void_ev_bool(this.NativeObject, m_setFindVisibleObjects_CallBack_void_ev_bool);
						m_getFindVisibleObjects_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Function;
						GC.KeepAlive(m_getFindVisibleObjects_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFindVisibleObjects_ev_bool(this.NativeObject, m_getFindVisibleObjects_CallBack_ev_bool);
						m_setNormaliseNormalsOnScale_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Function;
						GC.KeepAlive(m_setNormaliseNormalsOnScale_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setNormaliseNormalsOnScale_void_ev_bool(this.NativeObject, m_setNormaliseNormalsOnScale_CallBack_void_ev_bool);
						m_getNormaliseNormalsOnScale_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Function;
						GC.KeepAlive(m_getNormaliseNormalsOnScale_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getNormaliseNormalsOnScale_ev_bool(this.NativeObject, m_getNormaliseNormalsOnScale_CallBack_ev_bool);
						m_setFlipCullingOnNegativeScale_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Function;
						GC.KeepAlive(m_setFlipCullingOnNegativeScale_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setFlipCullingOnNegativeScale_void_ev_bool(this.NativeObject, m_setFlipCullingOnNegativeScale_CallBack_void_ev_bool);
						m_getFlipCullingOnNegativeScale_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Function;
						GC.KeepAlive(m_getFlipCullingOnNegativeScale_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getFlipCullingOnNegativeScale_ev_bool(this.NativeObject, m_getFlipCullingOnNegativeScale_CallBack_ev_bool);
						m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool_LightList = EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Function;
						GC.KeepAlive(m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool_LightList);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList(this.NativeObject, m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool_LightList);
						m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Function;
						GC.KeepAlive(m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool(this.NativeObject, m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool_ev_bool);
						m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool = EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Function;
						GC.KeepAlive(m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool(this.NativeObject, m__injectRenderWithPass_CallBack_void_CPass_CRenderable_ev_bool);
						m__injectRenderWithPass_CallBack_void_CPass_CRenderable = EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Function;
						GC.KeepAlive(m__injectRenderWithPass_CallBack_void_CPass_CRenderable);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__injectRenderWithPass_void_CPass_CRenderable(this.NativeObject, m__injectRenderWithPass_CallBack_void_CPass_CRenderable);
						m__suppressRenderStateChanges_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Function;
						GC.KeepAlive(m__suppressRenderStateChanges_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__suppressRenderStateChanges_void_ev_bool(this.NativeObject, m__suppressRenderStateChanges_CallBack_void_ev_bool);
						m__areRenderStateChangesSuppressed_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Function;
						GC.KeepAlive(m__areRenderStateChangesSuppressed_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__areRenderStateChangesSuppressed_ev_bool(this.NativeObject, m__areRenderStateChangesSuppressed_CallBack_ev_bool);
						m__setPass_CallBack_CPass_CPass_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Function;
						GC.KeepAlive(m__setPass_CallBack_CPass_CPass_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass_ev_bool_ev_bool(this.NativeObject, m__setPass_CallBack_CPass_CPass_ev_bool_ev_bool);
						m__setPass_CallBack_CPass_CPass_ev_bool = EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Function;
						GC.KeepAlive(m__setPass_CallBack_CPass_CPass_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass_ev_bool(this.NativeObject, m__setPass_CallBack_CPass_CPass_ev_bool);
						m__setPass_CallBack_CPass_CPass = EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Function;
						GC.KeepAlive(m__setPass_CallBack_CPass_CPass);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__setPass_CPass_CPass(this.NativeObject, m__setPass_CallBack_CPass_CPass);
						m__markGpuParamsDirty_CallBack_void_ev_uint16 = EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Function;
						GC.KeepAlive(m__markGpuParamsDirty_CallBack_void_ev_uint16);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__markGpuParamsDirty_void_ev_uint16(this.NativeObject, m__markGpuParamsDirty_CallBack_void_ev_uint16);
						m__suppressShadows_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Function;
						GC.KeepAlive(m__suppressShadows_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__suppressShadows_void_ev_bool(this.NativeObject, m__suppressShadows_CallBack_void_ev_bool);
						m__areShadowsSuppressed_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Function;
						GC.KeepAlive(m__areShadowsSuppressed_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__areShadowsSuppressed_ev_bool(this.NativeObject, m__areShadowsSuppressed_CallBack_ev_bool);
						m__renderQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode = EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Function;
						GC.KeepAlive(m__renderQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(this.NativeObject, m__renderQueueGroupObjects_CallBack_void_CRenderQueueGroup_OrganisationMode);
						m_setCameraRelativeRendering_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Function;
						GC.KeepAlive(m_setCameraRelativeRendering_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCameraRelativeRendering_void_ev_bool(this.NativeObject, m_setCameraRelativeRendering_CallBack_void_ev_bool);
						m_getCameraRelativeRendering_CallBack_ev_bool = EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Function;
						GC.KeepAlive(m_getCameraRelativeRendering_CallBack_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getCameraRelativeRendering_ev_bool(this.NativeObject, m_getCameraRelativeRendering_CallBack_ev_bool);
						m_getHeightAt_CallBack_Real_Real_Real_ev_real32 = EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Function;
						GC.KeepAlive(m_getHeightAt_CallBack_Real_Real_Real_ev_real32);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getHeightAt_Real_Real_Real_ev_real32(this.NativeObject, m_getHeightAt_CallBack_Real_Real_Real_ev_real32);
						m_getBestHeightAt_CallBack_Real_Real_Real = EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Function;
						GC.KeepAlive(m_getBestHeightAt_CallBack_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getBestHeightAt_Real_Real_Real(this.NativeObject, m_getBestHeightAt_CallBack_Real_Real_Real);
						m_getHeightAtTile_CallBack_Real_Real_Real = EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Function;
						GC.KeepAlive(m_getHeightAtTile_CallBack_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getHeightAtTile_Real_Real_Real(this.NativeObject, m_getHeightAtTile_CallBack_Real_Real_Real);
						m_getTileEnvelope_CallBack_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real = EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Function;
						GC.KeepAlive(m_getTileEnvelope_CallBack_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real(this.NativeObject, m_getTileEnvelope_CallBack_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real);
						m_addTempLayer_CallBack_ev_bool_ILayer = EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Function;
						GC.KeepAlive(m_addTempLayer_CallBack_ev_bool_ILayer);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_addTempLayer_ev_bool_ILayer(this.NativeObject, m_addTempLayer_CallBack_ev_bool_ILayer);
						m_removeTempLayer_CallBack_ev_bool_ILayer = EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Function;
						GC.KeepAlive(m_removeTempLayer_CallBack_ev_bool_ILayer);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_removeTempLayer_ev_bool_ILayer(this.NativeObject, m_removeTempLayer_CallBack_ev_bool_ILayer);
						m_updateQuadImage_CallBack_void_bool_bool_bool = EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Function;
						GC.KeepAlive(m_updateQuadImage_CallBack_void_bool_bool_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateQuadImage_void_bool_bool_bool(this.NativeObject, m_updateQuadImage_CallBack_void_bool_bool_bool);
						m_updateQuadImage_CallBack_void_bool_bool_bool_Real_Real_Real_Real = EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Function;
						GC.KeepAlive(m_updateQuadImage_CallBack_void_bool_bool_bool_Real_Real_Real_Real);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real(this.NativeObject, m_updateQuadImage_CallBack_void_bool_bool_bool_Real_Real_Real_Real);
						m_updateOBQ_CallBack_void_ev_bool_ev_bool_ev_bool_ev_bool = EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Function;
						GC.KeepAlive(m_updateOBQ_CallBack_void_ev_bool_ev_bool_ev_bool_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool(this.NativeObject, m_updateOBQ_CallBack_void_ev_bool_ev_bool_ev_bool_ev_bool);
						m_setCollisionDetectionEnable_CallBack_void_ev_bool = EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Function;
						GC.KeepAlive(m_setCollisionDetectionEnable_CallBack_void_ev_bool);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManager_setCollisionDetectionEnable_void_ev_bool(this.NativeObject, m_setCollisionDetectionEnable_CallBack_void_ev_bool);
					}
				}
				public override void _alertVisibleObjects()
				{
					base._alertVisibleObjects_NoVirtual();
				}
				protected override EarthView.World.Graphic.SceneNode CreateSceneNodeImpl()
				{
					return base.CreateSceneNodeImpl_NoVirtual();
				}
				protected override EarthView.World.Graphic.SceneNode CreateSceneNodeImpl(string name)
				{
					return base.CreateSceneNodeImpl_NoVirtual(name);
				}
				protected override void InitRenderQueue()
				{
					base.InitRenderQueue_NoVirtual();
				}
				protected override EarthView.World.Graphic.Pass DeriveShadowCasterPass(EarthView.World.Graphic.Pass pass)
				{
					return base.DeriveShadowCasterPass_NoVirtual(pass);
				}
				protected override EarthView.World.Graphic.Pass DeriveShadowReceiverPass(EarthView.World.Graphic.Pass pass)
				{
					return base.DeriveShadowReceiverPass_NoVirtual(pass);
				}
				protected override bool ValidatePassForRendering(EarthView.World.Graphic.Pass pass)
				{
					return base.ValidatePassForRendering_NoVirtual(pass);
				}
				protected override bool ValidateRenderableForRendering(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Renderable rend)
				{
					return base.ValidateRenderableForRendering_NoVirtual(pass,rend);
				}
				protected override EarthView.World.Graphic.MeshPtr CreateSkyboxPlane(EarthView.World.Graphic.SceneManager.BOXPLANE bp, double distance, EarthView.World.Spatial.Math.Quaternion orientation, string groupName)
				{
					return base.CreateSkyboxPlane_NoVirtual(bp,distance,orientation,groupName);
				}
				protected override EarthView.World.Graphic.MeshPtr CreateSkydomePlane(EarthView.World.Graphic.SceneManager.BOXPLANE bp, double curvature, double tiling, double distance, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments, int ySegmentsToKeep, string groupName)
				{
					return base.CreateSkydomePlane_NoVirtual(bp,curvature,tiling,distance,orientation,xsegments,ysegments,ySegmentsToKeep,groupName);
				}
				protected override void UseRenderableViewProjMode(EarthView.World.Graphic.Renderable pRend, bool fixedFunction)
				{
					base.UseRenderableViewProjMode_NoVirtual(pRend,fixedFunction);
				}
				protected override void ResetViewProjMode(bool fixedFunction)
				{
					base.ResetViewProjMode_NoVirtual(fixedFunction);
				}
				protected override void FirePreRenderQueues()
				{
					base.FirePreRenderQueues_NoVirtual();
				}
				protected override void FirePostRenderQueues()
				{
					base.FirePostRenderQueues_NoVirtual();
				}
				protected override bool FireRenderQueueStarted(byte id, string invocation)
				{
					return base.FireRenderQueueStarted_NoVirtual(id,invocation);
				}
				protected override bool FireRenderQueueEnded(byte id, string invocation)
				{
					return base.FireRenderQueueEnded_NoVirtual(id,invocation);
				}
				protected override void FireRenderSingleObjectStarted(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.AutoParamDataSource source, EarthView.World.Graphic.LightList pLightList, bool suppressRenderStateChanges)
				{
					base.FireRenderSingleObjectStarted_NoVirtual(rend,pass,source,pLightList,suppressRenderStateChanges);
				}
				protected override void FireRenderSingleObjectEnd(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.AutoParamDataSource source, EarthView.World.Graphic.LightList pLightList, bool suppressRenderStateChanges)
				{
					base.FireRenderSingleObjectEnd_NoVirtual(rend,pass,source,pLightList,suppressRenderStateChanges);
				}
				protected override void FireShadowTexturesUpdated(ulong numberOfShadowTextures)
				{
					base.FireShadowTexturesUpdated_NoVirtual(numberOfShadowTextures);
				}
				protected override void FireShadowTexturesPreCaster(EarthView.World.Graphic.Light light, EarthView.World.Graphic.Camera camera, ulong iteration)
				{
					base.FireShadowTexturesPreCaster_NoVirtual(light,camera,iteration);
				}
				protected override void FireShadowTexturesPreReceiver(EarthView.World.Graphic.Light light, EarthView.World.Graphic.Frustum f)
				{
					base.FireShadowTexturesPreReceiver_NoVirtual(light,f);
				}
				protected override void FirePreUpdateSceneGraph(EarthView.World.Graphic.Camera camera)
				{
					base.FirePreUpdateSceneGraph_NoVirtual(camera);
				}
				protected override void FirePostUpdateSceneGraph(EarthView.World.Graphic.Camera camera)
				{
					base.FirePostUpdateSceneGraph_NoVirtual(camera);
				}
				protected override void FirePreFindVisibleObjects(EarthView.World.Graphic.Viewport v)
				{
					base.FirePreFindVisibleObjects_NoVirtual(v);
				}
				protected override void FirePostFindVisibleObjects(EarthView.World.Graphic.Viewport v)
				{
					base.FirePostFindVisibleObjects_NoVirtual(v);
				}
				protected override void FireSceneManagerDestroyed()
				{
					base.FireSceneManagerDestroyed_NoVirtual();
				}
				protected override void SetViewport(EarthView.World.Graphic.Viewport vp)
				{
					base.SetViewport_NoVirtual(vp);
				}
				protected override void RenderVisibleObjectsDefaultSequence()
				{
					base.RenderVisibleObjectsDefaultSequence_NoVirtual();
				}
				protected override void RenderVisibleObjectsCustomSequence(EarthView.World.Graphic.RenderQueueInvocationSequence s)
				{
					base.RenderVisibleObjectsCustomSequence_NoVirtual(s);
				}
				protected override void PrepareRenderQueue()
				{
					base.PrepareRenderQueue_NoVirtual();
				}
				protected override void RenderSingleObject(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, bool lightScissoringClipping, bool doLightIteration, EarthView.World.Graphic.LightList manualLightList)
				{
					base.RenderSingleObject_NoVirtual(rend,pass,lightScissoringClipping,doLightIteration,manualLightList);
				}
				protected override void RenderSingleObject(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, bool lightScissoringClipping, bool doLightIteration)
				{
					base.RenderSingleObject_NoVirtual(rend,pass,lightScissoringClipping,doLightIteration);
				}
				protected override EarthView.World.Graphic.AutoParamDataSource CreateAutoParamDataSource()
				{
					return base.CreateAutoParamDataSource_NoVirtual();
				}
				protected override void FindLightsAffectingFrustum(EarthView.World.Graphic.Camera camera)
				{
					base.FindLightsAffectingFrustum_NoVirtual(camera);
				}
				protected override void InitShadowVolumeMaterials()
				{
					base.InitShadowVolumeMaterials_NoVirtual();
				}
				protected override void EnsureShadowTexturesCreated()
				{
					base.EnsureShadowTexturesCreated_NoVirtual();
				}
				protected override void DestroyShadowTextures()
				{
					base.DestroyShadowTextures_NoVirtual();
				}
				public override void PrepareShadowTextures(EarthView.World.Graphic.Camera cam, EarthView.World.Graphic.Viewport vp, EarthView.World.Graphic.LightList lightList)
				{
					base.PrepareShadowTextures_NoVirtual(cam,vp,lightList);
				}
				public override void PrepareShadowTextures(EarthView.World.Graphic.Camera cam, EarthView.World.Graphic.Viewport vp)
				{
					base.PrepareShadowTextures_NoVirtual(cam,vp);
				}
				public override void SetImageDefaultMaterial(EarthView.World.Graphic.MaterialPtr matPtr)
				{
					base.SetImageDefaultMaterial_NoVirtual(matPtr);
				}
				public override void SetImageUseDefaultMaterial(bool useDefaultMat)
				{
					base.SetImageUseDefaultMaterial_NoVirtual(useDefaultMat);
				}
				public override EarthView.World.Spatial.Math.Vector3 GetSunPosition()
				{
					return base.GetSunPosition_NoVirtual();
				}
				public override void SetAtmosphereVisible(bool visible)
				{
					base.SetAtmosphereVisible_NoVirtual(visible);
				}
				public override void StoreAtmosphereVisibleState()
				{
					base.StoreAtmosphereVisibleState_NoVirtual();
				}
				public override void RestoreAtmosphereVisibleState()
				{
					base.RestoreAtmosphereVisibleState_NoVirtual();
				}
				public override void SetSunVisible(bool flag)
				{
					base.SetSunVisible_NoVirtual(flag);
				}
				public override EarthView.World.Graphic.SceneManager.RenderContext _pauseRendering()
				{
					return base._pauseRendering_NoVirtual();
				}
				public override void _resumeRendering(EarthView.World.Graphic.SceneManager.RenderContext context)
				{
					base._resumeRendering_NoVirtual(context);
				}
				protected override void RenderShadowVolumesToStencil(EarthView.World.Graphic.Light light, EarthView.World.Graphic.Camera cam, bool calcScissor)
				{
					base.RenderShadowVolumesToStencil_NoVirtual(light,cam,calcScissor);
				}
				protected override void SetShadowVolumeStencilState(bool secondpass, bool zfail, bool twosided)
				{
					base.SetShadowVolumeStencilState_NoVirtual(secondpass,zfail,twosided);
				}
				protected override EarthView.World.Graphic.SceneManager.ShadowCasterList FindShadowCastersForLight(EarthView.World.Graphic.Light light, EarthView.World.Graphic.Camera camera)
				{
					return base.FindShadowCastersForLight_NoVirtual(light,camera);
				}
				protected override void RenderBasicQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup pGroup, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderBasicQueueGroupObjects_NoVirtual(pGroup,om);
				}
				protected override void RenderAdditiveStencilShadowedQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderAdditiveStencilShadowedQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderModulativeStencilShadowedQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderModulativeStencilShadowedQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderTextureShadowCasterQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderTextureShadowCasterQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderTextureShadowReceiverQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderTextureShadowReceiverQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderModulativeTextureShadowedQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderModulativeTextureShadowedQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderAdditiveTextureShadowedQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base.RenderAdditiveTextureShadowedQueueGroupObjects_NoVirtual(group,om);
				}
				protected override void RenderObjects(EarthView.World.Graphic.QueuedRenderableCollection objs, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om, bool lightScissoringClipping, bool doLightIteration, EarthView.World.Graphic.LightList manualLightList)
				{
					base.RenderObjects_NoVirtual(objs,om,lightScissoringClipping,doLightIteration,manualLightList);
				}
				protected override void RenderObjects(EarthView.World.Graphic.QueuedRenderableCollection objs, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om, bool lightScissoringClipping, bool doLightIteration)
				{
					base.RenderObjects_NoVirtual(objs,om,lightScissoringClipping,doLightIteration);
				}
				protected override void RenderTransparentShadowCasterObjects(EarthView.World.Graphic.QueuedRenderableCollection objs, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om, bool lightScissoringClipping, bool doLightIteration, EarthView.World.Graphic.LightList manualLightList)
				{
					base.RenderTransparentShadowCasterObjects_NoVirtual(objs,om,lightScissoringClipping,doLightIteration,manualLightList);
				}
				protected override void RenderTransparentShadowCasterObjects(EarthView.World.Graphic.QueuedRenderableCollection objs, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om, bool lightScissoringClipping, bool doLightIteration)
				{
					base.RenderTransparentShadowCasterObjects_NoVirtual(objs,om,lightScissoringClipping,doLightIteration);
				}
				protected override void UpdateRenderQueueSplitOptions()
				{
					base.UpdateRenderQueueSplitOptions_NoVirtual();
				}
				protected override void UpdateRenderQueueGroupSplitOptions(EarthView.World.Graphic.RenderQueueGroup group, bool suppressShadows, bool suppressRenderState)
				{
					base.UpdateRenderQueueGroupSplitOptions_NoVirtual(group,suppressShadows,suppressRenderState);
				}
				protected override EarthView.World.Graphic.CLIPRESULT BuildAndSetScissor(EarthView.World.Graphic.LightList ll, EarthView.World.Graphic.Camera cam)
				{
					return base.BuildAndSetScissor_NoVirtual(ll,cam);
				}
				protected override void BuildScissor(EarthView.World.Graphic.Light l, EarthView.World.Graphic.Camera cam, ref EarthView.World.Graphic.RealRect rect)
				{
					base.BuildScissor_NoVirtual(l,cam,ref rect);
				}
				protected override void ResetScissor()
				{
					base.ResetScissor_NoVirtual();
				}
				protected override EarthView.World.Graphic.CLIPRESULT BuildAndSetLightClip(EarthView.World.Graphic.LightList ll)
				{
					return base.BuildAndSetLightClip_NoVirtual(ll);
				}
				protected override void BuildLightClip(EarthView.World.Graphic.Light l, ref EarthView.World.Spatial.Math.PlaneList planes)
				{
					base.BuildLightClip_NoVirtual(l,ref planes);
				}
				protected override void ResetLightClip()
				{
					base.ResetLightClip_NoVirtual();
				}
				protected override void CheckCachedLightClippingInfo()
				{
					base.CheckCachedLightClippingInfo_NoVirtual();
				}
				protected override void UseLights(EarthView.World.Graphic.LightList lights, ushort limit)
				{
					base.UseLights_NoVirtual(lights,limit);
				}
				protected override void SetViewMatrix(EarthView.World.Spatial.Math.Matrix4 m)
				{
					base.SetViewMatrix_NoVirtual(m);
				}
				protected override void UseLightsGpuProgram(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.LightList lights)
				{
					base.UseLightsGpuProgram_NoVirtual(pass,lights);
				}
				protected override void BindGpuProgram(EarthView.World.Graphic.GpuProgram prog)
				{
					base.BindGpuProgram_NoVirtual(prog);
				}
				protected override void UpdateGpuProgramParameters(EarthView.World.Graphic.Pass p)
				{
					base.UpdateGpuProgramParameters_NoVirtual(p);
				}
				public override EarthView.World.Graphic.Camera GetCamera(string name)
				{
					return base.GetCamera_NoVirtual(name);
				}
				public override bool HasCamera(string name)
				{
					return base.HasCamera_NoVirtual(name);
				}
				public override void DestroyCamera(EarthView.World.Graphic.Camera cam)
				{
					base.DestroyCamera_NoVirtual(cam);
				}
				public override void DestroyCamera(string name)
				{
					base.DestroyCamera_NoVirtual(name);
				}
				public override void DestroyAllCameras()
				{
					base.DestroyAllCameras_NoVirtual();
				}
				public override EarthView.World.Graphic.Light CreateLight(string name)
				{
					return base.CreateLight_NoVirtual(name);
				}
				public override EarthView.World.Graphic.Light CreateLight()
				{
					return base.CreateLight_NoVirtual();
				}
				public override ushort GetLightCount()
				{
					return base.GetLightCount_NoVirtual();
				}
				public override EarthView.World.Graphic.Light GetLight(ushort index)
				{
					return base.GetLight_NoVirtual(index);
				}
				public override EarthView.World.Graphic.Light GetLight(string name)
				{
					return base.GetLight_NoVirtual(name);
				}
				public override bool HasLight(string name)
				{
					return base.HasLight_NoVirtual(name);
				}
				public override EarthView.World.Spatial.Math.PlaneList GetLightClippingPlanes(EarthView.World.Graphic.Light l)
				{
					return base.GetLightClippingPlanes_NoVirtual(l);
				}
				public override EarthView.World.Graphic.RealRect GetLightScissorRect(EarthView.World.Graphic.Light l, EarthView.World.Graphic.Camera cam)
				{
					return base.GetLightScissorRect_NoVirtual(l,cam);
				}
				public override void DestroyLight(string name)
				{
					base.DestroyLight_NoVirtual(name);
				}
				public override void DestroyLight(EarthView.World.Graphic.Light light)
				{
					base.DestroyLight_NoVirtual(light);
				}
				public override void DestroyAllLights()
				{
					base.DestroyAllLights_NoVirtual();
				}
				public override string GetSoftShadowTexName()
				{
					return base.GetSoftShadowTexName_NoVirtual();
				}
				public override EarthView.World.Graphic.Camera GetShadowTexCam()
				{
					return base.GetShadowTexCam_NoVirtual();
				}
				public override EarthView.World.Spatial.Math.Matrix4 GetSoftShadowProjMatrix(ushort index)
				{
					return base.GetSoftShadowProjMatrix_NoVirtual(index);
				}
				public override EarthView.World.Spatial.Math.Vector4 GetCascadeEyeSpaceDepthArray()
				{
					return base.GetCascadeEyeSpaceDepthArray_NoVirtual();
				}
				public override float GetSoftShadowNearClip(byte index)
				{
					return base.GetSoftShadowNearClip_NoVirtual(index);
				}
				public override float GetSoftShadowFarClip(byte index)
				{
					return base.GetSoftShadowFarClip_NoVirtual(index);
				}
				public override bool GetIsUseSoftShadowFitToCascadesMode()
				{
					return base.GetIsUseSoftShadowFitToCascadesMode_NoVirtual();
				}
				public override void SetIsUseSoftShadowFitToCascadesMode(bool flag)
				{
					base.SetIsUseSoftShadowFitToCascadesMode_NoVirtual(flag);
				}
				public override byte GetCurrentClipIndex()
				{
					return base.GetCurrentClipIndex_NoVirtual();
				}
				public override bool GetIsUseSoftShadowTechnique()
				{
					return base.GetIsUseSoftShadowTechnique_NoVirtual();
				}
				public override void SetIsUseSoftShadowTechnique(bool flag)
				{
					base.SetIsUseSoftShadowTechnique_NoVirtual(flag);
				}
				public override float GetCascadePartitionsPercent()
				{
					return base.GetCascadePartitionsPercent_NoVirtual();
				}
				public override void SetCascadePartitionsPercent(float percent)
				{
					base.SetCascadePartitionsPercent_NoVirtual(percent);
				}
				public override int GetCascadePartitionsDistance(byte index)
				{
					return base.GetCascadePartitionsDistance_NoVirtual(index);
				}
				public override void SetCascadePartitionsDistance(byte index, byte distance)
				{
					base.SetCascadePartitionsDistance_NoVirtual(index,distance);
				}
				public override EarthView.World.Graphic.PIXELFORMAT GetSoftShadowOffsetFormat()
				{
					return base.GetSoftShadowOffsetFormat_NoVirtual();
				}
				public override void CheckShadowCasterInFrustum(EarthView.World.Graphic.Camera camera)
				{
					base.CheckShadowCasterInFrustum_NoVirtual(camera);
				}
				public override bool HasShadowCasterInFrustum()
				{
					return base.HasShadowCasterInFrustum_NoVirtual();
				}
				public override double GetSoftShadowLightBleedPower()
				{
					return base.GetSoftShadowLightBleedPower_NoVirtual();
				}
				public override void SetSoftShadowLightBleedPower(double power)
				{
					base.SetSoftShadowLightBleedPower_NoVirtual(power);
				}
				public override double GetSoftShadowDepthOffset()
				{
					return base.GetSoftShadowDepthOffset_NoVirtual();
				}
				public override void SetSoftShadowDepthOffset(double offset)
				{
					base.SetSoftShadowDepthOffset_NoVirtual(offset);
				}
				public override float GetSoftShadowNormalFactor()
				{
					return base.GetSoftShadowNormalFactor_NoVirtual();
				}
				public override void SetSoftShadowNormalFactor(float factor)
				{
					base.SetSoftShadowNormalFactor_NoVirtual(factor);
				}
				public override void _notifyLightsDirty()
				{
					base._notifyLightsDirty_NoVirtual();
				}
				public override EarthView.World.Graphic.LightList _getLightsAffectingFrustum()
				{
					return base._getLightsAffectingFrustum_NoVirtual();
				}
				public override void _populateLightList(EarthView.World.Spatial.Math.Vector3 position, double radius, ref EarthView.World.Graphic.LightList destList, uint lightMask)
				{
					base._populateLightList_NoVirtual(position,radius,ref destList,lightMask);
				}
				public override void _populateLightList(EarthView.World.Spatial.Math.Vector3 position, double radius, ref EarthView.World.Graphic.LightList destList)
				{
					base._populateLightList_NoVirtual(position,radius,ref destList);
				}
				public override void ShowImage(bool visible)
				{
					base.ShowImage_NoVirtual(visible);
				}
				public override bool GetImageVisible()
				{
					return base.GetImageVisible_NoVirtual();
				}
				public override void ShowOcean(bool visible)
				{
					base.ShowOcean_NoVirtual(visible);
				}
				public override bool GetOceanVisible()
				{
					return base.GetOceanVisible_NoVirtual();
				}
				public override void _populateLightList(EarthView.World.Graphic.SceneNode sn, double radius, ref EarthView.World.Graphic.LightList destList, uint lightMask)
				{
					base._populateLightList_NoVirtual(sn,radius,ref destList,lightMask);
				}
				public override void _populateLightList(EarthView.World.Graphic.SceneNode sn, double radius, ref EarthView.World.Graphic.LightList destList)
				{
					base._populateLightList_NoVirtual(sn,radius,ref destList);
				}
				public override EarthView.World.Graphic.SceneNode CreateSceneNode()
				{
					return base.CreateSceneNode_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneNode CreateSceneNode(string name)
				{
					return base.CreateSceneNode_NoVirtual(name);
				}
				public override void DestroySceneNode(string name)
				{
					base.DestroySceneNode_NoVirtual(name);
				}
				public override void DestroySceneNode(EarthView.World.Graphic.SceneNode sn)
				{
					base.DestroySceneNode_NoVirtual(sn);
				}
				public override EarthView.World.Graphic.SceneNode GetRootSceneNode()
				{
					return base.GetRootSceneNode_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneNode GetSceneNode(string name)
				{
					return base.GetSceneNode_NoVirtual(name);
				}
				public override bool HasSceneNode(string name)
				{
					return base.HasSceneNode_NoVirtual(name);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, string meshName, EarthView.World.Core.IntVector subentityIndics, string groupName)
				{
					return base.CreateEntity_NoVirtual(entityName,meshName,subentityIndics,groupName);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, string meshName, string groupName)
				{
					return base.CreateEntity_NoVirtual(entityName,meshName,groupName);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, string meshName, EarthView.World.Core.IntVector subentityIndics)
				{
					return base.CreateEntity_NoVirtual(entityName,meshName,subentityIndics);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, string meshName)
				{
					return base.CreateEntity_NoVirtual(entityName,meshName);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, EarthView.World.Graphic.MeshPtr pMesh, EarthView.World.Core.IntVector subentityIndics)
				{
					return base.CreateEntity_NoVirtual(entityName,pMesh,subentityIndics);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, EarthView.World.Graphic.MeshPtr pMesh)
				{
					return base.CreateEntity_NoVirtual(entityName,pMesh);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(EarthView.World.Graphic.MeshPtr pMesh, EarthView.World.Core.IntVector subentityIndics)
				{
					return base.CreateEntity_NoVirtual(pMesh,subentityIndics);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(EarthView.World.Graphic.MeshPtr pMesh)
				{
					return base.CreateEntity_NoVirtual(pMesh);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string meshName, EarthView.World.Core.IntVector subentityIndics)
				{
					return base.CreateEntity_NoVirtual(meshName,subentityIndics);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string meshName)
				{
					return base.CreateEntity_NoVirtual(meshName);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(string entityName, EarthView.World.Graphic.SceneManager.PREFABTYPE ptype)
				{
					return base.CreateEntity_NoVirtual(entityName,ptype);
				}
				public override EarthView.World.Graphic.Entity CreateEntity(EarthView.World.Graphic.SceneManager.PREFABTYPE ptype)
				{
					return base.CreateEntity_NoVirtual(ptype);
				}
				public override EarthView.World.Graphic.Entity GetEntity(string name)
				{
					return base.GetEntity_NoVirtual(name);
				}
				public override bool HasEntity(string name)
				{
					return base.HasEntity_NoVirtual(name);
				}
				public override void DestroyEntity(EarthView.World.Graphic.Entity ent)
				{
					base.DestroyEntity_NoVirtual(ent);
				}
				public override void DestroyEntity(string name)
				{
					base.DestroyEntity_NoVirtual(name);
				}
				public override void DestroyAllEntities()
				{
					base.DestroyAllEntities_NoVirtual();
				}
				public override EarthView.World.Graphic.ManualObject CreateManualObject(string name)
				{
					return base.CreateManualObject_NoVirtual(name);
				}
				public override EarthView.World.Graphic.ManualObject CreateManualObject()
				{
					return base.CreateManualObject_NoVirtual();
				}
				public override EarthView.World.Graphic.ManualObject GetManualObject(string name)
				{
					return base.GetManualObject_NoVirtual(name);
				}
				public override bool HasManualObject(string name)
				{
					return base.HasManualObject_NoVirtual(name);
				}
				public override void DestroyManualObject(EarthView.World.Graphic.ManualObject obj)
				{
					base.DestroyManualObject_NoVirtual(obj);
				}
				public override void DestroyManualObject(string name)
				{
					base.DestroyManualObject_NoVirtual(name);
				}
				public override void DestroyAllManualObjects()
				{
					base.DestroyAllManualObjects_NoVirtual();
				}
				public override bool UsingWebMercator()
				{
					return base.UsingWebMercator_NoVirtual();
				}
				public override EarthView.World.Graphic.BillboardChain CreateBillboardChain(string name)
				{
					return base.CreateBillboardChain_NoVirtual(name);
				}
				public override EarthView.World.Graphic.BillboardChain CreateBillboardChain()
				{
					return base.CreateBillboardChain_NoVirtual();
				}
				public override EarthView.World.Graphic.BillboardChain GetBillboardChain(string name)
				{
					return base.GetBillboardChain_NoVirtual(name);
				}
				public override bool HasBillboardChain(string name)
				{
					return base.HasBillboardChain_NoVirtual(name);
				}
				public override void DestroyBillboardChain(EarthView.World.Graphic.BillboardChain obj)
				{
					base.DestroyBillboardChain_NoVirtual(obj);
				}
				public override void DestroyBillboardChain(string name)
				{
					base.DestroyBillboardChain_NoVirtual(name);
				}
				public override void DestroyAllBillboardChains()
				{
					base.DestroyAllBillboardChains_NoVirtual();
				}
				public override EarthView.World.Graphic.RibbonTrail CreateRibbonTrail(string name)
				{
					return base.CreateRibbonTrail_NoVirtual(name);
				}
				public override EarthView.World.Graphic.RibbonTrail CreateRibbonTrail()
				{
					return base.CreateRibbonTrail_NoVirtual();
				}
				public override EarthView.World.Graphic.RibbonTrail GetRibbonTrail(string name)
				{
					return base.GetRibbonTrail_NoVirtual(name);
				}
				public override bool HasRibbonTrail(string name)
				{
					return base.HasRibbonTrail_NoVirtual(name);
				}
				public override void DestroyRibbonTrail(EarthView.World.Graphic.RibbonTrail obj)
				{
					base.DestroyRibbonTrail_NoVirtual(obj);
				}
				public override void DestroyRibbonTrail(string name)
				{
					base.DestroyRibbonTrail_NoVirtual(name);
				}
				public override void DestroyAllRibbonTrails()
				{
					base.DestroyAllRibbonTrails_NoVirtual();
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(string name, string templateName)
				{
					return base.CreateParticleSystem_NoVirtual(name,templateName);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(string name, ulong quota, string resourceGroup)
				{
					return base.CreateParticleSystem_NoVirtual(name,quota,resourceGroup);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(string name, ulong quota)
				{
					return base.CreateParticleSystem_NoVirtual(name,quota);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(string name)
				{
					return base.CreateParticleSystem_NoVirtual(name);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(ulong quota, string resourceGroup)
				{
					return base.CreateParticleSystem_NoVirtual(quota,resourceGroup);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem(ulong quota)
				{
					return base.CreateParticleSystem_NoVirtual(quota);
				}
				public override EarthView.World.Graphic.ParticleSystem CreateParticleSystem()
				{
					return base.CreateParticleSystem_NoVirtual();
				}
				public override EarthView.World.Graphic.ParticleSystem GetParticleSystem(string name)
				{
					return base.GetParticleSystem_NoVirtual(name);
				}
				public override bool HasParticleSystem(string name)
				{
					return base.HasParticleSystem_NoVirtual(name);
				}
				public override void DestroyParticleSystem(EarthView.World.Graphic.ParticleSystem obj)
				{
					base.DestroyParticleSystem_NoVirtual(obj);
				}
				public override void DestroyParticleSystem(string name)
				{
					base.DestroyParticleSystem_NoVirtual(name);
				}
				public override void DestroyAllParticleSystems()
				{
					base.DestroyAllParticleSystems_NoVirtual();
				}
				public override void ClearScene()
				{
					base.ClearScene_NoVirtual();
				}
				public override void PrepareWorldGeometry(string filename)
				{
					base.PrepareWorldGeometry_NoVirtual(filename);
				}
				public override void PrepareWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream, string typeName)
				{
					base.PrepareWorldGeometry_NoVirtual(ref stream,typeName);
				}
				public override void PrepareWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream)
				{
					base.PrepareWorldGeometry_NoVirtual(ref stream);
				}
				public override void SetWorldGeometry(string filename)
				{
					base.SetWorldGeometry_NoVirtual(filename);
				}
				public override void SetWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream, string typeName)
				{
					base.SetWorldGeometry_NoVirtual(ref stream,typeName);
				}
				public override void SetWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream)
				{
					base.SetWorldGeometry_NoVirtual(ref stream);
				}
				public override ulong EstimateWorldGeometry(string filename)
				{
					return base.EstimateWorldGeometry_NoVirtual(filename);
				}
				public override ulong EstimateWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream, string typeName)
				{
					return base.EstimateWorldGeometry_NoVirtual(ref stream,typeName);
				}
				public override ulong EstimateWorldGeometry(ref EarthView.World.Core.DataStreamPtr stream)
				{
					return base.EstimateWorldGeometry_NoVirtual(ref stream);
				}
				public override EarthView.World.Graphic.ViewPoint GetSuggestedViewpoint(bool random)
				{
					return base.GetSuggestedViewpoint_NoVirtual(random);
				}
				public override EarthView.World.Graphic.ViewPoint GetSuggestedViewpoint()
				{
					return base.GetSuggestedViewpoint_NoVirtual();
				}
				public override bool SetOption(string strKey, IntPtr pValue)
				{
					return base.SetOption_NoVirtual(strKey,pValue);
				}
				public override bool GetOption(string strKey, IntPtr pDestValue)
				{
					return base.GetOption_NoVirtual(strKey,pDestValue);
				}
				public override bool HasOption(string strKey)
				{
					return base.HasOption_NoVirtual(strKey);
				}
				public override bool GetOptionValues(string strKey, ref EarthView.World.Core.StringVector refValueList)
				{
					return base.GetOptionValues_NoVirtual(strKey,ref refValueList);
				}
				public override bool GetOptionKeys(ref EarthView.World.Core.StringVector refKeys)
				{
					return base.GetOptionKeys_NoVirtual(ref refKeys);
				}
				public override void _updateSceneGraph(EarthView.World.Graphic.Camera cam)
				{
					base._updateSceneGraph_NoVirtual(cam);
				}
				public override void _findVisibleObjects(EarthView.World.Graphic.Camera cam, EarthView.World.Graphic.VisibleObjectsBoundsInfo visibleBounds, bool onlyShadowCasters)
				{
					base._findVisibleObjects_NoVirtual(cam,visibleBounds,onlyShadowCasters);
				}
				public override void _applySceneAnimations()
				{
					base._applySceneAnimations_NoVirtual();
				}
				public override void _renderVisibleObjects()
				{
					base._renderVisibleObjects_NoVirtual();
				}
				public override void _renderScene(EarthView.World.Graphic.Camera camera, EarthView.World.Graphic.Viewport vp, bool includeOverlays)
				{
					base._renderScene_NoVirtual(camera,vp,includeOverlays);
				}
				public override void _queueSkiesForRendering(EarthView.World.Graphic.Camera cam)
				{
					base._queueSkiesForRendering_NoVirtual(cam);
				}
				public override void _setDestinationRenderSystem(EarthView.World.Graphic.RenderSystem ref_sys)
				{
					base._setDestinationRenderSystem_NoVirtual(ref_sys);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, bool drawFirst, double bow, int xsegments, int ysegments, string groupName)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,drawFirst,bow,xsegments,ysegments,groupName);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, bool drawFirst, double bow, int xsegments, int ysegments)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,drawFirst,bow,xsegments,ysegments);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, bool drawFirst, double bow, int xsegments)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,drawFirst,bow,xsegments);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, bool drawFirst, double bow)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,drawFirst,bow);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, bool drawFirst)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,drawFirst);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName,scale);
				}
				public override void SetSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName)
				{
					base.SetSkyPlane_NoVirtual(enable,plane,materialName);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, byte renderQueue, double bow, int xsegments, int ysegments, string groupName)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,renderQueue,bow,xsegments,ysegments,groupName);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, byte renderQueue, double bow, int xsegments, int ysegments)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,renderQueue,bow,xsegments,ysegments);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, byte renderQueue, double bow, int xsegments)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,renderQueue,bow,xsegments);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, byte renderQueue, double bow)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,renderQueue,bow);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling, byte renderQueue)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling,renderQueue);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale, double tiling)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale,tiling);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName, double scale)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName,scale);
				}
				public override void _setSkyPlane(bool enable, EarthView.World.Spatial.Math.Plane plane, string materialName)
				{
					base._setSkyPlane_NoVirtual(enable,plane,materialName);
				}
				public override void SetSkyPlaneEnabled(bool enable)
				{
					base.SetSkyPlaneEnabled_NoVirtual(enable);
				}
				public override bool IsSkyPlaneEnabled()
				{
					return base.IsSkyPlaneEnabled_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneNode GetSkyPlaneNode()
				{
					return base.GetSkyPlaneNode_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneManager.SKYPLANEGENPARAMETERS GetSkyPlaneGenParameters()
				{
					return base.GetSkyPlaneGenParameters_NoVirtual();
				}
				public override void SetSkyBox(bool enable, string materialName, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation, string groupName)
				{
					base.SetSkyBox_NoVirtual(enable,materialName,distance,drawFirst,orientation,groupName);
				}
				public override void SetSkyBox(bool enable, string materialName, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation)
				{
					base.SetSkyBox_NoVirtual(enable,materialName,distance,drawFirst,orientation);
				}
				public override void SetSkyBox(bool enable, string materialName, double distance, bool drawFirst)
				{
					base.SetSkyBox_NoVirtual(enable,materialName,distance,drawFirst);
				}
				public override void SetSkyBox(bool enable, string materialName, double distance)
				{
					base.SetSkyBox_NoVirtual(enable,materialName,distance);
				}
				public override void SetSkyBox(bool enable, string materialName)
				{
					base.SetSkyBox_NoVirtual(enable,materialName);
				}
				public override void _setSkyBox(bool enable, string materialName, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation, string groupName)
				{
					base._setSkyBox_NoVirtual(enable,materialName,distance,renderQueue,orientation,groupName);
				}
				public override void _setSkyBox(bool enable, string materialName, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation)
				{
					base._setSkyBox_NoVirtual(enable,materialName,distance,renderQueue,orientation);
				}
				public override void _setSkyBox(bool enable, string materialName, double distance, byte renderQueue)
				{
					base._setSkyBox_NoVirtual(enable,materialName,distance,renderQueue);
				}
				public override void _setSkyBox(bool enable, string materialName, double distance)
				{
					base._setSkyBox_NoVirtual(enable,materialName,distance);
				}
				public override void _setSkyBox(bool enable, string materialName)
				{
					base._setSkyBox_NoVirtual(enable,materialName);
				}
				public override void SetSkyBoxEnabled(bool enable)
				{
					base.SetSkyBoxEnabled_NoVirtual(enable);
				}
				public override bool IsSkyBoxEnabled()
				{
					return base.IsSkyBoxEnabled_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneNode GetSkyBoxNode()
				{
					return base.GetSkyBoxNode_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneManager.SKYBOXGENPARAMETERS GetSkyBoxGenParameters()
				{
					return base.GetSkyBoxGenParameters_NoVirtual();
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments, int ysegments_keep, string groupName)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst,orientation,xsegments,ysegments,ysegments_keep,groupName);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments, int ysegments_keep)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst,orientation,xsegments,ysegments,ysegments_keep);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst,orientation,xsegments,ysegments);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst,orientation,xsegments);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst, EarthView.World.Spatial.Math.Quaternion orientation)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst,orientation);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, bool drawFirst)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,drawFirst);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling, double distance)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature, double tiling)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature,tiling);
				}
				public override void SetSkyDome(bool enable, string materialName, double curvature)
				{
					base.SetSkyDome_NoVirtual(enable,materialName,curvature);
				}
				public override void SetSkyDome(bool enable, string materialName)
				{
					base.SetSkyDome_NoVirtual(enable,materialName);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments, int ysegments_keep, string groupName)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue,orientation,xsegments,ysegments,ysegments_keep,groupName);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments, int ysegments_keep)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue,orientation,xsegments,ysegments,ysegments_keep);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments, int ysegments)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue,orientation,xsegments,ysegments);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation, int xsegments)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue,orientation,xsegments);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue, EarthView.World.Spatial.Math.Quaternion orientation)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue,orientation);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance, byte renderQueue)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance,renderQueue);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling, double distance)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling,distance);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature, double tiling)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature,tiling);
				}
				public override void _setSkyDome(bool enable, string materialName, double curvature)
				{
					base._setSkyDome_NoVirtual(enable,materialName,curvature);
				}
				public override void _setSkyDome(bool enable, string materialName)
				{
					base._setSkyDome_NoVirtual(enable,materialName);
				}
				public override void SetSkyDomeEnabled(bool enable)
				{
					base.SetSkyDomeEnabled_NoVirtual(enable);
				}
				public override bool IsSkyDomeEnabled()
				{
					return base.IsSkyDomeEnabled_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneNode GetSkyDomeNode()
				{
					return base.GetSkyDomeNode_NoVirtual();
				}
				public override EarthView.World.Graphic.SceneManager.SKYDOMEGENPARAMETERS GetSkyDomeGenParameters()
				{
					return base.GetSkyDomeGenParameters_NoVirtual();
				}
				public override EarthView.World.Graphic.FOGMODE GetFogMode()
				{
					return base.GetFogMode_NoVirtual();
				}
				public override EarthView.World.Graphic.ColourValue GetFogColour()
				{
					return base.GetFogColour_NoVirtual();
				}
				public override double GetFogStart()
				{
					return base.GetFogStart_NoVirtual();
				}
				public override double GetFogEnd()
				{
					return base.GetFogEnd_NoVirtual();
				}
				public override double GetFogDensity()
				{
					return base.GetFogDensity_NoVirtual();
				}
				public override EarthView.World.Graphic.BillboardSet CreateBillboardSet(string name, uint poolSize)
				{
					return base.CreateBillboardSet_NoVirtual(name,poolSize);
				}
				public override EarthView.World.Graphic.BillboardSet CreateBillboardSet(string name)
				{
					return base.CreateBillboardSet_NoVirtual(name);
				}
				public override EarthView.World.Graphic.BillboardSet CreateBillboardSet(uint poolSize)
				{
					return base.CreateBillboardSet_NoVirtual(poolSize);
				}
				public override EarthView.World.Graphic.BillboardSet CreateBillboardSet()
				{
					return base.CreateBillboardSet_NoVirtual();
				}
				public override EarthView.World.Graphic.BillboardSet GetBillboardSet(string name)
				{
					return base.GetBillboardSet_NoVirtual(name);
				}
				public override bool HasBillboardSet(string name)
				{
					return base.HasBillboardSet_NoVirtual(name);
				}
				public override void DestroyBillboardSet(EarthView.World.Graphic.BillboardSet set)
				{
					base.DestroyBillboardSet_NoVirtual(set);
				}
				public override void DestroyBillboardSet(string name)
				{
					base.DestroyBillboardSet_NoVirtual(name);
				}
				public override void DestroyAllBillboardSets()
				{
					base.DestroyAllBillboardSets_NoVirtual();
				}
				public override void SetDisplaySceneNodes(bool display)
				{
					base.SetDisplaySceneNodes_NoVirtual(display);
				}
				public override bool GetDisplaySceneNodes()
				{
					return base.GetDisplaySceneNodes_NoVirtual();
				}
				public override EarthView.World.Graphic.Animation CreateAnimation(string name, double length)
				{
					return base.CreateAnimation_NoVirtual(name,length);
				}
				public override EarthView.World.Graphic.Animation GetAnimation(string name)
				{
					return base.GetAnimation_NoVirtual(name);
				}
				public override bool HasAnimation(string name)
				{
					return base.HasAnimation_NoVirtual(name);
				}
				public override void DestroyAnimation(string name)
				{
					base.DestroyAnimation_NoVirtual(name);
				}
				public override void DestroyAllAnimations()
				{
					base.DestroyAllAnimations_NoVirtual();
				}
				public override EarthView.World.Graphic.AnimationState CreateAnimationState(string animName)
				{
					return base.CreateAnimationState_NoVirtual(animName);
				}
				public override EarthView.World.Graphic.AnimationState GetAnimationState(string animName)
				{
					return base.GetAnimationState_NoVirtual(animName);
				}
				public override bool HasAnimationState(string name)
				{
					return base.HasAnimationState_NoVirtual(name);
				}
				public override void DestroyAnimationState(string name)
				{
					base.DestroyAnimationState_NoVirtual(name);
				}
				public override void DestroyAllAnimationStates()
				{
					base.DestroyAllAnimationStates_NoVirtual();
				}
				public override void ManualRender(EarthView.World.Graphic.RenderOperation rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 worldMatrix, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix, bool doBeginEndFrame)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,worldMatrix,viewMatrix,projMatrix,doBeginEndFrame);
				}
				public override void ManualRender(EarthView.World.Graphic.RenderOperation rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 worldMatrix, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,worldMatrix,viewMatrix,projMatrix);
				}
				public override void ManualRender(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix, bool doBeginEndFrame, bool lightScissoringClipping, bool doLightIteration, EarthView.World.Graphic.LightList manualLightList)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,viewMatrix,projMatrix,doBeginEndFrame,lightScissoringClipping,doLightIteration,manualLightList);
				}
				public override void ManualRender(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix, bool doBeginEndFrame, bool lightScissoringClipping, bool doLightIteration)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,viewMatrix,projMatrix,doBeginEndFrame,lightScissoringClipping,doLightIteration);
				}
				public override void ManualRender(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix, bool doBeginEndFrame, bool lightScissoringClipping)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,viewMatrix,projMatrix,doBeginEndFrame,lightScissoringClipping);
				}
				public override void ManualRender(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix, bool doBeginEndFrame)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,viewMatrix,projMatrix,doBeginEndFrame);
				}
				public override void ManualRender(EarthView.World.Graphic.Renderable rend, EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Viewport vp, EarthView.World.Spatial.Math.Matrix4 viewMatrix, EarthView.World.Spatial.Math.Matrix4 projMatrix)
				{
					base.ManualRender_NoVirtual(rend,pass,vp,viewMatrix,projMatrix);
				}
				public override EarthView.World.Graphic.RenderQueue GetRenderQueue()
				{
					return base.GetRenderQueue_NoVirtual();
				}
				public override void AddRenderQueueListener(EarthView.World.Graphic.RenderQueueListener ref_newListener)
				{
					base.AddRenderQueueListener_NoVirtual(ref_newListener);
				}
				public override void RemoveRenderQueueListener(EarthView.World.Graphic.RenderQueueListener delListener)
				{
					base.RemoveRenderQueueListener_NoVirtual(delListener);
				}
				public override void AddRenderObjectListener(EarthView.World.Graphic.RenderObjectListener ref_newListener)
				{
					base.AddRenderObjectListener_NoVirtual(ref_newListener);
				}
				public override void RemoveRenderObjectListener(EarthView.World.Graphic.RenderObjectListener delListener)
				{
					base.RemoveRenderObjectListener_NoVirtual(delListener);
				}
				public override void AddSpecialCaseRenderQueue(byte qid)
				{
					base.AddSpecialCaseRenderQueue_NoVirtual(qid);
				}
				public override void RemoveSpecialCaseRenderQueue(byte qid)
				{
					base.RemoveSpecialCaseRenderQueue_NoVirtual(qid);
				}
				public override void ClearSpecialCaseRenderQueues()
				{
					base.ClearSpecialCaseRenderQueues_NoVirtual();
				}
				public override void SetSpecialCaseRenderQueueMode(EarthView.World.Graphic.SceneManager.SPECIALCASERENDERQUEUEMODE mode)
				{
					base.SetSpecialCaseRenderQueueMode_NoVirtual(mode);
				}
				public override EarthView.World.Graphic.SceneManager.SPECIALCASERENDERQUEUEMODE GetSpecialCaseRenderQueueMode()
				{
					return base.GetSpecialCaseRenderQueueMode_NoVirtual();
				}
				public override bool IsRenderQueueToBeProcessed(byte qid)
				{
					return base.IsRenderQueueToBeProcessed_NoVirtual(qid);
				}
				public override void SetWorldGeometryRenderQueue(byte qid)
				{
					base.SetWorldGeometryRenderQueue_NoVirtual(qid);
				}
				public override byte GetWorldGeometryRenderQueue()
				{
					return base.GetWorldGeometryRenderQueue_NoVirtual();
				}
				public override void ShowBoundingBoxes(bool bShow)
				{
					base.ShowBoundingBoxes_NoVirtual(bShow);
				}
				public override bool GetShowBoundingBoxes()
				{
					return base.GetShowBoundingBoxes_NoVirtual();
				}
				public override void _notifyAutotrackingSceneNode(EarthView.World.Graphic.SceneNode node, bool autoTrack)
				{
					base._notifyAutotrackingSceneNode_NoVirtual(node,autoTrack);
				}
				public override EarthView.World.Graphic.AxisAlignedBoxSceneQuery CreateAABBQuery(EarthView.World.Spatial.Math.AxisAlignedBox box, uint mask)
				{
					return base.CreateAABBQuery_NoVirtual(box,mask);
				}
				public override EarthView.World.Graphic.AxisAlignedBoxSceneQuery CreateAABBQuery(EarthView.World.Spatial.Math.AxisAlignedBox box)
				{
					return base.CreateAABBQuery_NoVirtual(box);
				}
				public override EarthView.World.Graphic.SphereSceneQuery CreateSphereQuery(EarthView.World.Spatial.Math.Sphere sphere, uint mask)
				{
					return base.CreateSphereQuery_NoVirtual(sphere,mask);
				}
				public override EarthView.World.Graphic.SphereSceneQuery CreateSphereQuery(EarthView.World.Spatial.Math.Sphere sphere)
				{
					return base.CreateSphereQuery_NoVirtual(sphere);
				}
				public override EarthView.World.Graphic.PlaneBoundedVolumeListSceneQuery CreatePlaneBoundedVolumeQuery(EarthView.World.Spatial.Math.PlaneBoundedVolumeList volumes, uint mask)
				{
					return base.CreatePlaneBoundedVolumeQuery_NoVirtual(volumes,mask);
				}
				public override EarthView.World.Graphic.PlaneBoundedVolumeListSceneQuery CreatePlaneBoundedVolumeQuery(EarthView.World.Spatial.Math.PlaneBoundedVolumeList volumes)
				{
					return base.CreatePlaneBoundedVolumeQuery_NoVirtual(volumes);
				}
				public override EarthView.World.Graphic.RaySceneQuery CreateRayQuery(EarthView.World.Spatial.Math.Ray ray, uint mask)
				{
					return base.CreateRayQuery_NoVirtual(ray,mask);
				}
				public override EarthView.World.Graphic.RaySceneQuery CreateRayQuery(EarthView.World.Spatial.Math.Ray ray)
				{
					return base.CreateRayQuery_NoVirtual(ray);
				}
				public override EarthView.World.Graphic.IntersectionSceneQuery CreateIntersectionQuery(uint mask)
				{
					return base.CreateIntersectionQuery_NoVirtual(mask);
				}
				public override EarthView.World.Graphic.IntersectionSceneQuery CreateIntersectionQuery()
				{
					return base.CreateIntersectionQuery_NoVirtual();
				}
				public override void DestroyQuery(EarthView.World.Graphic.SceneQuery query)
				{
					base.DestroyQuery_NoVirtual(query);
				}
				public override void SetShadowTechnique(EarthView.World.Graphic.SHADOWTECHNIQUE technique)
				{
					base.SetShadowTechnique_NoVirtual(technique);
				}
				public override EarthView.World.Graphic.SHADOWTECHNIQUE GetShadowTechnique()
				{
					return base.GetShadowTechnique_NoVirtual();
				}
				public override void SetShowDebugShadows(bool debug)
				{
					base.SetShowDebugShadows_NoVirtual(debug);
				}
				public override bool GetShowDebugShadows()
				{
					return base.GetShowDebugShadows_NoVirtual();
				}
				public override void SetShadowColour(EarthView.World.Graphic.ColourValue colour)
				{
					base.SetShadowColour_NoVirtual(colour);
				}
				public override EarthView.World.Graphic.ColourValue GetShadowColour()
				{
					return base.GetShadowColour_NoVirtual();
				}
				public override void SetShadowDirectionalLightExtrusionDistance(double dist)
				{
					base.SetShadowDirectionalLightExtrusionDistance_NoVirtual(dist);
				}
				public override double GetShadowDirectionalLightExtrusionDistance()
				{
					return base.GetShadowDirectionalLightExtrusionDistance_NoVirtual();
				}
				public override void SetShadowColorRRatio(double rRatio)
				{
					base.SetShadowColorRRatio_NoVirtual(rRatio);
				}
				public override void SetShadowColorGRatio(double gRatio)
				{
					base.SetShadowColorGRatio_NoVirtual(gRatio);
				}
				public override void SetShadowColorBRatio(double bRatio)
				{
					base.SetShadowColorBRatio_NoVirtual(bRatio);
				}
				public override double GetShadowColorRRatio()
				{
					return base.GetShadowColorRRatio_NoVirtual();
				}
				public override double GetShadowColorGRatio()
				{
					return base.GetShadowColorGRatio_NoVirtual();
				}
				public override double GetShadowColorBRatio()
				{
					return base.GetShadowColorBRatio_NoVirtual();
				}
				public override void SetShadowFarDistance(double distance)
				{
					base.SetShadowFarDistance_NoVirtual(distance);
				}
				public override double GetShadowFarDistance()
				{
					return base.GetShadowFarDistance_NoVirtual();
				}
				public override double GetShadowFarDistanceSquared()
				{
					return base.GetShadowFarDistanceSquared_NoVirtual();
				}
				public override void SetShadowIndexBufferSize(ulong size)
				{
					base.SetShadowIndexBufferSize_NoVirtual(size);
				}
				public override ulong GetShadowIndexBufferSize()
				{
					return base.GetShadowIndexBufferSize_NoVirtual();
				}
				public override void SetShadowTextureSize(ushort size)
				{
					base.SetShadowTextureSize_NoVirtual(size);
				}
				public override void SetShadowTextureConfig(ulong shadowIndex, ushort width, ushort height, EarthView.World.Graphic.PIXELFORMAT format)
				{
					base.SetShadowTextureConfig_NoVirtual(shadowIndex,width,height,format);
				}
				public override void SetShadowTextureConfig(ulong shadowIndex, ushort width, ushort height, EarthView.World.Graphic.PIXELFORMAT format, ushort fsaa)
				{
					base.SetShadowTextureConfig_NoVirtual(shadowIndex,width,height,format,fsaa);
				}
				public override void SetShadowTextureConfig(ulong shadowIndex, ushort width, ushort height, EarthView.World.Graphic.PIXELFORMAT format, ushort fsaa, ushort depthBufferPoolId)
				{
					base.SetShadowTextureConfig_NoVirtual(shadowIndex,width,height,format,fsaa,depthBufferPoolId);
				}
				public override void SetShadowTextureConfig(ulong shadowIndex, EarthView.World.Graphic.ShadowTextureConfig config)
				{
					base.SetShadowTextureConfig_NoVirtual(shadowIndex,config);
				}
				public override void SetShadowTexturePixelFormat(EarthView.World.Graphic.PIXELFORMAT fmt)
				{
					base.SetShadowTexturePixelFormat_NoVirtual(fmt);
				}
				public override void SetShadowTextureFSAA(ushort fsaa)
				{
					base.SetShadowTextureFSAA_NoVirtual(fsaa);
				}
				public override void SetShadowTextureCount(ulong count)
				{
					base.SetShadowTextureCount_NoVirtual(count);
				}
				public override void SetShadowTextureSettings(ushort size, ushort count)
				{
					base.SetShadowTextureSettings_NoVirtual(size,count);
				}
				public override void SetShadowTextureSettings(ushort size, ushort count, EarthView.World.Graphic.PIXELFORMAT fmt)
				{
					base.SetShadowTextureSettings_NoVirtual(size,count,fmt);
				}
				public override void SetShadowTextureSettings(ushort size, ushort count, EarthView.World.Graphic.PIXELFORMAT fmt, ushort fsaa)
				{
					base.SetShadowTextureSettings_NoVirtual(size,count,fmt,fsaa);
				}
				public override void SetShadowTextureSettings(ushort size, ushort count, EarthView.World.Graphic.PIXELFORMAT fmt, ushort fsaa, ushort depthBufferPoolId)
				{
					base.SetShadowTextureSettings_NoVirtual(size,count,fmt,fsaa,depthBufferPoolId);
				}
				public override EarthView.World.Graphic.TexturePtr GetShadowTexture(ulong shadowIndex)
				{
					return base.GetShadowTexture_NoVirtual(shadowIndex);
				}
				public override void SetShadowDirLightTextureOffset(double offset)
				{
					base.SetShadowDirLightTextureOffset_NoVirtual(offset);
				}
				public override double GetShadowDirLightTextureOffset()
				{
					return base.GetShadowDirLightTextureOffset_NoVirtual();
				}
				public override void SetShadowTextureFadeStart(double fadeStart)
				{
					base.SetShadowTextureFadeStart_NoVirtual(fadeStart);
				}
				public override void SetShadowTextureFadeEnd(double fadeEnd)
				{
					base.SetShadowTextureFadeEnd_NoVirtual(fadeEnd);
				}
				public override void SetShadowTextureSelfShadow(bool selfShadow)
				{
					base.SetShadowTextureSelfShadow_NoVirtual(selfShadow);
				}
				public override bool GetShadowTextureSelfShadow()
				{
					return base.GetShadowTextureSelfShadow_NoVirtual();
				}
				public override void SetShadowTextureCasterMaterial(string name)
				{
					base.SetShadowTextureCasterMaterial_NoVirtual(name);
				}
				public override void SetShadowTextureReceiverMaterial(string name)
				{
					base.SetShadowTextureReceiverMaterial_NoVirtual(name);
				}
				public override void SetShadowCasterRenderBackFaces(bool bf)
				{
					base.SetShadowCasterRenderBackFaces_NoVirtual(bf);
				}
				public override bool GetShadowCasterRenderBackFaces()
				{
					return base.GetShadowCasterRenderBackFaces_NoVirtual();
				}
				public override void SetShadowCameraSetup(EarthView.World.Graphic.ShadowCameraSetupPtr shadowSetup)
				{
					base.SetShadowCameraSetup_NoVirtual(shadowSetup);
				}
				public override EarthView.World.Graphic.ShadowCameraSetupPtr GetShadowCameraSetup()
				{
					return base.GetShadowCameraSetup_NoVirtual();
				}
				public override void SetShadowUseInfiniteFarPlane(bool enable)
				{
					base.SetShadowUseInfiniteFarPlane_NoVirtual(enable);
				}
				public override bool IsShadowTechniqueStencilBased()
				{
					return base.IsShadowTechniqueStencilBased_NoVirtual();
				}
				public override bool IsShadowTechniqueTextureBased()
				{
					return base.IsShadowTechniqueTextureBased_NoVirtual();
				}
				public override bool IsShadowTechniqueModulative()
				{
					return base.IsShadowTechniqueModulative_NoVirtual();
				}
				public override bool IsShadowTechniqueAdditive()
				{
					return base.IsShadowTechniqueAdditive_NoVirtual();
				}
				public override bool IsShadowTechniqueIntegrated()
				{
					return base.IsShadowTechniqueIntegrated_NoVirtual();
				}
				public override bool IsShadowTechniqueInUse()
				{
					return base.IsShadowTechniqueInUse_NoVirtual();
				}
				public override void SetShadowUseLightClipPlanes(bool enabled)
				{
					base.SetShadowUseLightClipPlanes_NoVirtual(enabled);
				}
				public override bool GetShadowUseLightClipPlanes()
				{
					return base.GetShadowUseLightClipPlanes_NoVirtual();
				}
				public override void _setActiveCompositorChain(EarthView.World.Graphic.CompositorChain chain)
				{
					base._setActiveCompositorChain_NoVirtual(chain);
				}
				public override void SetLateMaterialResolving(bool isLate)
				{
					base.SetLateMaterialResolving_NoVirtual(isLate);
				}
				public override bool IsLateMaterialResolving()
				{
					return base.IsLateMaterialResolving_NoVirtual();
				}
				public override EarthView.World.Graphic.CompositorChain _getActiveCompositorChain()
				{
					return base._getActiveCompositorChain_NoVirtual();
				}
				public override void AddListener(EarthView.World.Graphic.SceneManager.SceneManagerListener ref_s)
				{
					base.AddListener_NoVirtual(ref_s);
				}
				public override void RemoveListener(EarthView.World.Graphic.SceneManager.SceneManagerListener s)
				{
					base.RemoveListener_NoVirtual(s);
				}
				public override bool ExistListener(EarthView.World.Graphic.SceneManager.SceneManagerListener s)
				{
					return base.ExistListener_NoVirtual(s);
				}
				public override EarthView.World.Graphic.StaticGeometry CreateStaticGeometry(string name)
				{
					return base.CreateStaticGeometry_NoVirtual(name);
				}
				public override EarthView.World.Graphic.StaticGeometry GetStaticGeometry(string name)
				{
					return base.GetStaticGeometry_NoVirtual(name);
				}
				public override bool HasStaticGeometry(string name)
				{
					return base.HasStaticGeometry_NoVirtual(name);
				}
				public override void DestroyStaticGeometry(EarthView.World.Graphic.StaticGeometry geom)
				{
					base.DestroyStaticGeometry_NoVirtual(geom);
				}
				public override void DestroyStaticGeometry(string name)
				{
					base.DestroyStaticGeometry_NoVirtual(name);
				}
				public override void DestroyAllStaticGeometry()
				{
					base.DestroyAllStaticGeometry_NoVirtual();
				}
				public override EarthView.World.Graphic.InstancedGeometry CreateInstancedGeometry(string name)
				{
					return base.CreateInstancedGeometry_NoVirtual(name);
				}
				public override EarthView.World.Graphic.InstancedGeometry GetInstancedGeometry(string name)
				{
					return base.GetInstancedGeometry_NoVirtual(name);
				}
				public override void DestroyInstancedGeometry(EarthView.World.Graphic.InstancedGeometry geom)
				{
					base.DestroyInstancedGeometry_NoVirtual(geom);
				}
				public override void DestroyInstancedGeometry(string name)
				{
					base.DestroyInstancedGeometry_NoVirtual(name);
				}
				public override void DestroyAllInstancedGeometry()
				{
					base.DestroyAllInstancedGeometry_NoVirtual();
				}
				public override EarthView.World.Graphic.InstanceManager CreateInstanceManager(string customName, string meshName, string groupName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch, ushort flags, ushort subMeshIdx)
				{
					return base.CreateInstanceManager_NoVirtual(customName,meshName,groupName,technique,numInstancesPerBatch,flags,subMeshIdx);
				}
				public override EarthView.World.Graphic.InstanceManager CreateInstanceManager(string customName, string meshName, string groupName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch, ushort flags)
				{
					return base.CreateInstanceManager_NoVirtual(customName,meshName,groupName,technique,numInstancesPerBatch,flags);
				}
				public override EarthView.World.Graphic.InstanceManager CreateInstanceManager(string customName, string meshName, string groupName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch)
				{
					return base.CreateInstanceManager_NoVirtual(customName,meshName,groupName,technique,numInstancesPerBatch);
				}
				public override EarthView.World.Graphic.InstanceManager GetInstanceManager(string managerName)
				{
					return base.GetInstanceManager_NoVirtual(managerName);
				}
				public override bool HasInstanceManager(string managerName)
				{
					return base.HasInstanceManager_NoVirtual(managerName);
				}
				public override void DestroyInstanceManager(string name)
				{
					base.DestroyInstanceManager_NoVirtual(name);
				}
				public override void DestroyInstanceManager(EarthView.World.Graphic.InstanceManager instanceManager)
				{
					base.DestroyInstanceManager_NoVirtual(instanceManager);
				}
				public override void DestroyInstanceManagerWithThreadSafe(string name)
				{
					base.DestroyInstanceManagerWithThreadSafe_NoVirtual(name);
				}
				public override void DestroyInstanceManagerWithThreadSafe(EarthView.World.Graphic.InstanceManager instanceManager)
				{
					base.DestroyInstanceManagerWithThreadSafe_NoVirtual(instanceManager);
				}
				public override void DestroyAllInstanceManagers()
				{
					base.DestroyAllInstanceManagers_NoVirtual();
				}
				public override ulong GetNumInstancesPerBatch(string meshName, string groupName, string materialName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch)
				{
					return base.GetNumInstancesPerBatch_NoVirtual(meshName,groupName,materialName,technique,numInstancesPerBatch);
				}
				public override ulong GetNumInstancesPerBatch(string meshName, string groupName, string materialName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch, ushort flags)
				{
					return base.GetNumInstancesPerBatch_NoVirtual(meshName,groupName,materialName,technique,numInstancesPerBatch,flags);
				}
				public override ulong GetNumInstancesPerBatch(string meshName, string groupName, string materialName, EarthView.World.Graphic.InstanceManager.INSTANCINGTECHNIQUE technique, ulong numInstancesPerBatch, ushort flags, ushort subMeshIdx)
				{
					return base.GetNumInstancesPerBatch_NoVirtual(meshName,groupName,materialName,technique,numInstancesPerBatch,flags,subMeshIdx);
				}
				public override EarthView.World.Graphic.InstancedEntity CreateInstancedEntity(string materialName, string managerName)
				{
					return base.CreateInstancedEntity_NoVirtual(materialName,managerName);
				}
				public override void DestroyInstancedEntity(EarthView.World.Graphic.InstancedEntity instancedEntity)
				{
					base.DestroyInstancedEntity_NoVirtual(instancedEntity);
				}
				public override EarthView.World.Graphic.MovableObject CreateMovableObject(string name, string typeName, EarthView.World.Core.CommonStringPairList EVparams)
				{
					return base.CreateMovableObject_NoVirtual(name,typeName,EVparams);
				}
				public override EarthView.World.Graphic.MovableObject CreateMovableObject(string name, string typeName)
				{
					return base.CreateMovableObject_NoVirtual(name,typeName);
				}
				public override EarthView.World.Graphic.MovableObject CreateMovableObject(string typeName, EarthView.World.Core.CommonStringPairList EVparams)
				{
					return base.CreateMovableObject_NoVirtual(typeName,EVparams);
				}
				public override EarthView.World.Graphic.MovableObject CreateMovableObject(string typeName)
				{
					return base.CreateMovableObject_NoVirtual(typeName);
				}
				public override void DestroyMovableObject(string name, string typeName)
				{
					base.DestroyMovableObject_NoVirtual(name,typeName);
				}
				public override void DestroyMovableObject(EarthView.World.Graphic.MovableObject m)
				{
					base.DestroyMovableObject_NoVirtual(m);
				}
				public override void DestroyAllMovableObjectsByType(string typeName)
				{
					base.DestroyAllMovableObjectsByType_NoVirtual(typeName);
				}
				public override void DestroyAllMovableObjects()
				{
					base.DestroyAllMovableObjects_NoVirtual();
				}
				public override EarthView.World.Graphic.MovableObject GetMovableObject(string name, string typeName)
				{
					return base.GetMovableObject_NoVirtual(name,typeName);
				}
				public override bool HasMovableObject(string name, string typeName)
				{
					return base.HasMovableObject_NoVirtual(name,typeName);
				}
				public override EarthView.World.Graphic.SceneManager.MovableObjectIterator GetMovableObjectIterator(string typeName)
				{
					return base.GetMovableObjectIterator_NoVirtual(typeName);
				}
				public override void InjectMovableObject(EarthView.World.Graphic.MovableObject m)
				{
					base.InjectMovableObject_NoVirtual(m);
				}
				public override void ExtractMovableObject(string name, string typeName)
				{
					base.ExtractMovableObject_NoVirtual(name,typeName);
				}
				public override void ExtractMovableObject(EarthView.World.Graphic.MovableObject m)
				{
					base.ExtractMovableObject_NoVirtual(m);
				}
				public override void ExtractAllMovableObjectsByType(string typeName)
				{
					base.ExtractAllMovableObjectsByType_NoVirtual(typeName);
				}
				public override void SetVisibilityMask(uint vmask)
				{
					base.SetVisibilityMask_NoVirtual(vmask);
				}
				public override uint GetVisibilityMask()
				{
					return base.GetVisibilityMask_NoVirtual();
				}
				public override void SetFindVisibleObjects(bool find)
				{
					base.SetFindVisibleObjects_NoVirtual(find);
				}
				public override bool GetFindVisibleObjects()
				{
					return base.GetFindVisibleObjects_NoVirtual();
				}
				public override void SetNormaliseNormalsOnScale(bool n)
				{
					base.SetNormaliseNormalsOnScale_NoVirtual(n);
				}
				public override bool GetNormaliseNormalsOnScale()
				{
					return base.GetNormaliseNormalsOnScale_NoVirtual();
				}
				public override void SetFlipCullingOnNegativeScale(bool n)
				{
					base.SetFlipCullingOnNegativeScale_NoVirtual(n);
				}
				public override bool GetFlipCullingOnNegativeScale()
				{
					return base.GetFlipCullingOnNegativeScale_NoVirtual();
				}
				public override void _injectRenderWithPass(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Renderable rend, bool shadowDerivation, bool doLightIteration, EarthView.World.Graphic.LightList manualLightList)
				{
					base._injectRenderWithPass_NoVirtual(pass,rend,shadowDerivation,doLightIteration,manualLightList);
				}
				public override void _injectRenderWithPass(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Renderable rend, bool shadowDerivation, bool doLightIteration)
				{
					base._injectRenderWithPass_NoVirtual(pass,rend,shadowDerivation,doLightIteration);
				}
				public override void _injectRenderWithPass(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Renderable rend, bool shadowDerivation)
				{
					base._injectRenderWithPass_NoVirtual(pass,rend,shadowDerivation);
				}
				public override void _injectRenderWithPass(EarthView.World.Graphic.Pass pass, EarthView.World.Graphic.Renderable rend)
				{
					base._injectRenderWithPass_NoVirtual(pass,rend);
				}
				public override void _suppressRenderStateChanges(bool suppress)
				{
					base._suppressRenderStateChanges_NoVirtual(suppress);
				}
				public override bool _areRenderStateChangesSuppressed()
				{
					return base._areRenderStateChangesSuppressed_NoVirtual();
				}
				public override EarthView.World.Graphic.Pass _setPass(EarthView.World.Graphic.Pass pass, bool evenIfSuppressed, bool shadowDerivation)
				{
					return base._setPass_NoVirtual(pass,evenIfSuppressed,shadowDerivation);
				}
				public override EarthView.World.Graphic.Pass _setPass(EarthView.World.Graphic.Pass pass, bool evenIfSuppressed)
				{
					return base._setPass_NoVirtual(pass,evenIfSuppressed);
				}
				public override EarthView.World.Graphic.Pass _setPass(EarthView.World.Graphic.Pass pass)
				{
					return base._setPass_NoVirtual(pass);
				}
				public override void _markGpuParamsDirty(ushort mask)
				{
					base._markGpuParamsDirty_NoVirtual(mask);
				}
				public override void _suppressShadows(bool suppress)
				{
					base._suppressShadows_NoVirtual(suppress);
				}
				public override bool _areShadowsSuppressed()
				{
					return base._areShadowsSuppressed_NoVirtual();
				}
				public override void _renderQueueGroupObjects(EarthView.World.Graphic.RenderQueueGroup group, EarthView.World.Graphic.QueuedRenderableCollection.ORGANISATIONMODE om)
				{
					base._renderQueueGroupObjects_NoVirtual(group,om);
				}
				public override void SetCameraRelativeRendering(bool rel)
				{
					base.SetCameraRelativeRendering_NoVirtual(rel);
				}
				public override bool GetCameraRelativeRendering()
				{
					return base.GetCameraRelativeRendering_NoVirtual();
				}
				public override double GetHeightAt(double latitude, double lontitude, float targetSamplesPerDegrees)
				{
					return base.GetHeightAt_NoVirtual(latitude,lontitude,targetSamplesPerDegrees);
				}
				public override double GetBestHeightAt(double latitude, double lontitude)
				{
					return base.GetBestHeightAt_NoVirtual(latitude,lontitude);
				}
				public override double GetHeightAtTile(double latitude, double lontitude)
				{
					return base.GetHeightAtTile_NoVirtual(latitude,lontitude);
				}
				public override bool GetTileEnvelope(int level, uint row, uint col, ref double minX, ref double maxX, ref double minY, ref double maxY)
				{
					return base.GetTileEnvelope_NoVirtual(level,row,col,ref minX,ref maxX,ref minY,ref maxY);
				}
				public override bool AddTempLayer(EarthView.World.Spatial.Atlas.Ilayer layer)
				{
					return base.AddTempLayer_NoVirtual(layer);
				}
				public override bool RemoveTempLayer(EarthView.World.Spatial.Atlas.Ilayer layer)
				{
					return base.RemoveTempLayer_NoVirtual(layer);
				}
				public override void UpdateQuadImage(bool updateImageGroup, bool updateFeatureGroup, bool updateKmlGroup)
				{
					base.UpdateQuadImage_NoVirtual(updateImageGroup,updateFeatureGroup,updateKmlGroup);
				}
				public override void UpdateQuadImage(bool updateImageGroup, bool updateFeatureGroup, bool updateKmlGroup, double minX, double maxX, double minY, double maxY)
				{
					base.UpdateQuadImage_NoVirtual(updateImageGroup,updateFeatureGroup,updateKmlGroup,minX,maxX,minY,maxY);
				}
				public override void UpdateOBQ(bool bUpdateVectorTexture, bool bUpdateKmlTexture, bool bUpdateTemporaryTexture, bool bUpdateTerrain)
				{
					base.UpdateOBQ_NoVirtual(bUpdateVectorTexture,bUpdateKmlTexture,bUpdateTemporaryTexture,bUpdateTerrain);
				}
				public override void SetCollisionDetectionEnable(bool enable)
				{
					base.SetCollisionDetectionEnable_NoVirtual(enable);
				}
				public static CommonSceneManager FromBaseObject(BaseObject baseObj)
				{
					if (baseObj == null || baseObj.NativeObject == IntPtr.Zero)
						return null;
					CommonSceneManager obj = baseObj as  CommonSceneManager;
					if (object.Equals(obj, null))
					{
						obj = new CommonSceneManager(CreatedWhenConstruct.CWC_NotToCreate);
						obj.BindNativeObject(baseObj.NativeObject, "CCommonSceneManager");
						obj.IncreaseCast();
					}

					return obj;
				}
			}

			public class CommonSceneManagerClassFactory : IClassFactory
			{
				public BaseObject Create()
				{
					CommonSceneManager emptyInstance = new CommonSceneManager(CreatedWhenConstruct.CWC_NotToCreate);
					return emptyInstance;
				}
			}

			/// <summary>
			/// 通用场景管理器工厂
			/// </summary>
			public class CommonSceneManagerFactory : EarthView.World.Graphic.SceneManagerFactory
			{
				/// <summary>
				/// 构造函数
				/// </summary>
				/// <returns></returns>	
				public CommonSceneManagerFactory() : base(CreatedWhenConstruct.CWC_NotToCreate)
				{
					Create("CCommonSceneManagerFactoryProxy", null);
					if (!"EarthView.World.Spatial3D.CommonSceneManagerFactory".Equals(((Object)this).GetType().ToString()))
					{
						this.SetCustomExtend(true);
					}
					RegisterCallBack();
					this.needDispose = true;
					GlobalTraceInfoMap.Put(this);
				}
				private static string FACTORY_TYPE_NAMEField;
				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr Get_EarthView_World_Spatial3D_CCommonSceneManagerFactory_FACTORY_TYPE_NAME( );

				public 				static string FACTORY_TYPE_NAME
				{
					get
					{
						IntPtr __ptr = Get_EarthView_World_Spatial3D_CCommonSceneManagerFactory_FACTORY_TYPE_NAME();
						
						string ret = Marshal.PtrToStringAnsi(__ptr);
						ClassFactory.FreeString(ref __ptr);
						return ret;
						
					}

				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString_NoVirtual(IntPtr pNativeObject, string instanceName);

				/// <summary>
				/// 创建一个场景管理器实例
				/// </summary>
				/// <returns></returns>	
				public new EarthView.World.Graphic.SceneManager CreateInstance_NoVirtual(string instanceName)
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString_NoVirtual(this.NativeObject, instanceName);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Graphic.SceneManager csObj = new EarthView.World.Graphic.SceneManager(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CSceneManager");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Graphic.SceneManager;
						csObj.BindNativeObject(__ptr, "CSceneManager");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern IntPtr EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString(IntPtr pNativeObject, string instanceName);

				/// <summary>
				/// 创建一个场景管理器实例
				/// </summary>
				/// <returns></returns>	
				public override EarthView.World.Graphic.SceneManager CreateInstance(string instanceName)
				{
					IntPtr __ptr = EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString(this.NativeObject, instanceName);
					
					if(__ptr==IntPtr.Zero)
					{
					return null;
					}
					EarthView.World.Graphic.SceneManager csObj = new EarthView.World.Graphic.SceneManager(CreatedWhenConstruct.CWC_NotToCreate);
					csObj.BindNativeObject(__ptr, "CSceneManager");
					csObj.Delegate = true;
					IClassFactory csObjClassFactory = GlobalClassFactoryMap.Get(csObj.GetCppInstanceTypeName());
					if (csObjClassFactory != null)
					{
						csObj.Delegate = true;
						csObj = csObjClassFactory.Create() as EarthView.World.Graphic.SceneManager;
						csObj.BindNativeObject(__ptr, "CSceneManager");
						csObj.Delegate = true;
					}
					return csObj;
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager_NoVirtual(IntPtr pNativeObject, IntPtr instance);

				/// <summary>
				/// 销毁一个场景管理器实例
				/// </summary>
				/// <param name="instance">场景管理器指针</param>
				/// <returns></returns>	
				public new void DestroyInstance_NoVirtual(EarthView.World.Graphic.SceneManager instance)
				{
					EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager_NoVirtual(this.NativeObject, object.Equals(instance, null) ? IntPtr.Zero : instance.NativeObject);
					
				}


				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				private static extern void EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager(IntPtr pNativeObject, IntPtr instance);

				/// <summary>
				/// 销毁一个场景管理器实例
				/// </summary>
				/// <param name="instance">场景管理器指针</param>
				/// <returns></returns>	
				public override void DestroyInstance(EarthView.World.Graphic.SceneManager instance)
				{
					EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager(this.NativeObject, object.Equals(instance, null) ? IntPtr.Zero : instance.NativeObject);
					
				}

				#if DEBUG 
					#if Windows 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#elif Linux 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_d.so");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.so");

					#else 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_d.dll");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp_d.dll");

					#endif 
				#else 
					#if Windows 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#elif Linux 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine.so");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp.so");

					#else 
						private static bool bLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine.dll");
						private static bool csbLoadCommonSceneManagerFactory = LoadDll.Load("EV_Spatial3DEngine_CSharp.dll");

					#endif 
				#endif 

				private static bool registerStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CCommonSceneManagerFactory", new CommonSceneManagerFactoryClassFactory());

				private static bool registerProxyStatus = GlobalClassFactoryMap.Put("EarthView::World::Spatial3D::CCommonSceneManagerFactoryProxy", new CommonSceneManagerFactoryClassFactory());

				public CommonSceneManagerFactory(CreatedWhenConstruct bAutoCreate) : base(bAutoCreate)
				{
				}

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_getMetaData_SceneManagerMetaData(IntPtr pObject, getMetaData_CallBack_SceneManagerMetaData pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString(IntPtr pObject, createInstance_CallBack_CSceneManager_EVString pCallback);

				#if DEBUG 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp_d.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#else 
					#if Windows 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#elif Linux 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Android 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.so", CallingConvention = CallingConvention.StdCall)]
					#elif Apple 
						[System.Runtime.InteropServices.DllImport("__Internal")]
					#else 
						[System.Runtime.InteropServices.DllImport("EV_Spatial3DEngine_CSharp.dll", CallingConvention = CallingConvention.StdCall)]
					#endif 
				#endif 
				protected static extern void EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager(IntPtr pObject, destroyInstance_CallBack_void_CSceneManager pCallback);

				public override void RegisterCallBack()
				{
					if (this.NativeObject != IntPtr.Zero)
					{
						m_getMetaData_CallBack_SceneManagerMetaData = EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Function;
						GC.KeepAlive(m_getMetaData_CallBack_SceneManagerMetaData);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_getMetaData_SceneManagerMetaData(this.NativeObject, m_getMetaData_CallBack_SceneManagerMetaData);
						m_createInstance_CallBack_CSceneManager_EVString = EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Function;
						GC.KeepAlive(m_createInstance_CallBack_CSceneManager_EVString);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_createInstance_CSceneManager_EVString(this.NativeObject, m_createInstance_CallBack_CSceneManager_EVString);
						m_destroyInstance_CallBack_void_CSceneManager = EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Function;
						GC.KeepAlive(m_destroyInstance_CallBack_void_CSceneManager);
						EV_RegisterCallback_EarthView_World_Spatial3D_CCommonSceneManagerFactory_destroyInstance_void_CSceneManager(this.NativeObject, m_destroyInstance_CallBack_void_CSceneManager);
					}
				}
				public override EarthView.World.Graphic.SceneManagerMetaData GetMetaData()
				{
					return base.GetMetaData_NoVirtual();
				}
				public static CommonSceneManagerFactory FromBaseObject(BaseObject baseObj)
				{
					if (baseObj == null || baseObj.NativeObject == IntPtr.Zero)
						return null;
					CommonSceneManagerFactory obj = baseObj as  CommonSceneManagerFactory;
					if (object.Equals(obj, null))
					{
						obj = new CommonSceneManagerFactory(CreatedWhenConstruct.CWC_NotToCreate);
						obj.BindNativeObject(baseObj.NativeObject, "CCommonSceneManagerFactory");
						obj.IncreaseCast();
					}

					return obj;
				}
			}

			public class CommonSceneManagerFactoryClassFactory : IClassFactory
			{
				public BaseObject Create()
				{
					CommonSceneManagerFactory emptyInstance = new CommonSceneManagerFactory(CreatedWhenConstruct.CWC_NotToCreate);
					return emptyInstance;
				}
			}

		}
	}
}
