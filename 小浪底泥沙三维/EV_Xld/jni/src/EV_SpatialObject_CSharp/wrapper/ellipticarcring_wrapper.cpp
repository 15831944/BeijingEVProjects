/* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc */
#include "spatialobject/geometry/ellipticarcring.h"
namespace EarthView
{
	namespace World
	{
		namespace Spatial
		{
			namespace Geometry
			{
				typedef EarthView::World::Spatial::Geometry::CPoint*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback)();
				typedef EarthView::World::Spatial::Geometry::CPoint*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback)();
				typedef EarthView::World::Spatial::Geometry::CPoint*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback)();
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback)(_in const void* centerPoint, _in const void* assistantPoint1, _in const void* assistantPoint2, _in ev_real64 fromAngle, _in ev_real64 sweepAngle);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback)(_in const void* centerPoint, _in ev_real64 semiMajorAxe, _in ev_real64 semiMinorAxe, _in ev_real64 angle, _in ev_real64 fromAngle, _in ev_real64 sweepAngle);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback)(_in const void* point);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback)(_in ev_real64 value);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback)(_in ev_real64 value);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback)(_in ev_real64 value);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback)(_in ev_real64 value);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback)(_in ev_real64 value);
				typedef const EarthView::World::Spatial::Geometry::CCoordinate*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback)();
				typedef const EarthView::World::Spatial::Geometry::CCoordinate*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback)();
				typedef const EarthView::World::Spatial::Geometry::CCoordinate*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback)();
				typedef ev_uint32  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback)();
				typedef EarthView::World::Spatial::Geometry::CCurve*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback)(_in ev_uint32 index);
				typedef const EarthView::World::Spatial::Geometry::CCurve*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback)(_in ev_uint32 index);
				typedef ev_int32  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback)(_in const void* curve, _in ev_int32 index);
				typedef ev_int32  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback)(_in ev_uint32 index, _in ev_int32 size);
				typedef ev_int32  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback)();
				typedef ev_int32  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback)(_in const void* curve, _in ev_uint32 index);
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback)(_in ev_uint32 smooth);
				typedef EarthView::World::Spatial::Geometry::CPoint*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback)();
				typedef EarthView::World::Spatial::Geometry::CPoint*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback)();
				typedef void*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback)();
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback)();
				typedef EarthView::World::Spatial::Geometry::CLineString*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback)(_in ev_uint32 smooth);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback)();
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback)(_in ev_bool dirty);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback)();
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback)(_in ev_real64 tolerance, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* line);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* pSplitGeom);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* clipRegion);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback)(_in ev_real64 tolerance, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* point, _in ev_real64 tolerance, _inout int& snap);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* point, _in ev_real64 tolerance);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* frmPoint, _in const EarthView::World::Spatial::Geometry::IGeometry* cpy_toPoint);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* cpy_point);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* point);
				typedef const EarthView::World::Spatial::Geometry::IEnvelope*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback)();
				typedef const EarthView::World::Spatial::Geometry::ISpatialReference*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback)();
				typedef int  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback)();
				typedef int  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback)();
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback)();
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback)();
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback)(_in ev_real64 z);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback)(_in ev_real64 m);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback)(_in const EarthView::World::Spatial::Geometry::ISpatialReference* ref_sr);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback)();
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in ev_real64 tolerance, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in char*& relateMatrix, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback)(_in ev_real64 tolerance, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback)(_in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef ev_real64  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef EarthView::World::Spatial::Geometry::IGeometry*  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback)(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in int dimension);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback)(_inout void* stream);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback)(_inout char*& wkt);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback)(_inout void* stream);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback)(_in ev_real64 x, _in ev_real64 y, _in ev_real64 z);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback)(_in ev_real64 xRef, _in ev_real64 yRef, _in ev_real64 zRef, _in ev_real64 xAngle, _in ev_real64 yAngle, _in ev_real64 zAngle);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback)(_in ev_real64 xRef, _in ev_real64 yRef, _in ev_real64 zRef, _in ev_real64 x, _in ev_real64 y, _in ev_real64 z);
				typedef void  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback)(_in const EarthView::World::Spatial::Geometry::ISpatialReference* sr, _in ev_real64* sevenParam, _in ev_uint32 count);
				typedef ev_bool  ( _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback)(_in EarthView::World::Spatial::Geometry::IGeometry* point);
				class CEllipticArcRingProxy : public EarthView::World::Spatial::Geometry::CEllipticArcRing
				{
				private:
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback;
					EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback* m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback;
				public:
					CEllipticArcRingProxy(EarthView::World::Core::CNameValuePairList *pList) : CEllipticArcRing(pList)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback = NULL;
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback = NULL;
					}
				public:
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32(EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32(EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32(EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint(EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void(EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType(EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope(EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference(EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType(EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType(EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool(EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void(EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference(EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType(EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream(EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString(EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream(EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32(EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback = pCallback;
					}
					ev_void registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry(EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback* pCallback)
					{
						m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback = pCallback;
					}
					virtual ev_bool isValid() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isValid();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint* getCenterPoint() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCenterPoint();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint getCenterPoint2() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint returnValue = *(EarthView::World::Spatial::Geometry::CPoint*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCenterPoint2();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint* getArcFromPoint() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcFromPoint();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint getArcFromPoint2() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint returnValue = *(EarthView::World::Spatial::Geometry::CPoint*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcFromPoint2();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint* getArcToPoint() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcToPoint();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint getArcToPoint2() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint returnValue = *(EarthView::World::Spatial::Geometry::CPoint*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcToPoint2();
					}
					virtual ev_real64 getSemiMajorAxe() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getSemiMajorAxe();
					}
					virtual ev_real64 getSemiMinorAxe() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getSemiMinorAxe();
					}
					virtual ev_real64 getRotation() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getRotation();
					}
					virtual ev_real64 getFromAngle() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getFromAngle();
					}
					virtual ev_real64 getToAngle() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getToAngle();
					}
					virtual ev_real64 getArcLength() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcLength();
					}
					virtual void setEllipticArcRingByThreePoint(_in const EarthView::World::Spatial::Geometry::CPoint& centerPoint, _in const EarthView::World::Spatial::Geometry::CPoint& assistantPoint1, _in const EarthView::World::Spatial::Geometry::CPoint& assistantPoint2, _in ev_real64 fromAngle, _in ev_real64 sweepAngle)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback(&centerPoint, &assistantPoint1, &assistantPoint2, fromAngle, sweepAngle);
						}
						else
							return this->CEllipticArcRing::setEllipticArcRingByThreePoint(centerPoint, assistantPoint1, assistantPoint2, fromAngle, sweepAngle);
					}
					virtual void setEllipticArcRingByRadius(_in const EarthView::World::Spatial::Geometry::CPoint& centerPoint, _in ev_real64 semiMajorAxe, _in ev_real64 semiMinorAxe, _in ev_real64 angle, _in ev_real64 fromAngle, _in ev_real64 sweepAngle)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback(&centerPoint, semiMajorAxe, semiMinorAxe, angle, fromAngle, sweepAngle);
						}
						else
							return this->CEllipticArcRing::setEllipticArcRingByRadius(centerPoint, semiMajorAxe, semiMinorAxe, angle, fromAngle, sweepAngle);
					}
					virtual void setCenterPoint(_in const EarthView::World::Spatial::Geometry::CPoint& point)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback(&point);
						}
						else
							return this->CEllipticArcRing::setCenterPoint(point);
					}
					virtual void setSemiMajorAxe(_in ev_real64 value)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback(value);
						}
						else
							return this->CEllipticArcRing::setSemiMajorAxe(value);
					}
					virtual void setSemiMinorAxe(_in ev_real64 value)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback(value);
						}
						else
							return this->CEllipticArcRing::setSemiMinorAxe(value);
					}
					virtual void setRotation(_in ev_real64 value)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback(value);
						}
						else
							return this->CEllipticArcRing::setRotation(value);
					}
					virtual void setFromAngle(_in ev_real64 value)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback(value);
						}
						else
							return this->CEllipticArcRing::setFromAngle(value);
					}
					virtual void setSweepAngle(_in ev_real64 value)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback(value);
						}
						else
							return this->CEllipticArcRing::setSweepAngle(value);
					}
					virtual ev_real64 getArea() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArea();
					}
					virtual EarthView::World::Spatial::Geometry::CLineString toLineString2(_in ev_uint32 smooth) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CLineString returnValue = *(EarthView::World::Spatial::Geometry::CLineString*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback(smooth);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::toLineString2(smooth);
					}
					virtual const EarthView::World::Spatial::Geometry::CCoordinate* getArcFromCoordinateRef() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::CCoordinate* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcFromCoordinateRef();
					}
					virtual EarthView::World::Spatial::Geometry::CCoordinate getArcFromCoordinate() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CCoordinate returnValue = *(EarthView::World::Spatial::Geometry::CCoordinate*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcFromCoordinate();
					}
					virtual const EarthView::World::Spatial::Geometry::CCoordinate* getArcToCoordinateRef() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::CCoordinate* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcToCoordinateRef();
					}
					virtual EarthView::World::Spatial::Geometry::CCoordinate getArcToCoordinate() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CCoordinate returnValue = *(EarthView::World::Spatial::Geometry::CCoordinate*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getArcToCoordinate();
					}
					virtual const EarthView::World::Spatial::Geometry::CCoordinate* getCenterCoordinateRef() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::CCoordinate* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCenterCoordinateRef();
					}
					virtual EarthView::World::Spatial::Geometry::CCoordinate getCenterCoordinate() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CCoordinate returnValue = *(EarthView::World::Spatial::Geometry::CCoordinate*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCenterCoordinate();
					}
					virtual ev_int32 add(_in const EarthView::World::Spatial::Geometry::CCurve& curve, _in ev_int32 index)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback != NULL && this->isCustomExtend())
						{
							ev_int32 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback(&curve, index);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::add(curve, index);
					}
					virtual ev_int32 remove(_in ev_uint32 index, _in ev_int32 size)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback != NULL && this->isCustomExtend())
						{
							ev_int32 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback(index, size);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::remove(index, size);
					}
					virtual ev_int32 clear()
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback != NULL && this->isCustomExtend())
						{
							ev_int32 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::clear();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint* getEndPoint() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getEndPoint();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint getEndPoint2() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint returnValue = *(EarthView::World::Spatial::Geometry::CPoint*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getEndPoint2();
					}
					virtual ev_real64 getLength() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getLength();
					}
					virtual ev_bool isClosed() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isClosed();
					}
					virtual ev_bool isRing() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isRing();
					}
					virtual ev_bool isEmpty() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isEmpty();
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* getBoundary() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getBoundary();
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* clone() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::clone();
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* split(_in const EarthView::World::Spatial::Geometry::IGeometry* pSplitGeom) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback(pSplitGeom);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::split(pSplitGeom);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* clip(_in const EarthView::World::Spatial::Geometry::IGeometry* pClipLine) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback(pClipLine);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::clip(pClipLine);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* smooth(_in ev_real64 tolerance, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback(tolerance, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::smooth(tolerance, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* snapToPoint(_in const EarthView::World::Spatial::Geometry::IGeometry* point, _in ev_real64 tolerance, _inout EarthView::World::Spatial::Geometry::EVGeometrySnapType& snap) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback(point, tolerance, (int&)snap);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::snapToPoint(point, tolerance, snap);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* snapToSegment(_in const EarthView::World::Spatial::Geometry::IGeometry* point, _in ev_real64 tolerance) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback(point, tolerance);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::snapToSegment(point, tolerance);
					}
					virtual ev_bool addPointTo(_in const EarthView::World::Spatial::Geometry::IGeometry* cpy_point)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback(cpy_point);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::addPointTo(cpy_point);
					}
					virtual ev_uint32 getCurveCount() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							ev_uint32 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCurveCount();
					}
					virtual EarthView::World::Spatial::Geometry::CCurve* getCurve(_in ev_uint32 index) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CCurve* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback(index);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCurve(index);
					}
					virtual const EarthView::World::Spatial::Geometry::CCurve* getCurveRef(_in ev_uint32 index) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::CCurve* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback(index);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getCurveRef(index);
					}
					virtual ev_int32 replace(_in const EarthView::World::Spatial::Geometry::CCurve& curve, _in ev_uint32 index)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							ev_int32 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback(&curve, index);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::replace(curve, index);
					}
					virtual EarthView::World::Spatial::Geometry::CPoint* getStartPoint() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback();
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getStartPoint();
					}
					virtual EarthView::World::Spatial::Geometry::CPoint getStartPoint2() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CPoint returnValue = *(EarthView::World::Spatial::Geometry::CPoint*)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getStartPoint2();
					}
					virtual ev_bool reverse()
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::reverse();
					}
					virtual EarthView::World::Spatial::Geometry::CLineString* toLineString(_in ev_uint32 smooth) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::CLineString* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback(smooth);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::toLineString(smooth);
					}
					virtual void makeZ(_in ev_real64 z)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback(z);
						}
						else
							return this->CEllipticArcRing::makeZ(z);
					}
					virtual void makeM(_in ev_real64 m)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback(m);
						}
						else
							return this->CEllipticArcRing::makeM(m);
					}
					virtual ev_bool isEquals(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in ev_real64 tolerance, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback(geom, tolerance, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isEquals(geom, tolerance, dimension);
					}
					virtual void translate(_in ev_real64 x, _in ev_real64 y, _in ev_real64 z)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback(x, y, z);
						}
						else
							return this->CEllipticArcRing::translate(x, y, z);
					}
					virtual void rotate(_in ev_real64 xRef, _in ev_real64 yRef, _in ev_real64 zRef, _in ev_real64 xAngle, _in ev_real64 yAngle, _in ev_real64 zAngle)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback(xRef, yRef, zRef, xAngle, yAngle, zAngle);
						}
						else
							return this->CEllipticArcRing::rotate(xRef, yRef, zRef, xAngle, yAngle, zAngle);
					}
					virtual void scale(_in ev_real64 xRef, _in ev_real64 yRef, _in ev_real64 zRef, _in ev_real64 x, _in ev_real64 y, _in ev_real64 z)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback(xRef, yRef, zRef, x, y, z);
						}
						else
							return this->CEllipticArcRing::scale(xRef, yRef, zRef, x, y, z);
					}
					virtual void projects(_in const EarthView::World::Spatial::Geometry::ISpatialReference* ref_sr, _in ev_real64* sevenParam, _in ev_uint32 count)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback(ref_sr, sevenParam, count);
						}
						else
							return this->CEllipticArcRing::projects(ref_sr, sevenParam, count);
					}
					virtual void setSpatialReferenceRef(_in const EarthView::World::Spatial::Geometry::ISpatialReference* ref_sr)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback(ref_sr);
						}
						else
							return this->CEllipticArcRing::setSpatialReferenceRef(ref_sr);
					}
					virtual void update()
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback();
						}
						else
							return this->CEllipticArcRing::update();
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* mirror(_in const EarthView::World::Spatial::Geometry::IGeometry* line) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback(line);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::mirror(line);
					}
					virtual ev_bool movePointTo(_in const EarthView::World::Spatial::Geometry::IGeometry* frmPoint, _in const EarthView::World::Spatial::Geometry::IGeometry* cpy_toPoint)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback(frmPoint, cpy_toPoint);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::movePointTo(frmPoint, cpy_toPoint);
					}
					virtual ev_bool deletePoint(_in const EarthView::World::Spatial::Geometry::IGeometry* point)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback(point);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::deletePoint(point);
					}
					virtual const EarthView::World::Spatial::Geometry::IEnvelope* getEnvelopeRef() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::IEnvelope* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getEnvelopeRef();
					}
					virtual const EarthView::World::Spatial::Geometry::ISpatialReference* getSpatialReferenceRef() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback != NULL && this->isCustomExtend())
						{
							const EarthView::World::Spatial::Geometry::ISpatialReference* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getSpatialReferenceRef();
					}
					virtual EarthView::World::Spatial::Geometry::EVGeometryType getGeometryType() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::EVGeometryType returnValue = (EarthView::World::Spatial::Geometry::EVGeometryType)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getGeometryType();
					}
					virtual EarthView::World::Spatial::Geometry::EVWKBGeometryType getWKBGeometryType() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::EVWKBGeometryType returnValue = (EarthView::World::Spatial::Geometry::EVWKBGeometryType)m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getWKBGeometryType();
					}
					virtual ev_bool isSimple() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isSimple();
					}
					virtual void simplify()
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback();
						}
						else
							return this->CEllipticArcRing::simplify();
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* buffer(_in ev_real64 tolerance, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback(tolerance, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::buffer(tolerance, dimension);
					}
					virtual ev_bool isContains(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isContains(geom, dimension);
					}
					virtual ev_bool isDisjoin(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isDisjoin(geom, dimension);
					}
					virtual ev_bool isIntersects(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isIntersects(geom, dimension);
					}
					virtual ev_bool isWithin(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isWithin(geom, dimension);
					}
					virtual ev_bool isTouches(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isTouches(geom, dimension);
					}
					virtual ev_bool isCrosses(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isCrosses(geom, dimension);
					}
					virtual ev_bool isRelates(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EVString relateMatrix, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							char* relateMatrix_Char = relateMatrix.makeBuffer();
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback(geom, relateMatrix_Char, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isRelates(geom, relateMatrix, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* convexHull(_in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback((int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::convexHull(dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* difference(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::difference(geom, dimension);
					}
					virtual ev_real64 distance(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							ev_real64 returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::distance(geom, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* intersects(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::intersects(geom, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* overlaps(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::overlaps(geom, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* symDifference(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::symDifference(geom, dimension);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* unions(_in const EarthView::World::Spatial::Geometry::IGeometry* geom, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback(geom, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::unions(geom, dimension);
					}
					virtual void toWKB(_inout EarthView::World::Core::CDataStream& stream) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback(&stream);
						}
						else
							return this->CEllipticArcRing::toWKB(stream);
					}
					virtual void toWKT(_inout EVString& wkt) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback != NULL && this->isCustomExtend())
						{
							char* wkt_Char = wkt.makeBuffer();
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback(wkt_Char);
							wkt = wkt_Char;
							if(wkt_Char != NULL){ delete[] wkt_Char;wkt_Char = NULL;}
						}
						else
							return this->CEllipticArcRing::toWKT(wkt);
					}
					virtual void toStream(_inout EarthView::World::Core::CDataStream& stream) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback(&stream);
						}
						else
							return this->CEllipticArcRing::toStream(stream);
					}
					virtual ev_bool isDirty() const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback();
							return returnValue;
						}
						else
							return this->CEllipticArcRing::isDirty();
					}
					virtual void setDirty(_in ev_bool dirty)
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback != NULL && this->isCustomExtend())
						{
							m_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback(dirty);
						}
						else
							return this->CEllipticArcRing::setDirty(dirty);
					}
					virtual EarthView::World::Spatial::Geometry::IGeometry* resample(_in ev_real64 tolerance, _in EarthView::World::Spatial::Geometry::EVDimensionType dimension) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback != NULL && this->isCustomExtend())
						{
							EarthView::World::Spatial::Geometry::IGeometry* returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback(tolerance, (int)dimension);
							if(returnValue != NULL) {
								((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
							}
							return returnValue;
						}
						else
							return this->CEllipticArcRing::resample(tolerance, dimension);
					}
					virtual ev_bool getInteriorPoint(_in EarthView::World::Spatial::Geometry::IGeometry* point) const
					{
						if(m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback != NULL && this->isCustomExtend())
						{
							ev_bool returnValue = m_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback(point);
							return returnValue;
						}
						else
							return this->CEllipticArcRing::getInteriorPoint(point);
					}
				};
				REGISTER_FACTORY_CLASS(CEllipticArcRingProxy);
				extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_bool objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::isValid();
						return objXXXX;
					}
					else
					{
						ev_bool objXXXX = ptrNativeObject->isValid();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_isValid_ev_bool_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::isValid();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->getCenterPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterPoint();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->getCenterPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterPoint2_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterPoint2();
					EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->getArcFromPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromPoint();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->getArcFromPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromPoint2_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromPoint2();
					EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->getArcToPoint();
						if(objXXXX != NULL) {
							((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
						}
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::Geometry::CPoint*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToPoint();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->getArcToPoint2();
						EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToPoint2_CPoint_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CPoint objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToPoint2();
					EarthView::World::Spatial::Geometry::CPoint *pXXXX = new EarthView::World::Spatial::Geometry::CPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getSemiMajorAxe();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getSemiMajorAxe();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMajorAxe_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getSemiMajorAxe();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getSemiMinorAxe();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getSemiMinorAxe();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getSemiMinorAxe_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getSemiMinorAxe();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getRotation();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getRotation();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getRotation_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getRotation();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getFromAngle();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getFromAngle();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getFromAngle_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getFromAngle();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getToAngle();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getToAngle();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getToAngle_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getToAngle();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcLength();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getArcLength();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcLength_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcLength();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64(void *pObjectXXXX, _in const void* centerPoint, _in const void* assistantPoint1, _in const void* assistantPoint2, _in ev_real64 fromAngle, _in ev_real64 sweepAngle )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setEllipticArcRingByThreePoint(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint1, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint2, fromAngle, sweepAngle);
					else
						ptrNativeObject->setEllipticArcRingByThreePoint(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint1, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint2, fromAngle, sweepAngle);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByThreePoint_void_CPoint_CPoint_CPoint_ev_real64_ev_real64_NoVirtual(void *pObjectXXXX, _in const void* centerPoint, _in const void* assistantPoint1, _in const void* assistantPoint2, _in ev_real64 fromAngle, _in ev_real64 sweepAngle )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setEllipticArcRingByThreePoint(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint1, *(EarthView::World::Spatial::Geometry::CPoint*)assistantPoint2, fromAngle, sweepAngle);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(void *pObjectXXXX, _in const void* centerPoint, _in ev_real64 semiMajorAxe, _in ev_real64 semiMinorAxe, _in ev_real64 angle, _in ev_real64 fromAngle, _in ev_real64 sweepAngle )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setEllipticArcRingByRadius(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, semiMajorAxe, semiMinorAxe, angle, fromAngle, sweepAngle);
					else
						ptrNativeObject->setEllipticArcRingByRadius(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, semiMajorAxe, semiMinorAxe, angle, fromAngle, sweepAngle);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setEllipticArcRingByRadius_void_CPoint_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_NoVirtual(void *pObjectXXXX, _in const void* centerPoint, _in ev_real64 semiMajorAxe, _in ev_real64 semiMinorAxe, _in ev_real64 angle, _in ev_real64 fromAngle, _in ev_real64 sweepAngle )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setEllipticArcRingByRadius(*(EarthView::World::Spatial::Geometry::CPoint*)centerPoint, semiMajorAxe, semiMinorAxe, angle, fromAngle, sweepAngle);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint(void *pObjectXXXX, _in const void* point )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setCenterPoint(*(EarthView::World::Spatial::Geometry::CPoint*)point);
					else
						ptrNativeObject->setCenterPoint(*(EarthView::World::Spatial::Geometry::CPoint*)point);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setCenterPoint_void_CPoint_NoVirtual(void *pObjectXXXX, _in const void* point )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setCenterPoint(*(EarthView::World::Spatial::Geometry::CPoint*)point);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSemiMajorAxe(value);
					else
						ptrNativeObject->setSemiMajorAxe(value);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMajorAxe_void_ev_real64_NoVirtual(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSemiMajorAxe(value);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSemiMinorAxe(value);
					else
						ptrNativeObject->setSemiMinorAxe(value);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSemiMinorAxe_void_ev_real64_NoVirtual(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSemiMinorAxe(value);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setRotation(value);
					else
						ptrNativeObject->setRotation(value);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setRotation_void_ev_real64_NoVirtual(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setRotation(value);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setFromAngle(value);
					else
						ptrNativeObject->setFromAngle(value);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setFromAngle_void_ev_real64_NoVirtual(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setFromAngle(value);
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
						ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSweepAngle(value);
					else
						ptrNativeObject->setSweepAngle(value);
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_setSweepAngle_void_ev_real64_NoVirtual(void *pObjectXXXX, _in ev_real64 value )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::setSweepAngle(value);
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArea();
						return objXXXX;
					}
					else
					{
						ev_real64 objXXXX = ptrNativeObject->getArea();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_real64  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArea_ev_real64_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_real64 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArea();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32(void *pObjectXXXX, _in ev_uint32 smooth )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CLineString objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::toLineString2(smooth);
						EarthView::World::Spatial::Geometry::CLineString *pXXXX = new EarthView::World::Spatial::Geometry::CLineString(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CLineString objXXXX = ptrNativeObject->toLineString2(smooth);
						EarthView::World::Spatial::Geometry::CLineString *pXXXX = new EarthView::World::Spatial::Geometry::CLineString(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString2_CLineString_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 smooth )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CLineString objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::toLineString2(smooth);
					EarthView::World::Spatial::Geometry::CLineString *pXXXX = new EarthView::World::Spatial::Geometry::CLineString(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromCoordinateRef();
						return objXXXX;
					}
					else
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->getArcFromCoordinateRef();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinateRef_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromCoordinateRef();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->getArcFromCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcFromCoordinate_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcFromCoordinate();
					EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToCoordinateRef();
						return objXXXX;
					}
					else
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->getArcToCoordinateRef();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinateRef_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToCoordinateRef();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->getArcToCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getArcToCoordinate_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getArcToCoordinate();
					EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterCoordinateRef();
						return objXXXX;
					}
					else
					{
						const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->getCenterCoordinateRef();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  const EarthView::World::Spatial::Geometry::CCoordinate*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinateRef_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					const EarthView::World::Spatial::Geometry::CCoordinate* objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterCoordinateRef();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
					else
					{
						EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->getCenterCoordinate();
						EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
						((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
						return (void*)pXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_getCenterCoordinate_CCoordinate_NoVirtual(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CCoordinate objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::getCenterCoordinate();
					EarthView::World::Spatial::Geometry::CCoordinate *pXXXX = new EarthView::World::Spatial::Geometry::CCoordinate(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32(void *pObjectXXXX, _in const void* curve, _in ev_int32 index )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::add(*(EarthView::World::Spatial::Geometry::CCurve*)curve, index);
						return objXXXX;
					}
					else
					{
						ev_int32 objXXXX = ptrNativeObject->add(*(EarthView::World::Spatial::Geometry::CCurve*)curve, index);
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_add_ev_int32_CCurve_ev_int32_NoVirtual(void *pObjectXXXX, _in const void* curve, _in ev_int32 index )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::add(*(EarthView::World::Spatial::Geometry::CCurve*)curve, index);
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32(void *pObjectXXXX, _in ev_uint32 index, _in ev_int32 size )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::remove(index, size);
						return objXXXX;
					}
					else
					{
						ev_int32 objXXXX = ptrNativeObject->remove(index, size);
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_remove_ev_int32_ev_uint32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_uint32 index, _in ev_int32 size )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::remove(index, size);
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32(void *pObjectXXXX )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					if (dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*)ptrNativeObject) != NULL)
					{
						ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::clear();
						return objXXXX;
					}
					else
					{
						ev_int32 objXXXX = ptrNativeObject->clear();
						return objXXXX;
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_int32  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clear_ev_int32_NoVirtual(void *pObjectXXXX )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					ev_int32 objXXXX = ptrNativeObject->EarthView::World::Spatial::Geometry::CEllipticArcRing::clear();
					return objXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_clone2_CEllipticArcRing(void *pObjectXXXX )
				{
					const EarthView::World::Spatial::Geometry::CEllipticArcRing* ptrNativeObject = (EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX;
					EarthView::World::Spatial::Geometry::CEllipticArcRing objXXXX = ptrNativeObject->clone2();
					EarthView::World::Spatial::Geometry::CEllipticArcRing *pXXXX = new EarthView::World::Spatial::Geometry::CEllipticArcRing(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Spatial_Geometry_CEllipticArcRing_OperatorAssign_CEllipticArcRing_CEllipticArcRing(void *pObjXXXX, _in const void* obj )
				{
					EarthView::World::Spatial::Geometry::CEllipticArcRing& objXXXX = *((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjXXXX);
					objXXXX = *(EarthView::World::Spatial::Geometry::CEllipticArcRing*)obj;
					EarthView::World::Spatial::Geometry::CEllipticArcRing *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveCount_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurve_CCurve_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getCurveRef_CCurve_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_replace_ev_int32_CCurve_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getStartPoint2_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEndPoint2_CPoint(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getLength_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isClosed_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRing_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_reverse_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toLineString_CLineString_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDirty_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setDirty_void_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_update_void(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_resample_IGeometry_ev_real64_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_mirror_IGeometry_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_split_IGeometry_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clip_IGeometry_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_smooth_IGeometry_ev_real64_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToPoint_IGeometry_IGeometry_ev_real64_EVGeometrySnapType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_snapToSegment_IGeometry_IGeometry_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_movePointTo_ev_bool_IGeometry_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_addPointTo_ev_bool_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_deletePoint_ev_bool_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getEnvelopeRef_IEnvelope(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getSpatialReferenceRef_ISpatialReference(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getGeometryType_EVGeometryType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getWKBGeometryType_EVWKBGeometryType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEmpty_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isSimple_ev_bool(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_simplify_void(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getBoundary_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeZ_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_makeM_void_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_setSpatialReferenceRef_void_ISpatialReference(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_clone_IGeometry(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isContains_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isEquals_ev_bool_IGeometry_ev_real64_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isDisjoin_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isIntersects_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isWithin_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isTouches_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isCrosses_ev_bool_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_isRelates_ev_bool_IGeometry_EVString_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_buffer_IGeometry_ev_real64_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_convexHull_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_difference_IGeometry_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_distance_ev_real64_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_intersects_IGeometry_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_overlaps_IGeometry_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_symDifference_IGeometry_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_unions_IGeometry_IGeometry_EVDimensionType(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKB_void_CDataStream(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toWKT_void_EVString(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_toStream_void_CDataStream(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_translate_void_ev_real64_ev_real64_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_rotate_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_scale_void_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64_ev_real64(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_projects_void_ISpatialReference_ev_real64_ev_uint32(pCallback);
					}
				}
				extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry( void *pObjectXXXX, EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry_Callback* pCallback )
				{
					CEllipticArcRingProxy* ptr = dynamic_cast<CEllipticArcRingProxy*>((EarthView::World::Spatial::Geometry::CEllipticArcRing*) pObjectXXXX);
					if(ptr != NULL)
					{
						ptr->registerCallback_EarthView_World_Spatial_Geometry_CEllipticArcRing_getInteriorPoint_ev_bool_IGeometry(pCallback);
					}
				}
			}
		}
	}
}
