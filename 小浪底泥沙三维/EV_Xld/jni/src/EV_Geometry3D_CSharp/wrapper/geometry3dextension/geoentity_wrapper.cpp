/* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc */
#include "geometry3d/geometry3dextension/geoentity.h"
namespace EarthView
{
	namespace World
	{
		namespace Graphic
		{
		}
		namespace Spatial
		{
		}
	}
}
namespace EarthView
{
	namespace World
	{
		namespace Geometry3D
		{
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback)(_in const void* objIndics, _in const void* color, _in ev_uint32 hightLight_ms, _in ev_uint32 normally_ms, _in ev_uint32 flashCount);
			typedef const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback)();
			typedef ev_uint8  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback)(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact);
			typedef EarthView::World::Graphic::CMovableObjectFactory*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback)(_in EarthView::World::Graphic::CSceneManager* ref_mgr);
			typedef EarthView::World::Graphic::CSceneManager*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback)();
			typedef char*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback)();
			typedef char*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback)();
			typedef EarthView::World::Graphic::CNode*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback)(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback)(_in EarthView::World::Graphic::CNode* ref_parent);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback)(_in const EarthView::World::Graphic::LightList* lightList);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener);
			typedef EarthView::World::Graphic::CMovableObject::CLightQueriedListener*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback)(_in ev_uint32 frame);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* ref_cam);
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback)();
			typedef Real  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback)(_in EarthView::World::Graphic::CRenderQueue* queue);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback)(_in ev_bool visible);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback)(_in Real pixelSize);
			typedef Real  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback)(_in const void* colour);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback)(_in const void* objIndics);
			typedef void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback)(_in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback)(_in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback)(_in ev_uint32 objectIndex);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback)();
			typedef EarthView::World::Graphic::CEditBoundingBox*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _inout void* matrix);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _in const void* matrix);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback)(_in ev_uint8 queueID);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback)(_in ev_uint8 queueID, _in ev_uint16 priority);
			typedef ev_uint8  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback)();
			typedef EarthView::World::Graphic::CMovableObject::CMovableObjectListener*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback)(_in ev_uint32 index);
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback)(_in ev_uint32 lightMask);
			typedef EarthView::World::Graphic::LightList*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CEdgeData*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback)();
			typedef void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback)(_in const void* light, _in Real dirLightExtrusionDist);
			typedef void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance, _in ev_uint32 flags);
			typedef void*  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance);
			typedef Real  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback)(_in const EarthView::World::Graphic::CLight* l);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* lightPos);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout void* shadowRenderables, _in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback)(_inout void* box, _in const void* lightPos, _in Real extrudeDist);
			class CGeoEntityProxy : public EarthView::World::Geometry3D::CGeoEntity
			{
			private:
				EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback;
				EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback* m_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback;
				EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback* m_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback;
				EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback;
				EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback* m_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback;
				EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback* m_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback;
				EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback* m_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback;
				EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback;
				EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback;
				EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback;
				EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* m_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback;
				EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback* m_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback;
				EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback* m_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback;
				EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback* m_EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback;
				EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback* m_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback* m_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback;
				EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback* m_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback;
				EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback* m_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback* m_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback* m_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback* m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback;
				EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback;
				EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback;
				EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback* m_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback;
				EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* m_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback;
				EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* m_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback;
				EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* m_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback;
			public:
				CGeoEntityProxy(EarthView::World::Core::CNameValuePairList *pList) : CGeoEntity(pList)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8(EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory(EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory(EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager(EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager(EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getName_EVString(EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString(EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode(EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode(EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool(EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool(EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode(EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool(EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void(EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool(EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void(EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList(EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener(EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener(EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera(EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox(EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real(EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere(EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue(EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool(EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool(EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real(EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real(EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real(EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real(EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real(EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real(EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue(EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector(EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector(EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector(EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void(EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void(EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_endEditing_void(EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox(EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8(EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8(EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4(EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener(EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener(EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener(EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList(EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList(EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool(EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool(EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor(EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool(EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool(EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData(EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool(EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool(EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox(EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox(EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real(EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight(EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4(EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = pCallback;
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getBoundingBox() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getBoundingBox();
				}
				virtual Real getBoundingRadius() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getBoundingRadius();
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getWorldBoundingBox() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getWorldBoundingBox();
				}
				virtual const EarthView::World::Spatial::Math::CSphere& getWorldBoundingSphere() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CSphere& returnValue = *(EarthView::World::Spatial::Math::CSphere*)m_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getWorldBoundingSphere();
				}
				virtual void _updateRenderQueue(_in EarthView::World::Graphic::CRenderQueue* queue)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback(queue);
					}
					else
						return this->CGeoEntity::_updateRenderQueue(queue);
				}
				virtual ev_bool getCastsShadows() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getCastsShadows();
				}
				virtual void _notifyCurrentCamera(_in EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback(cam);
					}
					else
						return this->CGeoEntity::_notifyCurrentCamera(cam);
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback(visitor, debugRenderables);
					}
					else
						return this->CGeoEntity::visitRenderables(visitor, debugRenderables);
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback(visitor);
					}
					else
						return this->CGeoEntity::visitRenderables(visitor);
				}
				virtual void setVisible(_in ev_bool visible)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback(visible);
					}
					else
						return this->CGeoEntity::setVisible(visible);
				}
				virtual void setRenderingMaxDistance(_in Real dist)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback(dist);
					}
					else
						return this->CGeoEntity::setRenderingMaxDistance(dist);
				}
				virtual void setRenderingMinDistance(_in Real dist)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback(dist);
					}
					else
						return this->CGeoEntity::setRenderingMinDistance(dist);
				}
				virtual void setRenderQueueGroup(_in ev_uint8 queueID)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback(queueID);
					}
					else
						return this->CGeoEntity::setRenderQueueGroup(queueID);
				}
				virtual void setRenderQueueGroupAndPriority(_in ev_uint8 queueID, _in ev_uint16 priority)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback(queueID, priority);
					}
					else
						return this->CGeoEntity::setRenderQueueGroupAndPriority(queueID, priority);
				}
				virtual EVString getMovableType() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getMovableType();
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, &point);
						return returnValue;
					}
					else
						return this->CGeoEntity::selectBy(ray, viewport, prepareToRenderSelection, objIndex, point);
				}
				virtual void renderSelection()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback();
					}
					else
						return this->CGeoEntity::renderSelection();
				}
				virtual void clearSelection()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback();
					}
					else
						return this->CGeoEntity::clearSelection();
				}
				virtual ev_bool setSelected(_in const EarthView::World::Core::IntVector& objIndics)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback(&objIndics);
						return returnValue;
					}
					else
						return this->CGeoEntity::setSelected(objIndics);
				}
				virtual EarthView::World::Core::IntVector getSelected() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Core::IntVector returnValue = *(EarthView::World::Core::IntVector*)m_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getSelected();
				}
				virtual void setSelectionColour(_in const EarthView::World::Graphic::CColourValue& colour)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback(&colour);
					}
					else
						return this->CGeoEntity::setSelectionColour(colour);
				}
				virtual void flash(_in const EarthView::World::Core::IntVector& objIndics, _in const EarthView::World::Graphic::CColourValue& color, _in ev_uint32 hightLight_ms, _in ev_uint32 normally_ms, _in ev_uint32 flashCount)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback(&objIndics, &color, hightLight_ms, normally_ms, flashCount);
					}
					else
						return this->CGeoEntity::flash(objIndics, color, hightLight_ms, normally_ms, flashCount);
				}
				virtual const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* getAnimableObjectPtr()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getAnimableObjectPtr();
				}
				virtual ev_uint8 getRenderQueueId() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getRenderQueueId();
				}
				virtual void _notifyCreator(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback(ref_fact);
					}
					else
						return this->CGeoEntity::_notifyCreator(ref_fact);
				}
				virtual EarthView::World::Graphic::CMovableObjectFactory* _getCreator() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObjectFactory* returnValue = m_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::_getCreator();
				}
				virtual void _notifyManager(_in EarthView::World::Graphic::CSceneManager* ref_mgr)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback(ref_mgr);
					}
					else
						return this->CGeoEntity::_notifyManager(ref_mgr);
				}
				virtual EarthView::World::Graphic::CSceneManager* _getManager() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneManager* returnValue = m_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::_getManager();
				}
				virtual EVString getName() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getName();
				}
				virtual EarthView::World::Graphic::CNode* getParentNode() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CNode* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getParentNode();
				}
				virtual EarthView::World::Graphic::CSceneNode* getParentSceneNode() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getParentSceneNode();
				}
				virtual ev_bool isParentTagPoint() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::isParentTagPoint();
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback(ref_parent, isTagPoint);
					}
					else
						return this->CGeoEntity::_notifyAttached(ref_parent, isTagPoint);
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback(ref_parent);
					}
					else
						return this->CGeoEntity::_notifyAttached(ref_parent);
				}
				virtual ev_bool isAttached() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::isAttached();
				}
				virtual void detachFromParent()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback();
					}
					else
						return this->CGeoEntity::detachFromParent();
				}
				virtual ev_bool isInScene() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::isInScene();
				}
				virtual void _notifyMoved()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback();
					}
					else
						return this->CGeoEntity::_notifyMoved();
				}
				virtual void _notifyLightsQueried(_in const EarthView::World::Graphic::LightList* lightList)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback(lightList);
					}
					else
						return this->CGeoEntity::_notifyLightsQueried(lightList);
				}
				virtual void setLightQueriedListener(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback(listener);
					}
					else
						return this->CGeoEntity::setLightQueriedListener(listener);
				}
				virtual EarthView::World::Graphic::CMovableObject::CLightQueriedListener* getLightQueriedListener()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CLightQueriedListener* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getLightQueriedListener();
				}
				virtual ev_uint32 getLightListUpdated() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getLightListUpdated();
				}
				virtual void setLightListUpdated(_in ev_uint32 frame)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback(frame);
					}
					else
						return this->CGeoEntity::setLightListUpdated(frame);
				}
				virtual ev_bool getVisible() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getVisible();
				}
				virtual ev_bool isVisible() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::isVisible();
				}
				virtual Real getRenderingMaxDistance() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getRenderingMaxDistance();
				}
				virtual Real getRenderingMinDistance() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getRenderingMinDistance();
				}
				virtual void setRenderingMinPixelSize(_in Real pixelSize)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback(pixelSize);
					}
					else
						return this->CGeoEntity::setRenderingMinPixelSize(pixelSize);
				}
				virtual Real getRenderingMinPixelSize() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getRenderingMinPixelSize();
				}
				virtual ev_bool selectComponentBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, &point);
						return returnValue;
					}
					else
						return this->CGeoEntity::selectComponentBy(ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, point);
				}
				virtual ev_bool startEditing(_in ev_uint32 objectIndex)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback(objectIndex);
						return returnValue;
					}
					else
						return this->CGeoEntity::startEditing(objectIndex);
				}
				virtual void endEditing()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback();
					}
					else
						return this->CGeoEntity::endEditing();
				}
				virtual EarthView::World::Graphic::CEditBoundingBox* getEditBoundingBox()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEditBoundingBox* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getEditBoundingBox();
				}
				virtual ev_bool getSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _inout EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CGeoEntity::getSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual ev_bool setSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _in const EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CGeoEntity::setSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual ev_uint8 getRenderQueueGroup() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getRenderQueueGroup();
				}
				virtual const EarthView::World::Spatial::Math::CMatrix4& _getParentNodeFullTransform() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CMatrix4& returnValue = *(EarthView::World::Spatial::Math::CMatrix4*)m_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::_getParentNodeFullTransform();
				}
				virtual void setQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::setQueryFlags(flags);
				}
				virtual void addQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::addQueryFlags(flags);
				}
				virtual void removeQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::removeQueryFlags(flags);
				}
				virtual ev_uint32 getQueryFlags() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getQueryFlags();
				}
				virtual void setVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::setVisibilityFlags(flags);
				}
				virtual void addVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::addVisibilityFlags(flags);
				}
				virtual void removeVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CGeoEntity::removeVisibilityFlags(flags);
				}
				virtual ev_uint32 getVisibilityFlags() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getVisibilityFlags();
				}
				virtual void addListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback(ref_listener);
					}
					else
						return this->CGeoEntity::addListener(ref_listener);
				}
				virtual void removeListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback(listener);
					}
					else
						return this->CGeoEntity::removeListener(listener);
				}
				virtual ev_bool existListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener) const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback(listener);
						return returnValue;
					}
					else
						return this->CGeoEntity::existListener(listener);
				}
				virtual ev_uint32 getListenerCount() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getListenerCount();
				}
				virtual EarthView::World::Graphic::CMovableObject::CMovableObjectListener* getListener(_in ev_uint32 index) const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CMovableObjectListener* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback(index);
						return returnValue;
					}
					else
						return this->CGeoEntity::getListener(index);
				}
				virtual const EarthView::World::Graphic::LightList& queryLights() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::LightList& returnValue = *(EarthView::World::Graphic::LightList*)m_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::queryLights();
				}
				virtual ev_uint32 getLightMask() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getLightMask();
				}
				virtual void setLightMask(_in ev_uint32 lightMask)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback(lightMask);
					}
					else
						return this->CGeoEntity::setLightMask(lightMask);
				}
				virtual EarthView::World::Graphic::LightList* _getLightList()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::LightList* returnValue = m_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::_getLightList();
				}
				virtual EarthView::World::Graphic::CEdgeData* getEdgeList()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEdgeData* returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getEdgeList();
				}
				virtual ev_bool hasEdgeList()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::hasEdgeList();
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
						return returnValue;
					}
					else
						return this->CGeoEntity::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
						return returnValue;
					}
					else
						return this->CGeoEntity::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getLightCapBounds() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getLightCapBounds();
				}
				virtual EarthView::World::Spatial::Math::CAxisAlignedBox getDarkCapBounds(_in const EarthView::World::Graphic::CLight& light, _in Real dirLightExtrusionDist) const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CAxisAlignedBox returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback(&light, dirLightExtrusionDist);
						return returnValue;
					}
					else
						return this->CGeoEntity::getDarkCapBounds(light, dirLightExtrusionDist);
				}
				virtual void setCastShadows(_in ev_bool enabled)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback(enabled);
					}
					else
						return this->CGeoEntity::setCastShadows(enabled);
				}
				virtual ev_bool getCastShadows() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getCastShadows();
				}
				virtual ev_bool getReceivesShadows()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getReceivesShadows();
				}
				virtual Real getPointExtrusionDistance(_in const EarthView::World::Graphic::CLight* l) const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback(l);
						return returnValue;
					}
					else
						return this->CGeoEntity::getPointExtrusionDistance(l);
				}
				virtual ev_uint32 getTypeFlags() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::getTypeFlags();
				}
				virtual void setDebugDisplayEnabled(_in ev_bool enabled)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback(enabled);
					}
					else
						return this->CGeoEntity::setDebugDisplayEnabled(enabled);
				}
				virtual ev_bool isDebugDisplayEnabled() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntity::isDebugDisplayEnabled();
				}
				virtual void updateEdgeListLightFacing(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Spatial::Math::CVector4& lightPos)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback(edgeData, &lightPos);
					}
					else
						return this->CGeoEntity::updateEdgeListLightFacing(edgeData, lightPos);
				}
				virtual void generateShadowVolume(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Graphic::CHardwareIndexBufferSharedPtr& indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout EarthView::World::Graphic::CShadowCaster::ShadowRenderableList& shadowRenderables, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback(edgeData, &indexBuffer, light, &shadowRenderables, flags);
					}
					else
						return this->CGeoEntity::generateShadowVolume(edgeData, indexBuffer, light, shadowRenderables, flags);
				}
				virtual void extrudeBounds(_inout EarthView::World::Spatial::Math::CAxisAlignedBox& box, _in const EarthView::World::Spatial::Math::CVector4& lightPos, _in Real extrudeDist) const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback(&box, &lightPos, extrudeDist);
					}
					else
						return this->CGeoEntity::extrudeBounds(box, lightPos, extrudeDist);
				}
			};
			REGISTER_FACTORY_CLASS(CGeoEntityProxy);
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingBox_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getBoundingBox();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getBoundingRadius();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getBoundingRadius();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Geometry3D_CGeoEntity_getBoundingRadius_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getBoundingRadius();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getWorldBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getWorldBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getWorldBoundingBox();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getWorldBoundingSphere();
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->getWorldBoundingSphere();
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getWorldBoundingSphere();
				const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::_updateRenderQueue(queue);
				else
					ptrNativeObject->_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity__updateRenderQueue_void_CRenderQueue_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getCastsShadows();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getCastsShadows();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_getCastsShadows_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getCastsShadows();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::_notifyCurrentCamera(cam);
				else
					ptrNativeObject->_notifyCurrentCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity__notifyCurrentCamera_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::_notifyCurrentCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::visitRenderables(visitor, debugRenderables);
				else
					ptrNativeObject->visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::visitRenderables(visitor);
				else
					ptrNativeObject->visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_visitRenderables_void_CVisitor_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setVisible(visible);
				else
					ptrNativeObject->setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setVisible_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderingMaxDistance(dist);
				else
					ptrNativeObject->setRenderingMaxDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMaxDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderingMaxDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderingMinDistance(dist);
				else
					ptrNativeObject->setRenderingMinDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderingMinDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderingMinDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderQueueGroup(queueID);
				else
					ptrNativeObject->setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroup_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(void *pObjectXXXX, _in ev_uint8 queueID, _in ev_uint16 priority )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderQueueGroupAndPriority(queueID, priority);
				else
					ptrNativeObject->setRenderQueueGroupAndPriority(queueID, priority);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint8 queueID, _in ev_uint16 priority )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setRenderQueueGroupAndPriority(queueID, priority);
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getMovableType();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getMovableType();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getMovableType_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getMovableType();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_NoVirtual(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_renderSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::renderSelection();
				else
					ptrNativeObject->renderSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_renderSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_renderSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::renderSelection();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_clearSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::clearSelection();
				else
					ptrNativeObject->clearSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_clearSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_clearSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::clearSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelected_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getSelected_IntVector_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::getSelected();
				EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
				else
					ptrNativeObject->setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setSelectionColour_void_CColourValue_NoVirtual(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_addGeoObject_ev_bool_CGeoObject(void *pObjectXXXX, _in EarthView::World::Spatial::CGeoObject* ref_geo )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->addGeoObject(ref_geo);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_removeGeoObject_ev_bool_ev_uint32(void *pObjectXXXX, _in ev_uint32 pos )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->removeGeoObject(pos);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_removeGeoObject_ev_bool_CGeoObject(void *pObjectXXXX, _in EarthView::World::Spatial::CGeoObject* geo )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->removeGeoObject(geo);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Geometry3D_CGeoEntity_getGeoObjectCount_ev_uint32(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->getGeoObjectCount();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_existGeoObject_ev_bool_CGeoObject(void *pObjectXXXX, _in EarthView::World::Spatial::CGeoObject* geo )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->existGeoObject(geo);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Spatial::CGeoObject*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getGeoObject_CGeoObject_ev_uint32(void *pObjectXXXX, _in ev_uint32 pos )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				EarthView::World::Spatial::CGeoObject* objXXXX = ptrNativeObject->getGeoObject(pos);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_insertGeoObject_ev_bool_CGeoObject_ev_uint32(void *pObjectXXXX, _in EarthView::World::Spatial::CGeoObject* ref_geo, _in ev_uint32 pos )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->insertGeoObject(ref_geo, pos);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_setGeoObject_ev_bool_CGeoObject_ev_uint32(void *pObjectXXXX, _in EarthView::World::Spatial::CGeoObject* ref_geo, _in ev_uint32 pos )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->setGeoObject(ref_geo, pos);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_clearGeoObjects_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->clearGeoObjects();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Geometry3D_CGeoEntity_getMovableObjectsCount_ev_uint32(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->getMovableObjectsCount();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Geometry3D_CGeoEntity_existMovableObject_ev_bool_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* mo )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->existMovableObject(mo);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Geometry3D_CGeoEntity_getMovableObject_CMovableObject_ev_uint32(void *pObjectXXXX, _in ev_uint32 pos )
			{
				const EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->getMovableObject(pos);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_setRenderableListener_void_CRenderableGeometryExtensionListener(void *pObjectXXXX, _in EarthView::World::Geometry3D::CRenderableGeometryExtensionListener* listener )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->setRenderableListener(listener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32(void *pObjectXXXX, _in const void* objIndics, _in const void* color, _in ev_uint32 hightLight_ms, _in ev_uint32 normally_ms, _in ev_uint32 flashCount )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::flash(*(EarthView::World::Core::IntVector*)objIndics, *(EarthView::World::Graphic::CColourValue*)color, hightLight_ms, normally_ms, flashCount);
				else
					ptrNativeObject->flash(*(EarthView::World::Core::IntVector*)objIndics, *(EarthView::World::Graphic::CColourValue*)color, hightLight_ms, normally_ms, flashCount);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_flash_void_IntVector_CColourValue_ev_uint32_ev_uint32_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* objIndics, _in const void* color, _in ev_uint32 hightLight_ms, _in ev_uint32 normally_ms, _in ev_uint32 flashCount )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntity::flash(*(EarthView::World::Core::IntVector*)objIndics, *(EarthView::World::Graphic::CColourValue*)color, hightLight_ms, normally_ms, flashCount);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntity_endFlash_void(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntity* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX;
				ptrNativeObject->endFlash();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueId_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyCreator_void_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__getCreator_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyManager_void_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__getManager_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getName_EVString( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getName_EVString_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getParentNode_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getParentSceneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_isParentTagPoint_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyAttached_void_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_isAttached_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_detachFromParent_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_isInScene_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyMoved_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__notifyLightsQueried_void_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightQueriedListener_void_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightQueriedListener_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightListUpdated_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightListUpdated_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingSphere_CSphere_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_isVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMaxDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setRenderingMinPixelSize_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderingMinPixelSize_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectBy_ev_bool_CSphere_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_startEditing_ev_bool_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_endEditing_void( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_endEditing_void_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_endEditing_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getEditBoundingBox_CEditBoundingBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getRenderQueueGroup_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__getParentNodeFullTransform_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_addQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getQueryFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_addVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getVisibilityFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_addListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_removeListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_existListener_ev_bool_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getListenerCount_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getListener_CMovableObjectListener_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_queryLights_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightMask_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setLightMask_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity__getLightList_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setCastShadows_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getReceivesShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getTypeFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_setDebugDisplayEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_isDebugDisplayEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getCastShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getEdgeList_CEdgeData(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_hasEdgeList_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getWorldBoundingBox_CAxisAlignedBox_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getLightCapBounds_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getDarkCapBounds_CAxisAlignedBox_CLight_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_getPointExtrusionDistance_Real_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_updateEdgeListLightFacing_void_CEdgeData_CVector4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback )
			{
				CGeoEntityProxy* ptr = dynamic_cast<CGeoEntityProxy*>((EarthView::World::Geometry3D::CGeoEntity*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntity_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(pCallback);
				}
			}
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback)();
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback)(_in char*& name, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback)(_in char*& name);
			typedef char*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback)();
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback)(_in char*& name, _in EarthView::World::Graphic::CSceneManager* ref_manager, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback)(_in char*& name, _in EarthView::World::Graphic::CSceneManager* ref_manager);
			typedef void  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* obj);
			typedef ev_bool  ( _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback)();
			class CGeoEntityFactoryProxy : public EarthView::World::Geometry3D::CGeoEntityFactory
			{
			private:
				EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback;
				EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback* m_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback;
			public:
				CGeoEntityFactoryProxy(EarthView::World::Core::CNameValuePairList *pList) : CGeoEntityFactory(pList)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject(EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList(EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString(EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString(EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList(EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager(EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject(EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool(EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback = pCallback;
				}
				virtual EVString getType() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntityFactory::getType();
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstance()
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntityFactory::createInstance();
				}
				virtual void destroyInstance(_in EarthView::World::Graphic::CMovableObject* obj)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback(obj);
					}
					else
						return this->CGeoEntityFactory::destroyInstance(obj);
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstanceImpl(_in const EVString& name, _in const EarthView::World::Core::CommonStringPairList* params)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback(name_Char, params);
						return returnValue;
					}
					else
						return this->CGeoEntityFactory::createInstanceImpl(name, params);
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstanceImpl(_in const EVString& name)
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CGeoEntityFactory::createInstanceImpl(name);
				}
				virtual ev_bool requestTypeFlags() const
				{
					if(m_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CGeoEntityFactory::requestTypeFlags();
				}
			};
			REGISTER_FACTORY_CLASS(CGeoEntityFactoryProxy);
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Geometry3D_CGeoEntityFactory_FACTORY_TYPE_NAME()
			{
				EVString objXXXX = EarthView::World::Geometry3D::CGeoEntityFactory::FACTORY_TYPE_NAME;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Geometry3D_CGeoEntityFactory_FACTORY_TYPE_NAME( char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				EarthView::World::Geometry3D::CGeoEntityFactory::FACTORY_TYPE_NAME = value1;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::getType();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getType();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_getType_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::getType();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::createInstance();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createInstance();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::createInstance();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* obj )
			{
				EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				if (dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::destroyInstance(obj);
				else
					ptrNativeObject->destroyInstance(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Geometry3D_CGeoEntityFactory_destroyInstance_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* obj )
			{
				EarthView::World::Geometry3D::CGeoEntityFactory* ptrNativeObject = (EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Geometry3D::CGeoEntityFactory::destroyInstance(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstanceImpl_CMovableObject_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_createInstance_CMovableObject_EVString_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool( void *pObjectXXXX, EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool_Callback* pCallback )
			{
				CGeoEntityFactoryProxy* ptr = dynamic_cast<CGeoEntityFactoryProxy*>((EarthView::World::Geometry3D::CGeoEntityFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Geometry3D_CGeoEntityFactory_requestTypeFlags_ev_bool(pCallback);
				}
			}
		}
	}
}
