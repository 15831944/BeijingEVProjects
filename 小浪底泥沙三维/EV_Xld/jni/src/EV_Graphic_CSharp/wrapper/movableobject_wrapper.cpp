/* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc */
#include "stableheaders.h"
#include "graphic/movableobject.h"
namespace EarthView
{
	namespace World
	{
		namespace Spatial
		{
			namespace Math
			{
			}
		}
	}
}
namespace EarthView
{
	namespace World
	{
		namespace Graphic
		{
			typedef const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*  ( _stdcall EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback)();
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback)(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact);
			typedef EarthView::World::Graphic::CMovableObjectFactory*  ( _stdcall EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback)(_in EarthView::World::Graphic::CSceneManager* ref_mgr);
			typedef EarthView::World::Graphic::CSceneManager*  ( _stdcall EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback)();
			typedef char*  ( _stdcall EarthView_World_Graphic_CMovableObject_getName_EVString_Callback)();
			typedef char*  ( _stdcall EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback)();
			typedef EarthView::World::Graphic::CNode*  ( _stdcall EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback)(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback)(_in EarthView::World::Graphic::CNode* ref_parent);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback)(_in const EarthView::World::Graphic::LightList* lightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener);
			typedef EarthView::World::Graphic::CMovableObject::CLightQueriedListener*  ( _stdcall EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback)(_in ev_uint32 frame);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* ref_cam);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback)(_in EarthView::World::Graphic::CRenderQueue* queue);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback)(_in ev_bool visible);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback)(_in Real pixelSize);
			typedef Real  ( _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback)(_in const void* colour);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback)(_in const void* objIndics);
			typedef void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback)(_in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback)(_in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback)(_in ev_uint32 objectIndex);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_endEditing_void_Callback)();
			typedef EarthView::World::Graphic::CEditBoundingBox*  ( _stdcall EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _inout void* matrix);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _in const void* matrix);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback)(_in ev_uint8 queueID);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback)(_in ev_uint8 queueID, _in ev_uint16 priority);
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback)();
			typedef EarthView::World::Graphic::CMovableObject::CMovableObjectListener*  ( _stdcall EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback)(_in ev_uint32 index);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback)(_in ev_uint32 lightMask);
			typedef EarthView::World::Graphic::LightList*  ( _stdcall EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CEdgeData*  ( _stdcall EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback)();
			typedef void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback)(_in const void* light, _in Real dirLightExtrusionDist);
			typedef void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance, _in ev_uint32 flags);
			typedef void*  ( _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance);
			typedef Real  ( _stdcall EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback)(_in const EarthView::World::Graphic::CLight* l);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* lightPos);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout void* shadowRenderables, _in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback)(_inout void* box, _in const void* lightPos, _in Real extrudeDist);
			class CMovableObjectProxy : public EarthView::World::Graphic::CMovableObject
			{
			private:
				EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* m_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback;
				EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback* m_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback;
				EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback* m_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback;
				EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback* m_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback;
				EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback* m_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback;
				EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback* m_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback;
				EarthView_World_Graphic_CMovableObject_getName_EVString_Callback* m_EarthView_World_Graphic_CMovableObject_getName_EVString_Callback;
				EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback* m_EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback;
				EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback* m_EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback;
				EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback* m_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback;
				EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback* m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback;
				EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback* m_EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback;
				EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback* m_EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback;
				EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback* m_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback;
				EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback* m_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback;
				EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback* m_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback;
				EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback* m_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback;
				EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback* m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback;
				EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback* m_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback;
				EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback* m_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback;
				EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback* m_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback;
				EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback* m_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback;
				EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback* m_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback;
				EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback* m_EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback;
				EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback;
				EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* m_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback;
				EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback* m_EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback;
				EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback* m_EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback;
				EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_endEditing_void_Callback* m_EarthView_World_Graphic_CMovableObject_endEditing_void_Callback;
				EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback* m_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback;
				EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback* m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback;
				EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback;
				EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback* m_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback;
				EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback* m_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback;
				EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback* m_EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback;
				EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback* m_EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback;
				EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback* m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback;
				EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback* m_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback;
				EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback;
				EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback;
				EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback* m_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback;
				EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* m_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback;
				EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* m_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback;
				EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* m_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback;
			public:
				CMovableObjectProxy(EarthView::World::Core::CNameValuePairList *pList) : CMovableObject(pList)
				{
					m_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_endEditing_void_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8(EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory(EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory(EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager(EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager(EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getName_EVString(EarthView_World_Graphic_CMovableObject_getName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getMovableType_EVString(EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getParentNode_CNode(EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode(EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool(EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool(EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode(EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool(EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_detachFromParent_void(EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool(EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyMoved_void(EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList(EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener(EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener(EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32(EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32(EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera(EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox(EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real(EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool(EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere(EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue(EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool(EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool(EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool(EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real(EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real(EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real(EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real(EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real(EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real(EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue(EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector(EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getSelected_IntVector(EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector(EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_renderSelection_void(EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_clearSelection_void(EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32(EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_endEditing_void(EarthView_World_Graphic_CMovableObject_endEditing_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_endEditing_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox(EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8(EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8(EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4(EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32(EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32(EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener(EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener(EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener(EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32(EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32(EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_queryLights_LightList(EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32(EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32(EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject__getLightList_LightList(EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool(EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool(EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32(EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool(EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor(EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool(EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool(EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool(EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData(EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool(EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool(EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox(EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox(EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real(EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight(EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4(EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = pCallback;
				}
				virtual const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* getAnimableObjectPtr()
				{
					if(m_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* returnValue = m_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getAnimableObjectPtr();
				}
				virtual ev_uint8 getRenderQueueId() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getRenderQueueId();
				}
				virtual void _notifyCreator(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback(ref_fact);
					}
					else
						return this->CMovableObject::_notifyCreator(ref_fact);
				}
				virtual EarthView::World::Graphic::CMovableObjectFactory* _getCreator() const
				{
					if(m_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObjectFactory* returnValue = m_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::_getCreator();
				}
				virtual void _notifyManager(_in EarthView::World::Graphic::CSceneManager* ref_mgr)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback(ref_mgr);
					}
					else
						return this->CMovableObject::_notifyManager(ref_mgr);
				}
				virtual EarthView::World::Graphic::CSceneManager* _getManager() const
				{
					if(m_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneManager* returnValue = m_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::_getManager();
				}
				virtual EVString getName() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CMovableObject_getName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getName();
				}
				virtual EVString getMovableType() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getMovableType();
				}
				virtual EarthView::World::Graphic::CNode* getParentNode() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CNode* returnValue = m_EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getParentNode();
				}
				virtual EarthView::World::Graphic::CSceneNode* getParentSceneNode() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getParentSceneNode();
				}
				virtual ev_bool isParentTagPoint() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::isParentTagPoint();
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback(ref_parent, isTagPoint);
					}
					else
						return this->CMovableObject::_notifyAttached(ref_parent, isTagPoint);
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback(ref_parent);
					}
					else
						return this->CMovableObject::_notifyAttached(ref_parent);
				}
				virtual ev_bool isAttached() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::isAttached();
				}
				virtual void detachFromParent()
				{
					if(m_EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback();
					}
					else
						return this->CMovableObject::detachFromParent();
				}
				virtual ev_bool isInScene() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::isInScene();
				}
				virtual void _notifyMoved()
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback();
					}
					else
						return this->CMovableObject::_notifyMoved();
				}
				virtual void _notifyLightsQueried(_in const EarthView::World::Graphic::LightList* lightList)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback(lightList);
					}
					else
						return this->CMovableObject::_notifyLightsQueried(lightList);
				}
				virtual void setLightQueriedListener(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback(listener);
					}
					else
						return this->CMovableObject::setLightQueriedListener(listener);
				}
				virtual EarthView::World::Graphic::CMovableObject::CLightQueriedListener* getLightQueriedListener()
				{
					if(m_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CLightQueriedListener* returnValue = m_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getLightQueriedListener();
				}
				virtual ev_uint32 getLightListUpdated() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getLightListUpdated();
				}
				virtual void setLightListUpdated(_in ev_uint32 frame)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback(frame);
					}
					else
						return this->CMovableObject::setLightListUpdated(frame);
				}
				virtual void _notifyCurrentCamera(_in EarthView::World::Graphic::CCamera* ref_cam)
				{
					if(m_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback(ref_cam);
					}
					else
						return this->CMovableObject::_notifyCurrentCamera(ref_cam);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getBoundingBox() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getBoundingBox();
				}
				virtual Real getBoundingRadius() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getBoundingRadius();
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getWorldBoundingBox(_in ev_bool derive) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback(derive);
						return returnValue;
					}
					else
						return this->CMovableObject::getWorldBoundingBox(derive);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getWorldBoundingBox() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getWorldBoundingBox();
				}
				virtual const EarthView::World::Spatial::Math::CSphere& getWorldBoundingSphere(_in ev_bool derive) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CSphere& returnValue = *(EarthView::World::Spatial::Math::CSphere*)m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback(derive);
						return returnValue;
					}
					else
						return this->CMovableObject::getWorldBoundingSphere(derive);
				}
				virtual const EarthView::World::Spatial::Math::CSphere& getWorldBoundingSphere() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CSphere& returnValue = *(EarthView::World::Spatial::Math::CSphere*)m_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getWorldBoundingSphere();
				}
				virtual void _updateRenderQueue(_in EarthView::World::Graphic::CRenderQueue* queue)
				{
					if(m_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback(queue);
					}
					else
						return this->CMovableObject::_updateRenderQueue(queue);
				}
				virtual void setVisible(_in ev_bool visible)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback(visible);
					}
					else
						return this->CMovableObject::setVisible(visible);
				}
				virtual ev_bool getVisible() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getVisible();
				}
				virtual ev_bool isVisible() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::isVisible();
				}
				virtual void setRenderingMaxDistance(_in Real dist)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback(dist);
					}
					else
						return this->CMovableObject::setRenderingMaxDistance(dist);
				}
				virtual Real getRenderingMaxDistance() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getRenderingMaxDistance();
				}
				virtual void setRenderingMinDistance(_in Real dist)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback(dist);
					}
					else
						return this->CMovableObject::setRenderingMinDistance(dist);
				}
				virtual Real getRenderingMinDistance() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getRenderingMinDistance();
				}
				virtual void setRenderingMinPixelSize(_in Real pixelSize)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback(pixelSize);
					}
					else
						return this->CMovableObject::setRenderingMinPixelSize(pixelSize);
				}
				virtual Real getRenderingMinPixelSize() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getRenderingMinPixelSize();
				}
				virtual void setSelectionColour(_in const EarthView::World::Graphic::CColourValue& colour)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback(&colour);
					}
					else
						return this->CMovableObject::setSelectionColour(colour);
				}
				virtual ev_bool setSelected(_in const EarthView::World::Core::IntVector& objIndics)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback(&objIndics);
						return returnValue;
					}
					else
						return this->CMovableObject::setSelected(objIndics);
				}
				virtual EarthView::World::Core::IntVector getSelected() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Core::IntVector returnValue = *(EarthView::World::Core::IntVector*)m_EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getSelected();
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, &point);
						return returnValue;
					}
					else
						return this->CMovableObject::selectBy(ray, viewport, prepareToRenderSelection, objIndex, point);
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CAxisAlignedBox& aabb, _in ev_bool prepareToRenderSelection, _out EarthView::World::Core::IntVector& indexVec)
				{
					if(m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback(&aabb, prepareToRenderSelection, &indexVec);
						return returnValue;
					}
					else
						return this->CMovableObject::selectBy(aabb, prepareToRenderSelection, indexVec);
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CSphere& sphere, _in ev_bool prepareToRenderSelection, _out EarthView::World::Core::IntVector& indexVec)
				{
					if(m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback(&sphere, prepareToRenderSelection, &indexVec);
						return returnValue;
					}
					else
						return this->CMovableObject::selectBy(sphere, prepareToRenderSelection, indexVec);
				}
				virtual ev_bool selectComponentBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, &point);
						return returnValue;
					}
					else
						return this->CMovableObject::selectComponentBy(ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, point);
				}
				virtual void renderSelection()
				{
					if(m_EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback();
					}
					else
						return this->CMovableObject::renderSelection();
				}
				virtual void clearSelection()
				{
					if(m_EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback();
					}
					else
						return this->CMovableObject::clearSelection();
				}
				virtual ev_bool startEditing(_in ev_uint32 objectIndex)
				{
					if(m_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback(objectIndex);
						return returnValue;
					}
					else
						return this->CMovableObject::startEditing(objectIndex);
				}
				virtual void endEditing()
				{
					if(m_EarthView_World_Graphic_CMovableObject_endEditing_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_endEditing_void_Callback();
					}
					else
						return this->CMovableObject::endEditing();
				}
				virtual EarthView::World::Graphic::CEditBoundingBox* getEditBoundingBox()
				{
					if(m_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEditBoundingBox* returnValue = m_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getEditBoundingBox();
				}
				virtual ev_bool getSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _inout EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CMovableObject::getSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual ev_bool setSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _in const EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CMovableObject::setSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual void setRenderQueueGroup(_in ev_uint8 queueID)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback(queueID);
					}
					else
						return this->CMovableObject::setRenderQueueGroup(queueID);
				}
				virtual void setRenderQueueGroupAndPriority(_in ev_uint8 queueID, _in ev_uint16 priority)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback(queueID, priority);
					}
					else
						return this->CMovableObject::setRenderQueueGroupAndPriority(queueID, priority);
				}
				virtual ev_uint8 getRenderQueueGroup() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getRenderQueueGroup();
				}
				virtual const EarthView::World::Spatial::Math::CMatrix4& _getParentNodeFullTransform() const
				{
					if(m_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CMatrix4& returnValue = *(EarthView::World::Spatial::Math::CMatrix4*)m_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::_getParentNodeFullTransform();
				}
				virtual void setQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::setQueryFlags(flags);
				}
				virtual void addQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::addQueryFlags(flags);
				}
				virtual void removeQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::removeQueryFlags(flags);
				}
				virtual ev_uint32 getQueryFlags() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getQueryFlags();
				}
				virtual void setVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::setVisibilityFlags(flags);
				}
				virtual void addVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::addVisibilityFlags(flags);
				}
				virtual void removeVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CMovableObject::removeVisibilityFlags(flags);
				}
				virtual ev_uint32 getVisibilityFlags() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getVisibilityFlags();
				}
				virtual void addListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener)
				{
					if(m_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback(ref_listener);
					}
					else
						return this->CMovableObject::addListener(ref_listener);
				}
				virtual void removeListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener)
				{
					if(m_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback(listener);
					}
					else
						return this->CMovableObject::removeListener(listener);
				}
				virtual ev_bool existListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback(listener);
						return returnValue;
					}
					else
						return this->CMovableObject::existListener(listener);
				}
				virtual ev_uint32 getListenerCount() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getListenerCount();
				}
				virtual EarthView::World::Graphic::CMovableObject::CMovableObjectListener* getListener(_in ev_uint32 index) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CMovableObjectListener* returnValue = m_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback(index);
						return returnValue;
					}
					else
						return this->CMovableObject::getListener(index);
				}
				virtual const EarthView::World::Graphic::LightList& queryLights() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::LightList& returnValue = *(EarthView::World::Graphic::LightList*)m_EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::queryLights();
				}
				virtual ev_uint32 getLightMask() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getLightMask();
				}
				virtual void setLightMask(_in ev_uint32 lightMask)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback(lightMask);
					}
					else
						return this->CMovableObject::setLightMask(lightMask);
				}
				virtual EarthView::World::Graphic::LightList* _getLightList()
				{
					if(m_EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::LightList* returnValue = m_EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::_getLightList();
				}
				virtual EarthView::World::Graphic::CEdgeData* getEdgeList()
				{
					if(m_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEdgeData* returnValue = m_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getEdgeList();
				}
				virtual ev_bool hasEdgeList()
				{
					if(m_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::hasEdgeList();
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
						return returnValue;
					}
					else
						return this->CMovableObject::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist)
				{
					if(m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
						return returnValue;
					}
					else
						return this->CMovableObject::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getLightCapBounds() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getLightCapBounds();
				}
				virtual EarthView::World::Spatial::Math::CAxisAlignedBox getDarkCapBounds(_in const EarthView::World::Graphic::CLight& light, _in Real dirLightExtrusionDist) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CAxisAlignedBox returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback(&light, dirLightExtrusionDist);
						return returnValue;
					}
					else
						return this->CMovableObject::getDarkCapBounds(light, dirLightExtrusionDist);
				}
				virtual void setCastShadows(_in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback(enabled);
					}
					else
						return this->CMovableObject::setCastShadows(enabled);
				}
				virtual ev_bool getCastShadows() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getCastShadows();
				}
				virtual ev_bool getReceivesShadows()
				{
					if(m_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getReceivesShadows();
				}
				virtual Real getPointExtrusionDistance(_in const EarthView::World::Graphic::CLight* l) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback(l);
						return returnValue;
					}
					else
						return this->CMovableObject::getPointExtrusionDistance(l);
				}
				virtual ev_uint32 getTypeFlags() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::getTypeFlags();
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables)
				{
					if(m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback(visitor, debugRenderables);
					}
					else
						return this->CMovableObject::visitRenderables(visitor, debugRenderables);
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor)
				{
					if(m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback(visitor);
					}
					else
						return this->CMovableObject::visitRenderables(visitor);
				}
				virtual void setDebugDisplayEnabled(_in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback(enabled);
					}
					else
						return this->CMovableObject::setDebugDisplayEnabled(enabled);
				}
				virtual ev_bool isDebugDisplayEnabled() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObject::isDebugDisplayEnabled();
				}
				virtual void updateEdgeListLightFacing(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Spatial::Math::CVector4& lightPos)
				{
					if(m_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback(edgeData, &lightPos);
					}
					else
						return this->CMovableObject::updateEdgeListLightFacing(edgeData, lightPos);
				}
				virtual void generateShadowVolume(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Graphic::CHardwareIndexBufferSharedPtr& indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout EarthView::World::Graphic::CShadowCaster::ShadowRenderableList& shadowRenderables, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback(edgeData, &indexBuffer, light, &shadowRenderables, flags);
					}
					else
						return this->CMovableObject::generateShadowVolume(edgeData, indexBuffer, light, shadowRenderables, flags);
				}
				virtual void extrudeBounds(_inout EarthView::World::Spatial::Math::CAxisAlignedBox& box, _in const EarthView::World::Spatial::Math::CVector4& lightPos, _in Real extrudeDist) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback(&box, &lightPos, extrudeDist);
					}
					else
						return this->CMovableObject::extrudeBounds(box, lightPos, extrudeDist);
				}
			};
			REGISTER_FACTORY_CLASS(CMovableObjectProxy);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback)(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CCamera* pCamera);
			typedef const EarthView::World::Graphic::LightList*  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback)(_in const EarthView::World::Graphic::CMovableObject* pMovableObject);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objectIndex);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _inout void* objectIndex);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objIndex, _in ev_int32 submeshIndex, _in ev_int32 instanceIndex, _in ev_int32 segmentIndex);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* pMovableObject);
			class CMovableObjectListenerProxy : public EarthView::World::Graphic::CMovableObject::CMovableObjectListener
			{
			private:
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback;
			public:
				CMovableObjectListenerProxy(EarthView::World::Core::CNameValuePairList *pList) : CMovableObjectListener(pList)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject(EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback = pCallback;
				}
				virtual void objectDestroyed(_in EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback(pMovableObject);
					}
					else
						return this->CMovableObjectListener::objectDestroyed(pMovableObject);
				}
				virtual void objectAttached(_in EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback(pMovableObject);
					}
					else
						return this->CMovableObjectListener::objectAttached(pMovableObject);
				}
				virtual void objectDetached(_in EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback(pMovableObject);
					}
					else
						return this->CMovableObjectListener::objectDetached(pMovableObject);
				}
				virtual void objectMoved(_in EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback(pMovableObject);
					}
					else
						return this->CMovableObjectListener::objectMoved(pMovableObject);
				}
				virtual ev_bool objectRendering(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CCamera* pCamera)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback(pMovableObject, pCamera);
						return returnValue;
					}
					else
						return this->CMovableObjectListener::objectRendering(pMovableObject, pCamera);
				}
				virtual const EarthView::World::Graphic::LightList* objectQueryLights(_in const EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::LightList* returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback(pMovableObject);
						return returnValue;
					}
					else
						return this->CMovableObjectListener::objectQueryLights(pMovableObject);
				}
				virtual ev_bool objectSelected(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objectIndex)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback(pMovableObject, objectIndex);
						return returnValue;
					}
					else
						return this->CMovableObjectListener::objectSelected(pMovableObject, objectIndex);
				}
				virtual ev_bool objectSelected(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _inout EarthView::World::Core::IntVector& objectIndex)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback(pMovableObject, &objectIndex);
						return returnValue;
					}
					else
						return this->CMovableObjectListener::objectSelected(pMovableObject, objectIndex);
				}
				virtual ev_bool componentSelected(_in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objIndex, _in ev_int32 submeshIndex, _in ev_int32 instanceIndex, _in ev_int32 segmentIndex)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback(pMovableObject, objIndex, submeshIndex, instanceIndex, segmentIndex);
						return returnValue;
					}
					else
						return this->CMovableObjectListener::componentSelected(pMovableObject, objIndex, submeshIndex, instanceIndex, segmentIndex);
				}
				virtual void objectUnselected(_in EarthView::World::Graphic::CMovableObject* pMovableObject)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback(pMovableObject);
					}
					else
						return this->CMovableObjectListener::objectUnselected(pMovableObject);
				}
			};
			REGISTER_FACTORY_CLASS(CMovableObjectListenerProxy);
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectDestroyed(pMovableObject);
				else
					ptrNativeObject->objectDestroyed(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDestroyed_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectDestroyed(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectAttached(pMovableObject);
				else
					ptrNativeObject->objectAttached(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectAttached_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectAttached(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectDetached(pMovableObject);
				else
					ptrNativeObject->objectDetached(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectDetached_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectDetached(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectMoved(pMovableObject);
				else
					ptrNativeObject->objectMoved(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectMoved_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectMoved(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CCamera* pCamera )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectRendering(pMovableObject, pCamera);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->objectRendering(pMovableObject, pCamera);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectRendering_ev_bool_CMovableObject_CCamera_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CCamera* pCamera )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectRendering(pMovableObject, pCamera);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::LightList*  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectQueryLights(pMovableObject);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->objectQueryLights(pMovableObject);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::LightList*  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectQueryLights_LightList_CMovableObject_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				const EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectQueryLights(pMovableObject);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objectIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectSelected(pMovableObject, objectIndex);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->objectSelected(pMovableObject, objectIndex);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_ev_int32_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objectIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectSelected(pMovableObject, objectIndex);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _inout void* objectIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectSelected(pMovableObject, *(EarthView::World::Core::IntVector*)objectIndex);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->objectSelected(pMovableObject, *(EarthView::World::Core::IntVector*)objectIndex);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectSelected_ev_bool_CMovableObject_IntVector_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _inout void* objectIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectSelected(pMovableObject, *(EarthView::World::Core::IntVector*)objectIndex);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objIndex, _in ev_int32 submeshIndex, _in ev_int32 instanceIndex, _in ev_int32 segmentIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::componentSelected(pMovableObject, objIndex, submeshIndex, instanceIndex, segmentIndex);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->componentSelected(pMovableObject, objIndex, submeshIndex, instanceIndex, segmentIndex);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_componentSelected_ev_bool_CMovableObject_ev_int32_ev_int32_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject, _in ev_int32 objIndex, _in ev_int32 submeshIndex, _in ev_int32 instanceIndex, _in ev_int32 segmentIndex )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::componentSelected(pMovableObject, objIndex, submeshIndex, instanceIndex, segmentIndex);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectUnselected(pMovableObject);
				else
					ptrNativeObject->objectUnselected(pMovableObject);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectListenerProxy* ptr = dynamic_cast<CMovableObjectListenerProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectListener_objectUnselected_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* pMovableObject )
			{
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CMovableObjectListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CMovableObjectListener::objectUnselected(pMovableObject);
			}
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback)(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::LightList* lightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback)(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CSceneManager* pSceneManager, _in ev_bool enabled);
			class CLightQueriedListenerProxy : public EarthView::World::Graphic::CMovableObject::CLightQueriedListener
			{
			private:
				EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback* m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback;
				EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback;
			public:
				CLightQueriedListenerProxy(EarthView::World::Core::CNameValuePairList *pList) : CLightQueriedListener(pList)
				{
					m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList(EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool(EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback = pCallback;
				}
				virtual void objectQueryLightsFinished(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::LightList* lightList)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback(pMovableObject, lightList);
					}
					else
						return this->CLightQueriedListener::objectQueryLightsFinished(pMovableObject, lightList);
				}
				virtual void sceneShadowEnabled(_in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CSceneManager* pSceneManager, _in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback(pMovableObject, pSceneManager, enabled);
					}
					else
						return this->CLightQueriedListener::sceneShadowEnabled(pMovableObject, pSceneManager, enabled);
				}
			};
			REGISTER_FACTORY_CLASS(CLightQueriedListenerProxy);
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CMovableObject::CLightQueriedListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX;
				if (dynamic_cast<CLightQueriedListenerProxy*>((EarthView::World::Graphic::CMovableObject::CLightQueriedListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CLightQueriedListener::objectQueryLightsFinished(pMovableObject, lightList);
				else
					ptrNativeObject->objectQueryLightsFinished(pMovableObject, lightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_Callback* pCallback )
			{
				CLightQueriedListenerProxy* ptr = dynamic_cast<CLightQueriedListenerProxy*>((EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_objectQueryLightsFinished_void_CMovableObject_LightList_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CMovableObject::CLightQueriedListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CLightQueriedListener::objectQueryLightsFinished(pMovableObject, lightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CSceneManager* pSceneManager, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject::CLightQueriedListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX;
				if (dynamic_cast<CLightQueriedListenerProxy*>((EarthView::World::Graphic::CMovableObject::CLightQueriedListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::CLightQueriedListener::sceneShadowEnabled(pMovableObject, pSceneManager, enabled);
				else
					ptrNativeObject->sceneShadowEnabled(pMovableObject, pSceneManager, enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_Callback* pCallback )
			{
				CLightQueriedListenerProxy* ptr = dynamic_cast<CLightQueriedListenerProxy*>((EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_CLightQueriedListener_sceneShadowEnabled_void_CMovableObject_CSceneManager_ev_bool_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CMovableObject* pMovableObject, _in const EarthView::World::Graphic::CSceneManager* pSceneManager, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject::CLightQueriedListener* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CLightQueriedListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::CLightQueriedListener::sceneShadowEnabled(pMovableObject, pSceneManager, enabled);
			}
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback)(_inout void* val);
			typedef char*  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback)();
			typedef void*  ( _stdcall EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback)(_in char*& valueName);
			class CMovableObjectInternalAnimableObjectProxy : public EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject
			{
			private:
				EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback;
				EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback* m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback;
			public:
				CMovableObjectInternalAnimableObjectProxy(EarthView::World::Core::CNameValuePairList *pList) : CMovableObjectInternalAnimableObject(pList)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector(EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString(EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString(EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback = pCallback;
				}
				virtual void initialiseAnimableDictionary(_inout EarthView::World::Core::StringVector& val) const
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback(&val);
					}
					else
						return this->CMovableObjectInternalAnimableObject::initialiseAnimableDictionary(val);
				}
				virtual EVString getAnimableDictionaryName() const
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CMovableObjectInternalAnimableObject::getAnimableDictionaryName();
				}
				virtual EarthView::World::Graphic::AnimableValuePtr createAnimableValue(_in const EVString& valueName)
				{
					if(m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* valueName_Char = valueName.makeBuffer();
						EarthView::World::Graphic::AnimableValuePtr returnValue = *(EarthView::World::Graphic::AnimableValuePtr*)m_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback(valueName_Char);
						return returnValue;
					}
					else
						return this->CMovableObjectInternalAnimableObject::createAnimableValue(valueName);
				}
			};
			REGISTER_FACTORY_CLASS(CMovableObjectInternalAnimableObjectProxy);
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector_Callback* pCallback )
			{
				CMovableObjectInternalAnimableObjectProxy* ptr = dynamic_cast<CMovableObjectInternalAnimableObjectProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_initialiseAnimableDictionary_void_StringVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString_Callback* pCallback )
			{
				CMovableObjectInternalAnimableObjectProxy* ptr = dynamic_cast<CMovableObjectInternalAnimableObjectProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_getAnimableDictionaryName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString_Callback* pCallback )
			{
				CMovableObjectInternalAnimableObjectProxy* ptr = dynamic_cast<CMovableObjectInternalAnimableObjectProxy*>((EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CMovableObjectInternalAnimableObject_createAnimableValue_AnimableValuePtr_EVString(pCallback);
				}
			}
			typedef EarthView::World::Graphic::CMovableObject::CUserData*  ( _stdcall EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback)();
			class CUserDataProxy : public EarthView::World::Graphic::CMovableObject::CUserData
			{
			private:
				EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback* m_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback;
			public:
				CUserDataProxy(EarthView::World::Core::CNameValuePairList *pList) : CUserData(pList)
				{
					m_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData(EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback = pCallback;
				}
				virtual EarthView::World::Graphic::CMovableObject::CUserData* clone()
				{
					if(m_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CUserData* returnValue = m_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback();
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CUserData::clone();
				}
			};
			REGISTER_FACTORY_CLASS(CUserDataProxy);
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CUserData*  _stdcall EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject::CUserData* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CUserData*) pObjectXXXX;
				if (dynamic_cast<CUserDataProxy*>((EarthView::World::Graphic::CMovableObject::CUserData*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject::CUserData* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CUserData::clone();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject::CUserData* objXXXX = ptrNativeObject->clone();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_Callback* pCallback )
			{
				CUserDataProxy* ptr = dynamic_cast<CUserDataProxy*>((EarthView::World::Graphic::CMovableObject::CUserData*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CUserData*  _stdcall EarthView_World_Graphic_CMovableObject_CUserData_clone_CUserData_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject::CUserData* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CUserData*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject::CUserData* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::CUserData::clone();
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall Get_EarthView_World_Graphic_CMovableObject_CUserData_mObjectType( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject::CUserData* ptrNativeObject = (EarthView::World::Graphic::CMovableObject::CUserData*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject::CUserData::MovableObjectType objXXXX = ptrNativeObject->mObjectType;
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CMovableObject_CUserData_mObjectType( void *pObjectXXXX, int  value )
			{
				((EarthView::World::Graphic::CMovableObject::CUserData*)pObjectXXXX)->mObjectType = (EarthView::World::Graphic::CMovableObject::CUserData::MovableObjectType)value;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*  _stdcall EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getAnimableObjectPtr();
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* objXXXX = ptrNativeObject->getAnimableObjectPtr();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*  _stdcall EarthView_World_Graphic_CMovableObject_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getAnimableObjectPtr();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderQueueId();
					return objXXXX;
				}
				else
				{
					ev_uint8 objXXXX = ptrNativeObject->getRenderQueueId();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueId_ev_uint8_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderQueueId();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObjectFactory* ref_fact )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyCreator(ref_fact);
				else
					ptrNativeObject->_notifyCreator(ref_fact);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyCreator_void_CMovableObjectFactory_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObjectFactory* ref_fact )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyCreator(ref_fact);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObjectFactory*  _stdcall EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObjectFactory* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getCreator();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObjectFactory* objXXXX = ptrNativeObject->_getCreator();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObjectFactory*  _stdcall EarthView_World_Graphic_CMovableObject__getCreator_CMovableObjectFactory_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObjectFactory* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getCreator();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* ref_mgr )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyManager(ref_mgr);
				else
					ptrNativeObject->_notifyManager(ref_mgr);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyManager_void_CSceneManager_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* ref_mgr )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyManager(ref_mgr);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager*  _stdcall EarthView_World_Graphic_CMovableObject__getManager_CSceneManager(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getManager();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->_getManager();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__getManager_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager*  _stdcall EarthView_World_Graphic_CMovableObject__getManager_CSceneManager_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getManager();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObject_getName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getName();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getName();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getName_EVString_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObject_getName_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObject_getMovableType_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getMovableType();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getMovableType();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getMovableType_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getMovableType_EVString_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getMovableType_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObject_getMovableType_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getMovableType();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CNode*  _stdcall EarthView_World_Graphic_CMovableObject_getParentNode_CNode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getParentNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CNode* objXXXX = ptrNativeObject->getParentNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getParentNode_CNode( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getParentNode_CNode_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getParentNode_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CNode*  _stdcall EarthView_World_Graphic_CMovableObject_getParentNode_CNode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getParentNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getParentSceneNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getParentSceneNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CMovableObject_getParentSceneNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getParentSceneNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isParentTagPoint();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isParentTagPoint();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isParentTagPoint_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isParentTagPoint();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyAttached(ref_parent, isTagPoint);
				else
					ptrNativeObject->_notifyAttached(ref_parent, isTagPoint);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyAttached(ref_parent, isTagPoint);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyAttached(ref_parent);
				else
					ptrNativeObject->_notifyAttached(ref_parent);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyAttached_void_CNode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyAttached(ref_parent);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isAttached_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isAttached();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isAttached();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_isAttached_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isAttached_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isAttached();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_detachFromParent_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::detachFromParent();
				else
					ptrNativeObject->detachFromParent();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_detachFromParent_void( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_detachFromParent_void_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_detachFromParent_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_detachFromParent_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::detachFromParent();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isInScene_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isInScene();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isInScene();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_isInScene_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isInScene_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isInScene();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyMoved_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyMoved();
				else
					ptrNativeObject->_notifyMoved();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyMoved_void( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyMoved_void_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyMoved_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyMoved_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyMoved();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList(void *pObjectXXXX, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyLightsQueried(lightList);
				else
					ptrNativeObject->_notifyLightsQueried(lightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyLightsQueried_void_LightList_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyLightsQueried(lightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightQueriedListener(listener);
				else
					ptrNativeObject->setLightQueriedListener(listener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightQueriedListener_void_CLightQueriedListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightQueriedListener(listener);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CLightQueriedListener*  _stdcall EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject::CLightQueriedListener* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightQueriedListener();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject::CLightQueriedListener* objXXXX = ptrNativeObject->getLightQueriedListener();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CLightQueriedListener*  _stdcall EarthView_World_Graphic_CMovableObject_getLightQueriedListener_CLightQueriedListener_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject::CLightQueriedListener* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightQueriedListener();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightListUpdated();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getLightListUpdated();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getLightListUpdated_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightListUpdated();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 frame )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightListUpdated(frame);
				else
					ptrNativeObject->setLightListUpdated(frame);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightListUpdated_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 frame )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightListUpdated(frame);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* ref_cam )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyCurrentCamera(ref_cam);
				else
					ptrNativeObject->_notifyCurrentCamera(ref_cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__notifyCurrentCamera_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* ref_cam )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_notifyCurrentCamera(ref_cam);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getBoundingBox_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getBoundingBox();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getBoundingRadius();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getBoundingRadius();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getBoundingRadius_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getBoundingRadius();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool(void *pObjectXXXX, _in ev_bool derive )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingBox(derive);
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getWorldBoundingBox(derive);
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool derive )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingBox(derive);
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getWorldBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingBox_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingBox();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool(void *pObjectXXXX, _in ev_bool derive )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingSphere(derive);
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->getWorldBoundingSphere(derive);
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool derive )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingSphere(derive);
				const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingSphere();
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->getWorldBoundingSphere();
					const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getWorldBoundingSphere_CSphere_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CSphere& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getWorldBoundingSphere();
				const EarthView::World::Spatial::Math::CSphere *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::_updateRenderQueue(queue);
				else
					ptrNativeObject->_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject__updateRenderQueue_void_CRenderQueue_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setVisible(visible);
				else
					ptrNativeObject->setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setVisible_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getVisible_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getVisible();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getVisible();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getVisible_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getVisible();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isVisible_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isVisible();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isVisible();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_isVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isVisible_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isVisible();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMaxDistance(dist);
				else
					ptrNativeObject->setRenderingMaxDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMaxDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMaxDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMaxDistance();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getRenderingMaxDistance();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMaxDistance_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMaxDistance();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMinDistance(dist);
				else
					ptrNativeObject->setRenderingMinDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMinDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMinDistance();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getRenderingMinDistance();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinDistance_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMinDistance();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real(void *pObjectXXXX, _in Real pixelSize )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMinPixelSize(pixelSize);
				else
					ptrNativeObject->setRenderingMinPixelSize(pixelSize);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderingMinPixelSize_void_Real_NoVirtual(void *pObjectXXXX, _in Real pixelSize )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderingMinPixelSize(pixelSize);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMinPixelSize();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getRenderingMinPixelSize();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getRenderingMinPixelSize_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderingMinPixelSize();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getSelectable_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getSelectable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setSelectable_void_ev_bool(void *pObjectXXXX, _in ev_bool selectable )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setSelectable(selectable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getHighlightable_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getHighlightable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setHighlightable_void_ev_bool(void *pObjectXXXX, _in ev_bool highlightable )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setHighlightable(highlightable);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getSelectionColour_CColourValue(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->getSelectionColour();
				const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
				else
					ptrNativeObject->setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setSelectionColour_void_CColourValue_NoVirtual(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelectionColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getEditable_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getEditable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setEditable_void_ev_bool(void *pObjectXXXX, _in ev_bool editable )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setEditable(editable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_setSelected_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getSelected_IntVector(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getSelected_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getSelected_IntVector_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getSelected_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getSelected_IntVector_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getSelected();
				EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_NoVirtual(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(void *pObjectXXXX, _in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector(void *pObjectXXXX, _in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectBy_ev_bool_CSphere_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_NoVirtual(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_renderSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::renderSelection();
				else
					ptrNativeObject->renderSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_renderSelection_void( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_renderSelection_void_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_renderSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_renderSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::renderSelection();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_clearSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::clearSelection();
				else
					ptrNativeObject->clearSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_clearSelection_void( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_clearSelection_void_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_clearSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_clearSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::clearSelection();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setUserData_void_CUserData(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CUserData* data )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setUserData(data);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CUserData*  _stdcall EarthView_World_Graphic_CMovableObject_getUserData_CUserData(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject::CUserData* objXXXX = ptrNativeObject->getUserData();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32(void *pObjectXXXX, _in ev_uint32 objectIndex )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::startEditing(objectIndex);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->startEditing(objectIndex);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_startEditing_ev_bool_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::startEditing(objectIndex);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_endEditing_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::endEditing();
				else
					ptrNativeObject->endEditing();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_endEditing_void( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_endEditing_void_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_endEditing_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_endEditing_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::endEditing();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEditBoundingBox*  _stdcall EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getEditBoundingBox();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->getEditBoundingBox();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEditBoundingBox*  _stdcall EarthView_World_Graphic_CMovableObject_getEditBoundingBox_CEditBoundingBox_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getEditBoundingBox();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(void *pObjectXXXX, _in ev_uint32 objectIndex, _inout void* matrix )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex, _inout void* matrix )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(void *pObjectXXXX, _in ev_uint32 objectIndex, _in const void* matrix )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex, _in const void* matrix )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderQueueGroup(queueID);
				else
					ptrNativeObject->setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroup_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(void *pObjectXXXX, _in ev_uint8 queueID, _in ev_uint16 priority )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderQueueGroupAndPriority(queueID, priority);
				else
					ptrNativeObject->setRenderQueueGroupAndPriority(queueID, priority);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint8 queueID, _in ev_uint16 priority )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setRenderQueueGroupAndPriority(queueID, priority);
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderQueueGroup();
					return objXXXX;
				}
				else
				{
					ev_uint8 objXXXX = ptrNativeObject->getRenderQueueGroup();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CMovableObject_getRenderQueueGroup_ev_uint8_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getRenderQueueGroup();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CMatrix4& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getParentNodeFullTransform();
					const EarthView::World::Spatial::Math::CMatrix4 *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CMatrix4& objXXXX = ptrNativeObject->_getParentNodeFullTransform();
					const EarthView::World::Spatial::Math::CMatrix4 *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject__getParentNodeFullTransform_CMatrix4_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CMatrix4& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getParentNodeFullTransform();
				const EarthView::World::Spatial::Math::CMatrix4 *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setQueryFlags(flags);
				else
					ptrNativeObject->setQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setQueryFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::addQueryFlags(flags);
				else
					ptrNativeObject->addQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addQueryFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::addQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeQueryFlags(flags);
				else
					ptrNativeObject->removeQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeQueryFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getQueryFlags();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getQueryFlags();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getQueryFlags_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getQueryFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setDefaultQueryFlags_void_ev_uint32(_in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject::setDefaultQueryFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getDefaultQueryFlags_ev_uint32( )
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CMovableObject::getDefaultQueryFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setVisibilityFlags(flags);
				else
					ptrNativeObject->setVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setVisibilityFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::addVisibilityFlags(flags);
				else
					ptrNativeObject->addVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addVisibilityFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::addVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeVisibilityFlags(flags);
				else
					ptrNativeObject->removeVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeVisibilityFlags_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getVisibilityFlags();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getVisibilityFlags();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getVisibilityFlags_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getVisibilityFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setDefaultVisibilityFlags_void_ev_uint32(_in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject::setDefaultVisibilityFlags(flags);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getDefaultVisibilityFlags_ev_uint32( )
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CMovableObject::getDefaultVisibilityFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::addListener(ref_listener);
				else
					ptrNativeObject->addListener(ref_listener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_addListener_void_CMovableObjectListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::addListener(ref_listener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeListener(listener);
				else
					ptrNativeObject->removeListener(listener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_removeListener_void_CMovableObjectListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::removeListener(listener);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::existListener(listener);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->existListener(listener);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_existListener_ev_bool_CMovableObjectListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::existListener(listener);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getListenerCount();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getListenerCount();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getListenerCount_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getListenerCount();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CMovableObjectListener*  _stdcall EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32(void *pObjectXXXX, _in ev_uint32 index )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject::CMovableObjectListener* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getListener(index);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject::CMovableObjectListener* objXXXX = ptrNativeObject->getListener(index);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject::CMovableObjectListener*  _stdcall EarthView_World_Graphic_CMovableObject_getListener_CMovableObjectListener_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 index )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject::CMovableObjectListener* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getListener(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_queryLights_LightList(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::queryLights();
					const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->queryLights();
					const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_queryLights_LightList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_queryLights_LightList_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_queryLights_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_queryLights_LightList_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::queryLights();
				const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightMask();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getLightMask();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getLightMask_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightMask();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightMask(lightMask);
				else
					ptrNativeObject->setLightMask(lightMask);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setLightMask_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setLightMask(lightMask);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::LightList*  _stdcall EarthView_World_Graphic_CMovableObject__getLightList_LightList(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getLightList();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->_getLightList();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject__getLightList_LightList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject__getLightList_LightList_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject__getLightList_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::LightList*  _stdcall EarthView_World_Graphic_CMovableObject__getLightList_LightList_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::_getLightList();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEdgeData*  _stdcall EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEdgeData* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getEdgeList();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEdgeData* objXXXX = ptrNativeObject->getEdgeList();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEdgeData*  _stdcall EarthView_World_Graphic_CMovableObject_getEdgeList_CEdgeData_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CEdgeData* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getEdgeList();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::hasEdgeList();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasEdgeList();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_hasEdgeList_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::hasEdgeList();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(void *pObjectXXXX, _in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_NoVirtual(void *pObjectXXXX, _in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist, _in ev_uint32 flags )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
				EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(void *pObjectXXXX, _in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
					EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_NoVirtual(void *pObjectXXXX, _in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getShadowVolumeRenderableIterator((EarthView::World::Graphic::ShadowTechnique)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
				EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator *pXXXX = new EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightCapBounds();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getLightCapBounds();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CMovableObject_getLightCapBounds_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getLightCapBounds();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real(void *pObjectXXXX, _in const void* light, _in Real dirLightExtrusionDist )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					EarthView::World::Spatial::Math::CAxisAlignedBox objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getDarkCapBounds(*(EarthView::World::Graphic::CLight*)light, dirLightExtrusionDist);
					EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = new EarthView::World::Spatial::Math::CAxisAlignedBox(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Spatial::Math::CAxisAlignedBox objXXXX = ptrNativeObject->getDarkCapBounds(*(EarthView::World::Graphic::CLight*)light, dirLightExtrusionDist);
					EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = new EarthView::World::Spatial::Math::CAxisAlignedBox(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CMovableObject_getDarkCapBounds_CAxisAlignedBox_CLight_Real_NoVirtual(void *pObjectXXXX, _in const void* light, _in Real dirLightExtrusionDist )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				EarthView::World::Spatial::Math::CAxisAlignedBox objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getDarkCapBounds(*(EarthView::World::Graphic::CLight*)light, dirLightExtrusionDist);
				EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = new EarthView::World::Spatial::Math::CAxisAlignedBox(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setCastShadows(enabled);
				else
					ptrNativeObject->setCastShadows(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setCastShadows_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setCastShadows(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getCastShadows();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getCastShadows();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getCastShadows_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getCastShadows();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getReceivesShadows();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getReceivesShadows();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getReceivesShadows_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getReceivesShadows();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getReflectable_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getReflectable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setReflectable_void_ev_bool(void *pObjectXXXX, _in ev_bool value )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setReflectable(value);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_getRefractable_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getRefractable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setRefractable_void_ev_bool(void *pObjectXXXX, _in ev_bool value )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setRefractable(value);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isParentNodeLocal_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->isParentNodeLocal();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setParentNodelLocal_void_ev_bool(void *pObjectXXXX, _in ev_bool local )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->setParentNodelLocal(local);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getPointExtrusionDistance(l);
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getPointExtrusionDistance(l);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CMovableObject_getPointExtrusionDistance_Real_CLight_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getPointExtrusionDistance(l);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getTypeFlags();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getTypeFlags();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObject_getTypeFlags_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::getTypeFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::visitRenderables(visitor, debugRenderables);
				else
					ptrNativeObject->visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::visitRenderables(visitor);
				else
					ptrNativeObject->visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_visitRenderables_void_CVisitor_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObject::setDebugDisplayEnabled(enabled);
				else
					ptrNativeObject->setDebugDisplayEnabled(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObject_setDebugDisplayEnabled_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObject::setDebugDisplayEnabled(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isDebugDisplayEnabled();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isDebugDisplayEnabled();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObject_isDebugDisplayEnabled_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObject* ptrNativeObject = (EarthView::World::Graphic::CMovableObject*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObject::isDebugDisplayEnabled();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_updateEdgeListLightFacing_void_CEdgeData_CVector4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real( void *pObjectXXXX, EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback )
			{
				CMovableObjectProxy* ptr = dynamic_cast<CMovableObjectProxy*>((EarthView::World::Graphic::CMovableObject*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObject_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(pCallback);
				}
			}
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback)(_in char*& name, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback)(_in char*& name);
			typedef char*  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback)();
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback)(_in char*& name, _in EarthView::World::Graphic::CSceneManager* ref_manager, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback)(_in char*& name, _in EarthView::World::Graphic::CSceneManager* ref_manager);
			typedef void  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* obj);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback)();
			class CMovableObjectFactoryProxy : public EarthView::World::Graphic::CMovableObjectFactory
			{
			private:
				EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback;
				EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback* m_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback;
			public:
				CMovableObjectFactoryProxy(EarthView::World::Core::CNameValuePairList *pList) : CMovableObjectFactory(pList)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList(EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString(EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString(EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList(EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager(EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject(EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool(EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback = pCallback;
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstanceImpl(_in const EVString& name, _in const EarthView::World::Core::CommonStringPairList* params)
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback(name_Char, params);
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::createInstanceImpl(name, params);
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstanceImpl(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::createInstanceImpl(name);
				}
				virtual EVString getType() const
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback();
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::getType();
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstance(_in const EVString& name, _in EarthView::World::Graphic::CSceneManager* ref_manager, _in const EarthView::World::Core::CommonStringPairList* params)
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback(name_Char, ref_manager, params);
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::createInstance(name, ref_manager, params);
				}
				virtual EarthView::World::Graphic::CMovableObject* createInstance(_in const EVString& name, _in EarthView::World::Graphic::CSceneManager* ref_manager)
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback(name_Char, ref_manager);
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::createInstance(name, ref_manager);
				}
				virtual void destroyInstance(_in EarthView::World::Graphic::CMovableObject* obj)
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback(obj);
					}
					else
						return this->CMovableObjectFactory::destroyInstance(obj);
				}
				virtual ev_bool requestTypeFlags() const
				{
					if(m_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CMovableObjectFactory::requestTypeFlags();
				}
			};
			REGISTER_FACTORY_CLASS(CMovableObjectFactoryProxy);
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList(void *pObjectXXXX, _in const char* name, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstanceImpl(name1, params);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createInstanceImpl(name1, params);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_CommonStringPairList_NoVirtual(void *pObjectXXXX, _in const char* name, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstanceImpl(name1, params);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstanceImpl(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createInstanceImpl(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstanceImpl_CMovableObject_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstanceImpl(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_getType_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::getType();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getType();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_getType_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_getType_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::getType();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList(void *pObjectXXXX, _in const char* name, _in EarthView::World::Graphic::CSceneManager* ref_manager, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstance(name1, ref_manager, params);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createInstance(name1, ref_manager, params);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_CommonStringPairList_NoVirtual(void *pObjectXXXX, _in const char* name, _in EarthView::World::Graphic::CSceneManager* ref_manager, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstance(name1, ref_manager, params);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager(void *pObjectXXXX, _in const char* name, _in EarthView::World::Graphic::CSceneManager* ref_manager )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstance(name1, ref_manager);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createInstance(name1, ref_manager);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CMovableObjectFactory_createInstance_CMovableObject_EVString_CSceneManager_NoVirtual(void *pObjectXXXX, _in const char* name, _in EarthView::World::Graphic::CSceneManager* ref_manager )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::createInstance(name1, ref_manager);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* obj )
			{
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::destroyInstance(obj);
				else
					ptrNativeObject->destroyInstance(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObjectFactory_destroyInstance_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* obj )
			{
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::destroyInstance(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				if (dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::requestTypeFlags();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->requestTypeFlags();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_Callback* pCallback )
			{
				CMovableObjectFactoryProxy* ptr = dynamic_cast<CMovableObjectFactoryProxy*>((EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CMovableObjectFactory_requestTypeFlags_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CMovableObjectFactory::requestTypeFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CMovableObjectFactory__notifyTypeFlags_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 flag )
			{
				EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				ptrNativeObject->_notifyTypeFlags(flag);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CMovableObjectFactory_getTypeFlags_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CMovableObjectFactory* ptrNativeObject = (EarthView::World::Graphic::CMovableObjectFactory*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->getTypeFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_MovableObjectList_push_ev_bool_EVString_CMovableObject(void *pObjectXXXX, _in const char* key, _in EarthView::World::Graphic::CMovableObject*& val )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->push(key1, val);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_MovableObjectList_exist_ev_bool_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->exist(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_MovableObjectList_OperatorIndex_CMovableObject_EVString(void *pObjXXXX, _in const char* key )
			{
				EarthView::World::Graphic::MovableObjectList& objYYYY = *(EarthView::World::Graphic::MovableObjectList*) pObjXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = objYYYY[key];
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_MovableObjectList_get_CMovableObject_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->get(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_MovableObjectList_erase_void_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ptrNativeObject->erase(key1);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_MovableObjectList_size_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->size();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_MovableObjectList_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_MovableObjectList_empty_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::MovableObjectList* ptrNativeObject = (EarthView::World::Graphic::MovableObjectList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->empty();
				return objXXXX;
			}
		}
	}
}
