/* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc */
#include "stableheaders.h"
#include "graphic/scenemanager.h"
namespace EarthView
{
	namespace World
	{
		namespace Spatial
		{
			namespace Math
			{
			}
		}
	}
}
namespace EarthView
{
	namespace World
	{
		namespace Graphic
		{
			extern "C" EV_DLL_EXPORT  void*  _stdcall Get_EarthView_World_Graphic_ViewPoint_position( void *pObjectXXXX )
			{
				EarthView::World::Graphic::ViewPoint* ptrNativeObject = (EarthView::World::Graphic::ViewPoint*) pObjectXXXX;
				EarthView::World::Spatial::Math::CVector3 &objXXXX = ptrNativeObject->position;
				EarthView::World::Spatial::Math::CVector3 *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_ViewPoint_position( void *pObjectXXXX, void*  value )
			{
				((EarthView::World::Graphic::ViewPoint*)pObjectXXXX)->position = *(EarthView::World::Spatial::Math::CVector3*)value;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall Get_EarthView_World_Graphic_ViewPoint_orientation( void *pObjectXXXX )
			{
				EarthView::World::Graphic::ViewPoint* ptrNativeObject = (EarthView::World::Graphic::ViewPoint*) pObjectXXXX;
				EarthView::World::Spatial::Math::CQuaternion &objXXXX = ptrNativeObject->orientation;
				EarthView::World::Spatial::Math::CQuaternion *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_ViewPoint_orientation( void *pObjectXXXX, void*  value )
			{
				((EarthView::World::Graphic::ViewPoint*)pObjectXXXX)->orientation = *(EarthView::World::Spatial::Math::CQuaternion*)value;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_aabb( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				EarthView::World::Spatial::Math::CAxisAlignedBox &objXXXX = ptrNativeObject->aabb;
				EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_aabb( void *pObjectXXXX, void*  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->aabb = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)value;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_receiverAabb( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				EarthView::World::Spatial::Math::CAxisAlignedBox &objXXXX = ptrNativeObject->receiverAabb;
				EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_receiverAabb( void *pObjectXXXX, void*  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->receiverAabb = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)value;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_minDistance( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->minDistance;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_minDistance( void *pObjectXXXX, Real  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->minDistance = value;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_maxDistance( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->maxDistance;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_maxDistance( void *pObjectXXXX, Real  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->maxDistance = value;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_minDistanceInFrustum( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->minDistanceInFrustum;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_minDistanceInFrustum( void *pObjectXXXX, Real  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->minDistanceInFrustum = value;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall Get_EarthView_World_Graphic_VisibleObjectsBoundsInfo_maxDistanceInFrustum( void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->maxDistanceInFrustum;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_VisibleObjectsBoundsInfo_maxDistanceInFrustum( void *pObjectXXXX, Real  value )
			{
				((EarthView::World::Graphic::VisibleObjectsBoundsInfo*)pObjectXXXX)->maxDistanceInFrustum = value;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_VisibleObjectsBoundsInfo_reset_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				ptrNativeObject->reset();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_VisibleObjectsBoundsInfo_merge_void_CAxisAlignedBox_CSphere_CCamera_ev_bool(void *pObjectXXXX, _in const void* boxBounds, _in const void* sphereBounds, _in const EarthView::World::Graphic::CCamera* cam, _in ev_bool receiver )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				ptrNativeObject->merge(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)boxBounds, *(EarthView::World::Spatial::Math::CSphere*)sphereBounds, cam, receiver);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_VisibleObjectsBoundsInfo_merge_void_CAxisAlignedBox_CSphere_CCamera(void *pObjectXXXX, _in const void* boxBounds, _in const void* sphereBounds, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				ptrNativeObject->merge(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)boxBounds, *(EarthView::World::Spatial::Math::CSphere*)sphereBounds, cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_VisibleObjectsBoundsInfo_mergeNonRenderedButInFrustum_void_CAxisAlignedBox_CSphere_CCamera(void *pObjectXXXX, _in const void* boxBounds, _in const void* sphereBounds, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::VisibleObjectsBoundsInfo* ptrNativeObject = (EarthView::World::Graphic::VisibleObjectsBoundsInfo*) pObjectXXXX;
				ptrNativeObject->mergeNonRenderedButInFrustum(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)boxBounds, *(EarthView::World::Spatial::Math::CSphere*)sphereBounds, cam);
			}
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback)();
			typedef const EarthView::World::Graphic::CPass*  ( _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback)(_in const EarthView::World::Graphic::CPass* pass);
			typedef const EarthView::World::Graphic::CPass*  ( _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback)(_in const EarthView::World::Graphic::CPass* pass);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback)(_in const EarthView::World::Graphic::CPass* pass);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback)(_in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CRenderable* rend);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback)(_in int bp, _in Real distance, _in const void* orientation, _in char*& groupName);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback)(_in int bp, _in Real curvature, _in Real tiling, _in Real distance, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ySegmentsToKeep, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback)(_in const EarthView::World::Graphic::CRenderable* pRend, _in ev_bool fixedFunction);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback)(_in ev_bool fixedFunction);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback)(_in ev_uint8 id, _in char*& invocation);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback)(_in ev_uint8 id, _in char*& invocation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback)(_in ev_uint64  numberOfShadowTextures);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback)(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback)(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* f);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback)(_in EarthView::World::Graphic::CViewport* v);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback)(_in EarthView::World::Graphic::CViewport* v);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback)(_in EarthView::World::Graphic::CViewport* vp);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback)(_in EarthView::World::Graphic::CRenderQueueInvocationSequence* s);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration);
			typedef EarthView::World::Graphic::CAutoParamDataSource*  ( _stdcall EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback)(_in const EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback)(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Graphic::LightList* lightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback)(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback)(_in const void* matPtr);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback)(_in const ev_bool& useDefaultMat);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback)(_in const ev_bool& visible);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback)(_in ev_bool flag);
			typedef EarthView::World::Graphic::CSceneManager::RenderContext*  ( _stdcall EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback)(_in EarthView::World::Graphic::CSceneManager::RenderContext* context);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback)(_in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* cam, _in ev_bool calcScissor);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback)(_in ev_bool secondpass, _in ev_bool zfail, _in ev_bool twosided);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback)(_in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* pGroup, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback)(_in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback)(_in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback)(_in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback)(_in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in ev_bool suppressShadows, _in ev_bool suppressRenderState);
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback)(_in const void* ll, _in const EarthView::World::Graphic::CCamera* cam);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback)(_in const EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam, _inout void* rect);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback)();
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback)(_in const void* ll);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback)(_in const EarthView::World::Graphic::CLight* l, _inout void* planes);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback)(_in const void* lights, _in ev_uint16 limit);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback)(_in const void* m);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback)(_in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::LightList* lights);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback)(_in EarthView::World::Graphic::CGpuProgram* prog);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback)(_in const EarthView::World::Graphic::CPass* p);
			typedef char*  ( _stdcall EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback)();
			typedef EarthView::World::Graphic::CCamera*  ( _stdcall EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CCamera*  ( _stdcall EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* cam);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback)();
			typedef EarthView::World::Graphic::CLight*  ( _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CLight*  ( _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback)();
			typedef ev_uint16  ( _stdcall EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback)();
			typedef EarthView::World::Graphic::CLight*  ( _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback)(_in ev_uint16 index);
			typedef EarthView::World::Graphic::CLight*  ( _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback)(_in char*& name);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback)(_in EarthView::World::Graphic::CLight* l);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback)(_in EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback)(_in EarthView::World::Graphic::CLight* light);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback)();
			typedef char*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback)();
			typedef EarthView::World::Graphic::CCamera*  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback)();
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback)(_in ev_uint16 index);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback)();
			typedef float  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback)(_in ev_uint8 index);
			typedef float  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback)(_in ev_uint8 index);
			typedef bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback)(_in bool flag);
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback)();
			typedef bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback)(_in bool flag);
			typedef float  ( _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback)(_in float percent);
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback)(_in ev_uint8 index);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback)(_in ev_uint8 index, _in ev_uint8 distance);
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* camera);
			typedef bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback)(_in Real power);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback)(_in Real offset);
			typedef float  ( _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback)(_in float factor);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback)(_in const void* position, _in Real radius, _inout void* destList, _in ev_uint32 lightMask);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback)(_in const void* position, _in Real radius, _inout void* destList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback)(_in ev_bool visible);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback)(_in ev_bool visible);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback)(_in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList, _in ev_uint32 lightMask);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback)(_in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList);
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback)(_in EarthView::World::Graphic::CSceneNode* sn);
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback)(_in char*& entityName, _in char*& meshName, _in const void* subentityIndics, _in char*& groupName);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback)(_in char*& entityName, _in char*& meshName, _in char*& groupName);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback)(_in char*& entityName, _in char*& meshName, _in const void* subentityIndics);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback)(_in char*& entityName, _in char*& meshName);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback)(_in char*& entityName, _in const void* pMesh, _in const void* subentityIndics);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback)(_in char*& entityName, _in const void* pMesh);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback)(_in const void* pMesh, _in const void* subentityIndics);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback)(_in const void* pMesh);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback)(_in char*& meshName, _in const void* subentityIndics);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback)(_in char*& meshName);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback)(_in char*& entityName, _in int ptype);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback)(_in int ptype);
			typedef EarthView::World::Graphic::CEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback)(_in EarthView::World::Graphic::CEntity* ent);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback)();
			typedef EarthView::World::Graphic::CManualObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CManualObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback)();
			typedef EarthView::World::Graphic::CManualObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback)(_in EarthView::World::Graphic::CManualObject* obj);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CBillboardChain*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CBillboardChain*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback)();
			typedef EarthView::World::Graphic::CBillboardChain*  ( _stdcall EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback)(_in EarthView::World::Graphic::CBillboardChain* obj);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback)();
			typedef EarthView::World::Graphic::CRibbonTrail*  ( _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CRibbonTrail*  ( _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback)();
			typedef EarthView::World::Graphic::CRibbonTrail*  ( _stdcall EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback)(_in EarthView::World::Graphic::CRibbonTrail* obj);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback)();
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback)(_in char*& name, _in char*& templateName);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback)(_in char*& name, _in ev_uint64  quota, _in char*& resourceGroup);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback)(_in char*& name, _in ev_uint64  quota);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback)(_in ev_uint64  quota, _in char*& resourceGroup);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback)(_in ev_uint64  quota);
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback)();
			typedef EarthView::World::Graphic::CParticleSystem*  ( _stdcall EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback)(_in EarthView::World::Graphic::CParticleSystem* obj);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_clearScene_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback)(_in char*& filename);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback)(_inout void* stream, _in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback)(_inout void* stream);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback)(_in char*& filename);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback)(_inout void* stream, _in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback)(_inout void* stream);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback)(_in char*& filename);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback)(_inout void* stream, _in char*& typeName);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback)(_inout void* stream);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback)(_in ev_bool random);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback)(_in char*& strKey, _in const void* pValue);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback)(_in char*& strKey, _in void* pDestValue);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback)(_in char*& strKey);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback)(_in char*& strKey, _inout void* refValueList);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback)(_inout void* refKeys);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* cam);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback)(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::VisibleObjectsBoundsInfo* visibleBounds, _in ev_bool onlyShadowCasters);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback)(_in EarthView::World::Graphic::CCamera* camera, _in EarthView::World::Graphic::CViewport* vp, _in ev_bool includeOverlays);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* cam);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback)(_in EarthView::World::Graphic::CRenderSystem* ref_sys);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale, _in Real tiling);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName, _in Real scale);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback)(_in ev_bool enable, _in const void* plane, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback)(_in ev_bool enable);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback)();
			typedef const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters&  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_bool drawFirst);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback)(_in ev_bool enable, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance, _in ev_uint8 renderQueue);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real distance);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback)(_in ev_bool enable, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback)(_in ev_bool enable);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback)();
			typedef const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters&  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback)(_in ev_bool enable, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling, _in Real distance);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature, _in Real tiling);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback)(_in ev_bool enable, _in char*& materialName, _in Real curvature);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback)(_in ev_bool enable, _in char*& materialName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback)(_in ev_bool enable);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback)();
			typedef const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters&  ( _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback)();
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback)();
			typedef EarthView::World::Graphic::CBillboardSet*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback)(_in char*& name, _in ev_uint32 poolSize);
			typedef EarthView::World::Graphic::CBillboardSet*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CBillboardSet*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback)(_in ev_uint32 poolSize);
			typedef EarthView::World::Graphic::CBillboardSet*  ( _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback)();
			typedef EarthView::World::Graphic::CBillboardSet*  ( _stdcall EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback)(_in EarthView::World::Graphic::CBillboardSet* set);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback)(_in ev_bool display);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CAnimation*  ( _stdcall EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback)(_in char*& name, _in Real length);
			typedef EarthView::World::Graphic::CAnimation*  ( _stdcall EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback)();
			typedef EarthView::World::Graphic::CAnimationState*  ( _stdcall EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback)(_in char*& animName);
			typedef EarthView::World::Graphic::CAnimationState*  ( _stdcall EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback)(_in char*& animName);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback)(_in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback)(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix);
			typedef EarthView::World::Graphic::CRenderQueue*  ( _stdcall EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback)(_in EarthView::World::Graphic::CRenderQueueListener* ref_newListener);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback)(_in EarthView::World::Graphic::CRenderQueueListener* delListener);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback)(_in EarthView::World::Graphic::CRenderObjectListener* ref_newListener);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback)(_in EarthView::World::Graphic::CRenderObjectListener* delListener);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback)(_in ev_uint8 qid);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback)(_in ev_uint8 qid);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback)(_in int mode);
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback)(_in ev_uint8 qid);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback)(_in ev_uint8 qid);
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback)(_in ev_bool bShow);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback)(_in EarthView::World::Graphic::CSceneNode* node, _in ev_bool autoTrack);
			typedef EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback)(_in const void* box, _in ev_uint32 mask);
			typedef EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback)(_in const void* box);
			typedef EarthView::World::Graphic::CSphereSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback)(_in const void* sphere, _in ev_uint32 mask);
			typedef EarthView::World::Graphic::CSphereSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback)(_in const void* sphere);
			typedef EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback)(_in const void* volumes, _in ev_uint32 mask);
			typedef EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback)(_in const void* volumes);
			typedef EarthView::World::Graphic::CRaySceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback)(_in const void* ray, _in ev_uint32 mask);
			typedef EarthView::World::Graphic::CRaySceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback)(_in const void* ray);
			typedef EarthView::World::Graphic::CIntersectionSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback)(_in ev_uint32 mask);
			typedef EarthView::World::Graphic::CIntersectionSceneQuery*  ( _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback)(_in EarthView::World::Graphic::CSceneQuery* query);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback)(_in int technique);
			typedef int  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback)(_in ev_bool debug);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback)(_in const void* colour);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback)(_in Real rRatio);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback)(_in Real gRatio);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback)(_in Real bRatio);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback)(_in Real distance);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback)(_in ev_uint64  size);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback)(_in ev_uint16 size);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback)(_in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback)(_in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback)(_in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback)(_in ev_uint64  shadowIndex, _in const void* config);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback)(_in int fmt);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback)(_in ev_uint16 fsaa);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback)(_in ev_uint64  count);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback)(_in ev_uint16 size, _in ev_uint16 count);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback)(_in ev_uint16 size, _in ev_uint16 count, _in int fmt);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback)(_in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback)(_in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback)(_in ev_uint64  shadowIndex);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback)(_in Real offset);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback)(_in Real fadeStart);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback)(_in Real fadeEnd);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback)(_in ev_bool selfShadow);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback)(_in ev_bool bf);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback)(_in const void* shadowSetup);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback)(_in ev_bool enable);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback)(_in EarthView::World::Graphic::CCompositorChain* chain);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback)(_in ev_bool isLate);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CCompositorChain*  ( _stdcall EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback)(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ref_s);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback)(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback)(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s);
			typedef EarthView::World::Graphic::CStaticGeometry*  ( _stdcall EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CStaticGeometry*  ( _stdcall EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback)(_in char*& name);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback)(_in EarthView::World::Graphic::CStaticGeometry* geom);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback)();
			typedef EarthView::World::Graphic::CInstancedGeometry*  ( _stdcall EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback)(_in char*& name);
			typedef EarthView::World::Graphic::CInstancedGeometry*  ( _stdcall EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback)(_in EarthView::World::Graphic::CInstancedGeometry* geom);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback)();
			typedef EarthView::World::Graphic::CInstanceManager*  ( _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback)(_in char*& customName, _in char*& meshName, _in char*& groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx);
			typedef EarthView::World::Graphic::CInstanceManager*  ( _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback)(_in char*& customName, _in char*& meshName, _in char*& groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags);
			typedef EarthView::World::Graphic::CInstanceManager*  ( _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback)(_in char*& customName, _in char*& meshName, _in char*& groupName, _in int technique, _in ev_uint64  numInstancesPerBatch);
			typedef EarthView::World::Graphic::CInstanceManager*  ( _stdcall EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback)(_in char*& managerName);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback)(_in char*& managerName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback)(_in EarthView::World::Graphic::CInstanceManager* instanceManager);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback)(_in EarthView::World::Graphic::CInstanceManager* instanceManager);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback)();
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback)(_in char*& meshName, _in char*& groupName, _in char*& materialName, _in int technique, _in ev_uint64  numInstancesPerBatch);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback)(_in char*& meshName, _in char*& groupName, _in char*& materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags);
			typedef ev_uint64   ( _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback)(_in char*& meshName, _in char*& groupName, _in char*& materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx);
			typedef EarthView::World::Graphic::CInstancedEntity*  ( _stdcall EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback)(_in char*& materialName, _in char*& managerName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback)(_in EarthView::World::Graphic::CInstancedEntity* instancedEntity);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback)(_in char*& name, _in char*& typeName, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback)(_in char*& name, _in char*& typeName);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback)(_in char*& typeName, _in const EarthView::World::Core::CommonStringPairList* params);
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback)(_in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback)(_in char*& name, _in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* m);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback)(_in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback)();
			typedef EarthView::World::Graphic::CMovableObject*  ( _stdcall EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback)(_in char*& name, _in char*& typeName);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback)(_in char*& name, _in char*& typeName);
			typedef void*  ( _stdcall EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback)(_in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* m);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback)(_in char*& name, _in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* m);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback)(_in char*& typeName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback)(_in ev_uint32 vmask);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback)(_in ev_bool find);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback)(_in ev_bool n);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback)(_in ev_bool n);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback)(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback)(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback)(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback)(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback)(_in ev_bool suppress);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback)();
			typedef const EarthView::World::Graphic::CPass*  ( _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback)(_in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed, _in ev_bool shadowDerivation);
			typedef const EarthView::World::Graphic::CPass*  ( _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback)(_in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed);
			typedef const EarthView::World::Graphic::CPass*  ( _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback)(_in const EarthView::World::Graphic::CPass* pass);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback)(_in ev_uint16 mask);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback)(_in ev_bool suppress);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback)(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback)(_in ev_bool rel);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback)(_in Real latitude, _in Real lontitude, _in ev_real32 targetSamplesPerDegrees);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback)(_in Real latitude, _in Real lontitude);
			typedef Real  ( _stdcall EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback)(_in Real latitude, _in Real lontitude);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback)(_in ev_int32 level, _in ev_uint32 row, _in ev_uint32 col, _inout Real& minX, _inout Real& maxX, _inout Real& minY, _inout Real& maxY);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback)(_in EarthView::World::Spatial::Atlas::ILayer* layer);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback)(_in EarthView::World::Spatial::Atlas::ILayer* layer);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback)(_in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback)(_in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup, _in Real minX, _in Real maxX, _in Real minY, _in Real maxY);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback)(_in ev_bool bUpdateVectorTexture, _in ev_bool bUpdateKmlTexture, _in ev_bool bUpdateTemporaryTexture, _in ev_bool bUpdateTerrain);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback)(_in ev_bool enable);
			class CSceneManagerProxy : public EarthView::World::Graphic::CSceneManager
			{
			private:
				EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback* m_EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback;
				EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback* m_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback;
				EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback* m_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback;
				EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback* m_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback;
				EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback* m_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback;
				EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback* m_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback;
				EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback* m_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback;
				EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback* m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback;
				EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback* m_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback;
				EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback* m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback;
				EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback* m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback;
				EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback* m_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback;
				EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback* m_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback;
				EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback* m_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback;
				EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback* m_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback;
				EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback;
				EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback* m_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback;
				EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback* m_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback;
				EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback* m_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback;
				EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback* m_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback;
				EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback* m_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback;
				EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback* m_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback;
				EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback* m_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback;
				EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback* m_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback;
				EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback* m_EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback;
				EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback* m_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback;
				EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback* m_EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback;
				EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback* m_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback;
				EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback* m_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback;
				EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback* m_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback;
				EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback* m_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback;
				EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback;
				EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback* m_EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback;
				EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback* m_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback;
				EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback* m_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback* m_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback* m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback;
				EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback* m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback;
				EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback;
				EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback* m_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback* m_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback;
				EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback* m_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback;
				EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback* m_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback;
				EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback* m_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback;
				EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback* m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback* m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback;
				EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback* m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback;
				EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback* m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback;
				EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback;
				EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback* m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback;
				EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback* m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback;
				EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback;
				EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback;
				EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback* m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback;
				EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback;
				EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback* m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback;
				EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback* m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback;
				EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback* m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback;
				EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback* m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback;
				EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback;
				EarthView_World_Graphic_CSceneManager_clearScene_void_Callback* m_EarthView_World_Graphic_CSceneManager_clearScene_void_Callback;
				EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback* m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback;
				EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback* m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback;
				EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback* m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback;
				EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback* m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback;
				EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback* m_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback;
				EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback* m_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback;
				EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback* m_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback;
				EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback* m_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback;
				EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback* m_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback;
				EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback* m_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback;
				EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback* m_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback;
				EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback* m_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback;
				EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback* m_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback;
				EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback* m_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback;
				EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback* m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback;
				EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback* m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback;
				EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback;
				EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback* m_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback;
				EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback* m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback;
				EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback* m_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback;
				EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback* m_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback;
				EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback* m_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback;
				EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback* m_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback;
				EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback* m_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback;
				EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback* m_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback;
				EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback* m_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback;
				EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback* m_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback;
				EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback* m_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback;
				EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback* m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback;
				EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback* m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback;
				EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback* m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback;
				EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback* m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback;
				EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback* m_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback;
				EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback* m_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback;
				EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback* m_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback;
				EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback* m_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback;
				EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback* m_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback;
				EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback* m_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback;
				EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback* m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback;
				EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback;
				EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback;
				EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback;
				EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback* m_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback;
				EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback* m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback;
				EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback* m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback;
				EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback* m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback* m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback;
				EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback* m_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback;
				EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback* m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback;
				EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback* m_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback;
				EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback* m_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback;
				EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback* m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback;
				EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback* m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback;
				EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback* m_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback;
				EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* m_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback;
				EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback* m_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback;
				EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback* m_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback;
				EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback* m_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback;
				EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback* m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback;
				EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback* m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback;
				EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback* m_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback;
			public:
				CSceneManagerProxy(EarthView::World::Core::CNameValuePairList *pList) : CSceneManager(pList)
				{
					m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_clearScene_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode(EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString(EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_initRenderQueue_void(EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass(EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass(EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass(EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable(EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString(EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool(EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool(EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void(EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void(EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString(EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString(EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t(EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t(EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum(EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera(EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera(EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport(EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport(EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void(EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport(EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void(EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence(EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void(EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList(EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource(EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera(EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void(EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void(EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void(EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList(EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport(EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr(EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool(EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3(EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool(EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void(EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void(EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool(EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext(EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext(EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool(EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera(EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void(EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera(EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect(EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_resetScissor_void(EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList(EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList(EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_resetLightClip_void(EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void(EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16(EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4(EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList(EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram(EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass(EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getTypeName_EVString(EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString(EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString(EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera(EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString(EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void(EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString(EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight(EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16(EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16(EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString(EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight(EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera(EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString(EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight(EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllLights_void(EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString(EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera(EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16(EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4(EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8(EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8(EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool(EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool(EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8(EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool(EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool(EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float(EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float(EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8(EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8(EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat(EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera(EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool(EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real(EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real(EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real(EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real(EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float(EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float(EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void(EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList(EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32(EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList(EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool(EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool(EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool(EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool(EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32(EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList(EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode(EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString(EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString(EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode(EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode(EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString(EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType(EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString(EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity(EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString(EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void(EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString(EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject(EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString(EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject(EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString(EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void(EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool(EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString(EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain(EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString(EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain(EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString(EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void(EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString(EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail(EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString(EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail(EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString(EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void(EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem(EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString(EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem(EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString(EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void(EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_clearScene_void(EarthView_World_Graphic_CSceneManager_clearScene_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_clearScene_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString(EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString(EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr(EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString(EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString(EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr(EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString(EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString(EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr(EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool(EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint(EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void(EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void(EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector(EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector(EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera(EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool(EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void(EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void(EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool(EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera(EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem(EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString(EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString(EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool(EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode(EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters(EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString(EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion(EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real(EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString(EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion(EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8(EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real(EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString(EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool(EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode(EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters(EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString(EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool(EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool(EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode(EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters(EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode(EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue(EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFogStart_Real(EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFogEnd_Real(EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFogDensity_Real(EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32(EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString(EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32(EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet(EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString(EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet(EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString(EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void(EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool(EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool(EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real(EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString(EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString(EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void(EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString(EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString(EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString(EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void(EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4(EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue(EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener(EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener(EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener(EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener(EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8(EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8(EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void(EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode(EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode(EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8(EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8(EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8(EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool(EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool(EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool(EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32(EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox(EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32(EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere(EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32(EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList(EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32(EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay(EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32(EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery(EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery(EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique(EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique(EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool(EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool(EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue(EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue(EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real(EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real(EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real(EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real(EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real(EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real(EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real(EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real(EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real(EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real(EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real(EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t(EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t(EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat(EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig(EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat(EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t(EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat(EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t(EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real(EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real(EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real(EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real(EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool(EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool(EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString(EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString(EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool(EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool(EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr(EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr(EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool(EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool(EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool(EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool(EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain(EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool(EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool(EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain(EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener(EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener(EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener(EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString(EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString(EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry(EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString(EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void(EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString(EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString(EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry(EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString(EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void(EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t(EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString(EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString(EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString(EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager(EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString(EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager(EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void(EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t(EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString(EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity(EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList(EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString(EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList(EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString(EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString(EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject(EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString(EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void(EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString(EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString(EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString(EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject(EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString(EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject(EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString(EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32(EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32(EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool(EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool(EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool(EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool(EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool(EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool(EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList(EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool(EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable(EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool(EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool(EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool(EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass(EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16(EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool(EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool(EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool(EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool(EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32(EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real(EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real(EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real(EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer(EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer(EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool(EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real(EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool(EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool(EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback = pCallback;
				}
				virtual EarthView::World::Graphic::CSceneNode* createSceneNodeImpl()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback();
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createSceneNodeImpl();
				}
				virtual EarthView::World::Graphic::CSceneNode* createSceneNodeImpl(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback(name_Char);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createSceneNodeImpl(name);
				}
				virtual void initRenderQueue()
				{
					if(m_EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback();
					}
					else
						return this->CSceneManager::initRenderQueue();
				}
				virtual const EarthView::World::Graphic::CPass* deriveShadowCasterPass(_in const EarthView::World::Graphic::CPass* pass)
				{
					if(m_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CPass* returnValue = m_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback(pass);
						return returnValue;
					}
					else
						return this->CSceneManager::deriveShadowCasterPass(pass);
				}
				virtual const EarthView::World::Graphic::CPass* deriveShadowReceiverPass(_in const EarthView::World::Graphic::CPass* pass)
				{
					if(m_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CPass* returnValue = m_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback(pass);
						return returnValue;
					}
					else
						return this->CSceneManager::deriveShadowReceiverPass(pass);
				}
				virtual ev_bool validatePassForRendering(_in const EarthView::World::Graphic::CPass* pass)
				{
					if(m_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback(pass);
						return returnValue;
					}
					else
						return this->CSceneManager::validatePassForRendering(pass);
				}
				virtual ev_bool validateRenderableForRendering(_in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CRenderable* rend)
				{
					if(m_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback(pass, rend);
						return returnValue;
					}
					else
						return this->CSceneManager::validateRenderableForRendering(pass, rend);
				}
				virtual EarthView::World::Graphic::CMeshPtr createSkyboxPlane(_in EarthView::World::Graphic::CSceneManager::BoxPlane bp, _in Real distance, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CMeshPtr returnValue = *(EarthView::World::Graphic::CMeshPtr*)m_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback((int)bp, distance, &orientation, groupName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createSkyboxPlane(bp, distance, orientation, groupName);
				}
				virtual EarthView::World::Graphic::CMeshPtr createSkydomePlane(_in EarthView::World::Graphic::CSceneManager::BoxPlane bp, _in Real curvature, _in Real tiling, _in Real distance, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ySegmentsToKeep, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CMeshPtr returnValue = *(EarthView::World::Graphic::CMeshPtr*)m_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback((int)bp, curvature, tiling, distance, &orientation, xsegments, ysegments, ySegmentsToKeep, groupName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createSkydomePlane(bp, curvature, tiling, distance, orientation, xsegments, ysegments, ySegmentsToKeep, groupName);
				}
				virtual void useRenderableViewProjMode(_in const EarthView::World::Graphic::CRenderable* pRend, _in ev_bool fixedFunction)
				{
					if(m_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback(pRend, fixedFunction);
					}
					else
						return this->CSceneManager::useRenderableViewProjMode(pRend, fixedFunction);
				}
				virtual void resetViewProjMode(_in ev_bool fixedFunction)
				{
					if(m_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback(fixedFunction);
					}
					else
						return this->CSceneManager::resetViewProjMode(fixedFunction);
				}
				virtual void firePreRenderQueues()
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback();
					}
					else
						return this->CSceneManager::firePreRenderQueues();
				}
				virtual void firePostRenderQueues()
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback();
					}
					else
						return this->CSceneManager::firePostRenderQueues();
				}
				virtual ev_bool fireRenderQueueStarted(_in ev_uint8 id, _in const EVString& invocation)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* invocation_Char = invocation.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback(id, invocation_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::fireRenderQueueStarted(id, invocation);
				}
				virtual ev_bool fireRenderQueueEnded(_in ev_uint8 id, _in const EVString& invocation)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* invocation_Char = invocation.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback(id, invocation_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::fireRenderQueueEnded(id, invocation);
				}
				virtual void fireRenderSingleObjectStarted(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback(rend, pass, source, pLightList, suppressRenderStateChanges);
					}
					else
						return this->CSceneManager::fireRenderSingleObjectStarted(rend, pass, source, pLightList, suppressRenderStateChanges);
				}
				virtual void fireRenderSingleObjectEnd(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback(rend, pass, source, pLightList, suppressRenderStateChanges);
					}
					else
						return this->CSceneManager::fireRenderSingleObjectEnd(rend, pass, source, pLightList, suppressRenderStateChanges);
				}
				virtual void fireShadowTexturesUpdated(_in ev_size_t numberOfShadowTextures)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback(numberOfShadowTextures);
					}
					else
						return this->CSceneManager::fireShadowTexturesUpdated(numberOfShadowTextures);
				}
				virtual void fireShadowTexturesPreCaster(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_size_t iteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback(light, camera, iteration);
					}
					else
						return this->CSceneManager::fireShadowTexturesPreCaster(light, camera, iteration);
				}
				virtual void fireShadowTexturesPreReceiver(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* f)
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback(light, f);
					}
					else
						return this->CSceneManager::fireShadowTexturesPreReceiver(light, f);
				}
				virtual void firePreUpdateSceneGraph(_in EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback(camera);
					}
					else
						return this->CSceneManager::firePreUpdateSceneGraph(camera);
				}
				virtual void firePostUpdateSceneGraph(_in EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback(camera);
					}
					else
						return this->CSceneManager::firePostUpdateSceneGraph(camera);
				}
				virtual void firePreFindVisibleObjects(_in EarthView::World::Graphic::CViewport* v)
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback(v);
					}
					else
						return this->CSceneManager::firePreFindVisibleObjects(v);
				}
				virtual void firePostFindVisibleObjects(_in EarthView::World::Graphic::CViewport* v)
				{
					if(m_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback(v);
					}
					else
						return this->CSceneManager::firePostFindVisibleObjects(v);
				}
				virtual void fireSceneManagerDestroyed()
				{
					if(m_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback();
					}
					else
						return this->CSceneManager::fireSceneManagerDestroyed();
				}
				virtual void setViewport(_in EarthView::World::Graphic::CViewport* vp)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback(vp);
					}
					else
						return this->CSceneManager::setViewport(vp);
				}
				virtual void renderVisibleObjectsDefaultSequence()
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback();
					}
					else
						return this->CSceneManager::renderVisibleObjectsDefaultSequence();
				}
				virtual void renderVisibleObjectsCustomSequence(_in EarthView::World::Graphic::CRenderQueueInvocationSequence* s)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback(s);
					}
					else
						return this->CSceneManager::renderVisibleObjectsCustomSequence(s);
				}
				virtual void prepareRenderQueue()
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback();
					}
					else
						return this->CSceneManager::prepareRenderQueue();
				}
				virtual void renderSingleObject(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback(rend, pass, lightScissoringClipping, doLightIteration, manualLightList);
					}
					else
						return this->CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration, manualLightList);
				}
				virtual void renderSingleObject(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback(rend, pass, lightScissoringClipping, doLightIteration);
					}
					else
						return this->CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration);
				}
				virtual EarthView::World::Graphic::CAutoParamDataSource* createAutoParamDataSource() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CAutoParamDataSource* returnValue = m_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback();
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createAutoParamDataSource();
				}
				virtual void findLightsAffectingFrustum(_in const EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback(camera);
					}
					else
						return this->CSceneManager::findLightsAffectingFrustum(camera);
				}
				virtual void initShadowVolumeMaterials()
				{
					if(m_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback();
					}
					else
						return this->CSceneManager::initShadowVolumeMaterials();
				}
				virtual void ensureShadowTexturesCreated()
				{
					if(m_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback();
					}
					else
						return this->CSceneManager::ensureShadowTexturesCreated();
				}
				virtual void destroyShadowTextures()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback();
					}
					else
						return this->CSceneManager::destroyShadowTextures();
				}
				virtual void prepareShadowTextures(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Graphic::LightList* lightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback(cam, vp, lightList);
					}
					else
						return this->CSceneManager::prepareShadowTextures(cam, vp, lightList);
				}
				virtual void prepareShadowTextures(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp)
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback(cam, vp);
					}
					else
						return this->CSceneManager::prepareShadowTextures(cam, vp);
				}
				virtual void setImageDefaultMaterial(_in const EarthView::World::Graphic::CMaterialPtr& matPtr)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback(&matPtr);
					}
					else
						return this->CSceneManager::setImageDefaultMaterial(matPtr);
				}
				virtual void setImageUseDefaultMaterial(_in const ev_bool& useDefaultMat)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback(useDefaultMat);
					}
					else
						return this->CSceneManager::setImageUseDefaultMaterial(useDefaultMat);
				}
				virtual EarthView::World::Spatial::Math::CVector3 getSunPosition()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CVector3 returnValue = *(EarthView::World::Spatial::Math::CVector3*)m_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSunPosition();
				}
				virtual void setAtmosphereVisible(_in const ev_bool& visible)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback(visible);
					}
					else
						return this->CSceneManager::setAtmosphereVisible(visible);
				}
				virtual void storeAtmosphereVisibleState()
				{
					if(m_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback();
					}
					else
						return this->CSceneManager::storeAtmosphereVisibleState();
				}
				virtual void restoreAtmosphereVisibleState()
				{
					if(m_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback();
					}
					else
						return this->CSceneManager::restoreAtmosphereVisibleState();
				}
				virtual void setSunVisible(_in ev_bool flag)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback(flag);
					}
					else
						return this->CSceneManager::setSunVisible(flag);
				}
				virtual EarthView::World::Graphic::CSceneManager::RenderContext* _pauseRendering()
				{
					if(m_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneManager::RenderContext* returnValue = m_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::_pauseRendering();
				}
				virtual void _resumeRendering(_in EarthView::World::Graphic::CSceneManager::RenderContext* context)
				{
					if(m_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback(context);
					}
					else
						return this->CSceneManager::_resumeRendering(context);
				}
				virtual void renderShadowVolumesToStencil(_in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* cam, _in ev_bool calcScissor)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback(light, cam, calcScissor);
					}
					else
						return this->CSceneManager::renderShadowVolumesToStencil(light, cam, calcScissor);
				}
				virtual void setShadowVolumeStencilState(_in ev_bool secondpass, _in ev_bool zfail, _in ev_bool twosided)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback(secondpass, zfail, twosided);
					}
					else
						return this->CSceneManager::setShadowVolumeStencilState(secondpass, zfail, twosided);
				}
				virtual const EarthView::World::Graphic::CSceneManager::ShadowCasterList& findShadowCastersForLight(_in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CSceneManager::ShadowCasterList& returnValue = *(EarthView::World::Graphic::CSceneManager::ShadowCasterList*)m_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback(light, camera);
						return returnValue;
					}
					else
						return this->CSceneManager::findShadowCastersForLight(light, camera);
				}
				virtual void renderBasicQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* pGroup, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(pGroup, (int)om);
					}
					else
						return this->CSceneManager::renderBasicQueueGroupObjects(pGroup, om);
				}
				virtual void renderAdditiveStencilShadowedQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderAdditiveStencilShadowedQueueGroupObjects(group, om);
				}
				virtual void renderModulativeStencilShadowedQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderModulativeStencilShadowedQueueGroupObjects(group, om);
				}
				virtual void renderTextureShadowCasterQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderTextureShadowCasterQueueGroupObjects(group, om);
				}
				virtual void renderTextureShadowReceiverQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderTextureShadowReceiverQueueGroupObjects(group, om);
				}
				virtual void renderModulativeTextureShadowedQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderModulativeTextureShadowedQueueGroupObjects(group, om);
				}
				virtual void renderAdditiveTextureShadowedQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::renderAdditiveTextureShadowedQueueGroupObjects(group, om);
				}
				virtual void renderObjects(_in const EarthView::World::Graphic::CQueuedRenderableCollection& objs, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback(&objs, (int)om, lightScissoringClipping, doLightIteration, manualLightList);
					}
					else
						return this->CSceneManager::renderObjects(objs, om, lightScissoringClipping, doLightIteration, manualLightList);
				}
				virtual void renderObjects(_in const EarthView::World::Graphic::CQueuedRenderableCollection& objs, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback(&objs, (int)om, lightScissoringClipping, doLightIteration);
					}
					else
						return this->CSceneManager::renderObjects(objs, om, lightScissoringClipping, doLightIteration);
				}
				virtual void renderTransparentShadowCasterObjects(_in const EarthView::World::Graphic::CQueuedRenderableCollection& objs, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback(&objs, (int)om, lightScissoringClipping, doLightIteration, manualLightList);
					}
					else
						return this->CSceneManager::renderTransparentShadowCasterObjects(objs, om, lightScissoringClipping, doLightIteration, manualLightList);
				}
				virtual void renderTransparentShadowCasterObjects(_in const EarthView::World::Graphic::CQueuedRenderableCollection& objs, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback(&objs, (int)om, lightScissoringClipping, doLightIteration);
					}
					else
						return this->CSceneManager::renderTransparentShadowCasterObjects(objs, om, lightScissoringClipping, doLightIteration);
				}
				virtual void updateRenderQueueSplitOptions()
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback();
					}
					else
						return this->CSceneManager::updateRenderQueueSplitOptions();
				}
				virtual void updateRenderQueueGroupSplitOptions(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in ev_bool suppressShadows, _in ev_bool suppressRenderState)
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback(group, suppressShadows, suppressRenderState);
					}
					else
						return this->CSceneManager::updateRenderQueueGroupSplitOptions(group, suppressShadows, suppressRenderState);
				}
				virtual EarthView::World::Graphic::ClipResult buildAndSetScissor(_in const EarthView::World::Graphic::LightList& ll, _in const EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::ClipResult returnValue = (EarthView::World::Graphic::ClipResult)m_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback(&ll, cam);
						return returnValue;
					}
					else
						return this->CSceneManager::buildAndSetScissor(ll, cam);
				}
				virtual void buildScissor(_in const EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam, _inout EarthView::World::Graphic::RealRect& rect)
				{
					if(m_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback(l, cam, &rect);
					}
					else
						return this->CSceneManager::buildScissor(l, cam, rect);
				}
				virtual void resetScissor()
				{
					if(m_EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback();
					}
					else
						return this->CSceneManager::resetScissor();
				}
				virtual EarthView::World::Graphic::ClipResult buildAndSetLightClip(_in const EarthView::World::Graphic::LightList& ll)
				{
					if(m_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::ClipResult returnValue = (EarthView::World::Graphic::ClipResult)m_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback(&ll);
						return returnValue;
					}
					else
						return this->CSceneManager::buildAndSetLightClip(ll);
				}
				virtual void buildLightClip(_in const EarthView::World::Graphic::CLight* l, _inout EarthView::World::Spatial::Math::PlaneList& planes)
				{
					if(m_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback(l, &planes);
					}
					else
						return this->CSceneManager::buildLightClip(l, planes);
				}
				virtual void resetLightClip()
				{
					if(m_EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback();
					}
					else
						return this->CSceneManager::resetLightClip();
				}
				virtual void checkCachedLightClippingInfo()
				{
					if(m_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback();
					}
					else
						return this->CSceneManager::checkCachedLightClippingInfo();
				}
				virtual void useLights(_in const EarthView::World::Graphic::LightList& lights, _in ev_uint16 limit)
				{
					if(m_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback(&lights, limit);
					}
					else
						return this->CSceneManager::useLights(lights, limit);
				}
				virtual void setViewMatrix(_in const EarthView::World::Spatial::Math::CMatrix4& m)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback(&m);
					}
					else
						return this->CSceneManager::setViewMatrix(m);
				}
				virtual void useLightsGpuProgram(_in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::LightList* lights)
				{
					if(m_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback(pass, lights);
					}
					else
						return this->CSceneManager::useLightsGpuProgram(pass, lights);
				}
				virtual void bindGpuProgram(_in EarthView::World::Graphic::CGpuProgram* prog)
				{
					if(m_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback(prog);
					}
					else
						return this->CSceneManager::bindGpuProgram(prog);
				}
				virtual void updateGpuProgramParameters(_in const EarthView::World::Graphic::CPass* p)
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback(p);
					}
					else
						return this->CSceneManager::updateGpuProgramParameters(p);
				}
				virtual EVString getTypeName() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getTypeName();
				}
				virtual EarthView::World::Graphic::CCamera* createCamera(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CCamera* returnValue = m_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createCamera(name);
				}
				virtual EarthView::World::Graphic::CCamera* getCamera(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CCamera* returnValue = m_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getCamera(name);
				}
				virtual ev_bool hasCamera(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasCamera(name);
				}
				virtual void destroyCamera(_in EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback(cam);
					}
					else
						return this->CSceneManager::destroyCamera(cam);
				}
				virtual void destroyCamera(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyCamera(name);
				}
				virtual void destroyAllCameras()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllCameras();
				}
				virtual EarthView::World::Graphic::CLight* createLight(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CLight* returnValue = m_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createLight(name);
				}
				virtual EarthView::World::Graphic::CLight* createLight()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CLight* returnValue = m_EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createLight();
				}
				virtual ev_uint16 getLightCount() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						ev_uint16 returnValue = m_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getLightCount();
				}
				virtual EarthView::World::Graphic::CLight* getLight(_in ev_uint16 index) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CLight* returnValue = m_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback(index);
						return returnValue;
					}
					else
						return this->CSceneManager::getLight(index);
				}
				virtual EarthView::World::Graphic::CLight* getLight(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CLight* returnValue = m_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getLight(name);
				}
				virtual ev_bool hasLight(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasLight(name);
				}
				virtual const EarthView::World::Spatial::Math::PlaneList& getLightClippingPlanes(_in EarthView::World::Graphic::CLight* l)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::PlaneList& returnValue = *(EarthView::World::Spatial::Math::PlaneList*)m_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback(l);
						return returnValue;
					}
					else
						return this->CSceneManager::getLightClippingPlanes(l);
				}
				virtual const EarthView::World::Graphic::RealRect& getLightScissorRect(_in EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::RealRect& returnValue = *(EarthView::World::Graphic::RealRect*)m_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback(l, cam);
						return returnValue;
					}
					else
						return this->CSceneManager::getLightScissorRect(l, cam);
				}
				virtual void destroyLight(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyLight(name);
				}
				virtual void destroyLight(_in EarthView::World::Graphic::CLight* light)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback(light);
					}
					else
						return this->CSceneManager::destroyLight(light);
				}
				virtual void destroyAllLights()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllLights();
				}
				virtual EVString getSoftShadowTexName() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowTexName();
				}
				virtual EarthView::World::Graphic::CCamera* getShadowTexCam() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CCamera* returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowTexCam();
				}
				virtual EarthView::World::Spatial::Math::CMatrix4 getSoftShadowProjMatrix(_in ev_uint16 index) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CMatrix4 returnValue = *(EarthView::World::Spatial::Math::CMatrix4*)m_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback(index);
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowProjMatrix(index);
				}
				virtual EarthView::World::Spatial::Math::CVector4 getCascadeEyeSpaceDepthArray() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CVector4 returnValue = *(EarthView::World::Spatial::Math::CVector4*)m_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getCascadeEyeSpaceDepthArray();
				}
				virtual float getSoftShadowNearClip(_in ev_uint8 index) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						float returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback(index);
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowNearClip(index);
				}
				virtual float getSoftShadowFarClip(_in ev_uint8 index) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						float returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback(index);
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowFarClip(index);
				}
				virtual bool getIsUseSoftShadowFitToCascadesMode() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback != NULL && this->isCustomExtend())
					{
						bool returnValue = m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getIsUseSoftShadowFitToCascadesMode();
				}
				virtual void setIsUseSoftShadowFitToCascadesMode(_in bool flag)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback(flag);
					}
					else
						return this->CSceneManager::setIsUseSoftShadowFitToCascadesMode(flag);
				}
				virtual ev_uint8 getCurrentClipIndex() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getCurrentClipIndex();
				}
				virtual bool getIsUseSoftShadowTechnique() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback != NULL && this->isCustomExtend())
					{
						bool returnValue = m_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getIsUseSoftShadowTechnique();
				}
				virtual void setIsUseSoftShadowTechnique(_in bool flag)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback(flag);
					}
					else
						return this->CSceneManager::setIsUseSoftShadowTechnique(flag);
				}
				virtual float getCascadePartitionsPercent() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback != NULL && this->isCustomExtend())
					{
						float returnValue = m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getCascadePartitionsPercent();
				}
				virtual void setCascadePartitionsPercent(_in float percent)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback(percent);
					}
					else
						return this->CSceneManager::setCascadePartitionsPercent(percent);
				}
				virtual int getCascadePartitionsDistance(_in ev_uint8 index) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						int returnValue = m_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback(index);
						return returnValue;
					}
					else
						return this->CSceneManager::getCascadePartitionsDistance(index);
				}
				virtual void setCascadePartitionsDistance(_in ev_uint8 index, _in ev_uint8 distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback(index, distance);
					}
					else
						return this->CSceneManager::setCascadePartitionsDistance(index, distance);
				}
				virtual EarthView::World::Graphic::PixelFormat getSoftShadowOffsetFormat() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::PixelFormat returnValue = (EarthView::World::Graphic::PixelFormat)m_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowOffsetFormat();
				}
				virtual void checkShadowCasterInFrustum(_in EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback(camera);
					}
					else
						return this->CSceneManager::checkShadowCasterInFrustum(camera);
				}
				virtual bool hasShadowCasterInFrustum() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback != NULL && this->isCustomExtend())
					{
						bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::hasShadowCasterInFrustum();
				}
				virtual Real getSoftShadowLightBleedPower() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowLightBleedPower();
				}
				virtual void setSoftShadowLightBleedPower(_in Real power)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback(power);
					}
					else
						return this->CSceneManager::setSoftShadowLightBleedPower(power);
				}
				virtual Real getSoftShadowDepthOffset() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowDepthOffset();
				}
				virtual void setSoftShadowDepthOffset(_in Real offset)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback(offset);
					}
					else
						return this->CSceneManager::setSoftShadowDepthOffset(offset);
				}
				virtual float getSoftShadowNormalFactor() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback != NULL && this->isCustomExtend())
					{
						float returnValue = m_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSoftShadowNormalFactor();
				}
				virtual void setSoftShadowNormalFactor(_in float factor)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback(factor);
					}
					else
						return this->CSceneManager::setSoftShadowNormalFactor(factor);
				}
				virtual void _notifyLightsDirty()
				{
					if(m_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback();
					}
					else
						return this->CSceneManager::_notifyLightsDirty();
				}
				virtual const EarthView::World::Graphic::LightList& _getLightsAffectingFrustum() const
				{
					if(m_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::LightList& returnValue = *(EarthView::World::Graphic::LightList*)m_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::_getLightsAffectingFrustum();
				}
				virtual void _populateLightList(_in const EarthView::World::Spatial::Math::CVector3& position, _in Real radius, _inout EarthView::World::Graphic::LightList& destList, _in ev_uint32 lightMask)
				{
					if(m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback(&position, radius, &destList, lightMask);
					}
					else
						return this->CSceneManager::_populateLightList(position, radius, destList, lightMask);
				}
				virtual void _populateLightList(_in const EarthView::World::Spatial::Math::CVector3& position, _in Real radius, _inout EarthView::World::Graphic::LightList& destList)
				{
					if(m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback(&position, radius, &destList);
					}
					else
						return this->CSceneManager::_populateLightList(position, radius, destList);
				}
				virtual void showImage(_in ev_bool visible)
				{
					if(m_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback(visible);
					}
					else
						return this->CSceneManager::showImage(visible);
				}
				virtual ev_bool getImageVisible() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getImageVisible();
				}
				virtual void showOcean(_in ev_bool visible)
				{
					if(m_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback(visible);
					}
					else
						return this->CSceneManager::showOcean(visible);
				}
				virtual ev_bool getOceanVisible() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getOceanVisible();
				}
				virtual void _populateLightList(_in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout EarthView::World::Graphic::LightList& destList, _in ev_uint32 lightMask)
				{
					if(m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback(sn, radius, &destList, lightMask);
					}
					else
						return this->CSceneManager::_populateLightList(sn, radius, destList, lightMask);
				}
				virtual void _populateLightList(_in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout EarthView::World::Graphic::LightList& destList)
				{
					if(m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback(sn, radius, &destList);
					}
					else
						return this->CSceneManager::_populateLightList(sn, radius, destList);
				}
				virtual EarthView::World::Graphic::CSceneNode* createSceneNode()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createSceneNode();
				}
				virtual EarthView::World::Graphic::CSceneNode* createSceneNode(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createSceneNode(name);
				}
				virtual void destroySceneNode(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroySceneNode(name);
				}
				virtual void destroySceneNode(_in EarthView::World::Graphic::CSceneNode* sn)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback(sn);
					}
					else
						return this->CSceneManager::destroySceneNode(sn);
				}
				virtual EarthView::World::Graphic::CSceneNode* getRootSceneNode()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getRootSceneNode();
				}
				virtual EarthView::World::Graphic::CSceneNode* getSceneNode(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getSceneNode(name);
				}
				virtual ev_bool hasSceneNode(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasSceneNode(name);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EVString& meshName, _in const EarthView::World::Core::IntVector& subentityIndics, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback(entityName_Char, meshName_Char, &subentityIndics, groupName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, meshName, subentityIndics, groupName);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EVString& meshName, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback(entityName_Char, meshName_Char, groupName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, meshName, groupName);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EVString& meshName, _in const EarthView::World::Core::IntVector& subentityIndics)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback(entityName_Char, meshName_Char, &subentityIndics);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, meshName, subentityIndics);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EVString& meshName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback(entityName_Char, meshName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, meshName);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EarthView::World::Graphic::CMeshPtr& pMesh, _in const EarthView::World::Core::IntVector& subentityIndics)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback(entityName_Char, &pMesh, &subentityIndics);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, pMesh, subentityIndics);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in const EarthView::World::Graphic::CMeshPtr& pMesh)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback(entityName_Char, &pMesh);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, pMesh);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EarthView::World::Graphic::CMeshPtr& pMesh, _in const EarthView::World::Core::IntVector& subentityIndics)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback(&pMesh, &subentityIndics);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(pMesh, subentityIndics);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EarthView::World::Graphic::CMeshPtr& pMesh)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback(&pMesh);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(pMesh);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& meshName, _in const EarthView::World::Core::IntVector& subentityIndics)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback != NULL && this->isCustomExtend())
					{
						char* meshName_Char = meshName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback(meshName_Char, &subentityIndics);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(meshName, subentityIndics);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& meshName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* meshName_Char = meshName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback(meshName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(meshName);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in const EVString& entityName, _in EarthView::World::Graphic::CSceneManager::PrefabType ptype)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback != NULL && this->isCustomExtend())
					{
						char* entityName_Char = entityName.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback(entityName_Char, (int)ptype);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(entityName, ptype);
				}
				virtual EarthView::World::Graphic::CEntity* createEntity(_in EarthView::World::Graphic::CSceneManager::PrefabType ptype)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback((int)ptype);
						return returnValue;
					}
					else
						return this->CSceneManager::createEntity(ptype);
				}
				virtual EarthView::World::Graphic::CEntity* getEntity(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getEntity(name);
				}
				virtual ev_bool hasEntity(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasEntity(name);
				}
				virtual void destroyEntity(_in EarthView::World::Graphic::CEntity* ent)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback(ent);
					}
					else
						return this->CSceneManager::destroyEntity(ent);
				}
				virtual void destroyEntity(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyEntity(name);
				}
				virtual void destroyAllEntities()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllEntities();
				}
				virtual EarthView::World::Graphic::CManualObject* createManualObject(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CManualObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createManualObject(name);
				}
				virtual EarthView::World::Graphic::CManualObject* createManualObject()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CManualObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createManualObject();
				}
				virtual EarthView::World::Graphic::CManualObject* getManualObject(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CManualObject* returnValue = m_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getManualObject(name);
				}
				virtual ev_bool hasManualObject(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasManualObject(name);
				}
				virtual void destroyManualObject(_in EarthView::World::Graphic::CManualObject* obj)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback(obj);
					}
					else
						return this->CSceneManager::destroyManualObject(obj);
				}
				virtual void destroyManualObject(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyManualObject(name);
				}
				virtual void destroyAllManualObjects()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllManualObjects();
				}
				virtual ev_bool usingWebMercator() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::usingWebMercator();
				}
				virtual EarthView::World::Graphic::CBillboardChain* createBillboardChain(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CBillboardChain* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardChain(name);
				}
				virtual EarthView::World::Graphic::CBillboardChain* createBillboardChain()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CBillboardChain* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardChain();
				}
				virtual EarthView::World::Graphic::CBillboardChain* getBillboardChain(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CBillboardChain* returnValue = m_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getBillboardChain(name);
				}
				virtual ev_bool hasBillboardChain(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasBillboardChain(name);
				}
				virtual void destroyBillboardChain(_in EarthView::World::Graphic::CBillboardChain* obj)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback(obj);
					}
					else
						return this->CSceneManager::destroyBillboardChain(obj);
				}
				virtual void destroyBillboardChain(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyBillboardChain(name);
				}
				virtual void destroyAllBillboardChains()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllBillboardChains();
				}
				virtual EarthView::World::Graphic::CRibbonTrail* createRibbonTrail(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CRibbonTrail* returnValue = m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createRibbonTrail(name);
				}
				virtual EarthView::World::Graphic::CRibbonTrail* createRibbonTrail()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CRibbonTrail* returnValue = m_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createRibbonTrail();
				}
				virtual EarthView::World::Graphic::CRibbonTrail* getRibbonTrail(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CRibbonTrail* returnValue = m_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getRibbonTrail(name);
				}
				virtual ev_bool hasRibbonTrail(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasRibbonTrail(name);
				}
				virtual void destroyRibbonTrail(_in EarthView::World::Graphic::CRibbonTrail* obj)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback(obj);
					}
					else
						return this->CSceneManager::destroyRibbonTrail(obj);
				}
				virtual void destroyRibbonTrail(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyRibbonTrail(name);
				}
				virtual void destroyAllRibbonTrails()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllRibbonTrails();
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in const EVString& name, _in const EVString& templateName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* templateName_Char = templateName.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback(name_Char, templateName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(name, templateName);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in const EVString& name, _in ev_size_t quota, _in const EVString& resourceGroup)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* resourceGroup_Char = resourceGroup.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback(name_Char, quota, resourceGroup_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(name, quota, resourceGroup);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in const EVString& name, _in ev_size_t quota)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback(name_Char, quota);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(name, quota);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(name);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in ev_size_t quota, _in const EVString& resourceGroup)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* resourceGroup_Char = resourceGroup.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback(quota, resourceGroup_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(quota, resourceGroup);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem(_in ev_size_t quota)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback(quota);
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem(quota);
				}
				virtual EarthView::World::Graphic::CParticleSystem* createParticleSystem()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createParticleSystem();
				}
				virtual EarthView::World::Graphic::CParticleSystem* getParticleSystem(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CParticleSystem* returnValue = m_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getParticleSystem(name);
				}
				virtual ev_bool hasParticleSystem(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasParticleSystem(name);
				}
				virtual void destroyParticleSystem(_in EarthView::World::Graphic::CParticleSystem* obj)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback(obj);
					}
					else
						return this->CSceneManager::destroyParticleSystem(obj);
				}
				virtual void destroyParticleSystem(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyParticleSystem(name);
				}
				virtual void destroyAllParticleSystems()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllParticleSystems();
				}
				virtual void clearScene()
				{
					if(m_EarthView_World_Graphic_CSceneManager_clearScene_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_clearScene_void_Callback();
					}
					else
						return this->CSceneManager::clearScene();
				}
				virtual void prepareWorldGeometry(_in const EVString& filename)
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* filename_Char = filename.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback(filename_Char);
					}
					else
						return this->CSceneManager::prepareWorldGeometry(filename);
				}
				virtual void prepareWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback(&stream, typeName_Char);
					}
					else
						return this->CSceneManager::prepareWorldGeometry(stream, typeName);
				}
				virtual void prepareWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream)
				{
					if(m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback(&stream);
					}
					else
						return this->CSceneManager::prepareWorldGeometry(stream);
				}
				virtual void setWorldGeometry(_in const EVString& filename)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* filename_Char = filename.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback(filename_Char);
					}
					else
						return this->CSceneManager::setWorldGeometry(filename);
				}
				virtual void setWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback(&stream, typeName_Char);
					}
					else
						return this->CSceneManager::setWorldGeometry(stream, typeName);
				}
				virtual void setWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback(&stream);
					}
					else
						return this->CSceneManager::setWorldGeometry(stream);
				}
				virtual ev_size_t estimateWorldGeometry(_in const EVString& filename)
				{
					if(m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* filename_Char = filename.makeBuffer();
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback(filename_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::estimateWorldGeometry(filename);
				}
				virtual ev_size_t estimateWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback(&stream, typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::estimateWorldGeometry(stream, typeName);
				}
				virtual ev_size_t estimateWorldGeometry(_inout EarthView::World::Core::DataStreamPtr& stream)
				{
					if(m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback != NULL && this->isCustomExtend())
					{
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback(&stream);
						return returnValue;
					}
					else
						return this->CSceneManager::estimateWorldGeometry(stream);
				}
				virtual EarthView::World::Graphic::ViewPoint getSuggestedViewpoint(_in ev_bool random)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::ViewPoint returnValue = *(EarthView::World::Graphic::ViewPoint*)m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback(random);
						return returnValue;
					}
					else
						return this->CSceneManager::getSuggestedViewpoint(random);
				}
				virtual EarthView::World::Graphic::ViewPoint getSuggestedViewpoint()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::ViewPoint returnValue = *(EarthView::World::Graphic::ViewPoint*)m_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSuggestedViewpoint();
				}
				virtual ev_bool setOption(_in const EVString& strKey, _in const void* pValue)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						char* strKey_Char = strKey.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback(strKey_Char, pValue);
						return returnValue;
					}
					else
						return this->CSceneManager::setOption(strKey, pValue);
				}
				virtual ev_bool getOption(_in const EVString& strKey, _in void* pDestValue)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						char* strKey_Char = strKey.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback(strKey_Char, pDestValue);
						return returnValue;
					}
					else
						return this->CSceneManager::getOption(strKey, pDestValue);
				}
				virtual ev_bool hasOption(_in const EVString& strKey) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* strKey_Char = strKey.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback(strKey_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasOption(strKey);
				}
				virtual ev_bool getOptionValues(_in const EVString& strKey, _inout EarthView::World::Core::StringVector& refValueList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback != NULL && this->isCustomExtend())
					{
						char* strKey_Char = strKey.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback(strKey_Char, &refValueList);
						return returnValue;
					}
					else
						return this->CSceneManager::getOptionValues(strKey, refValueList);
				}
				virtual ev_bool getOptionKeys(_inout EarthView::World::Core::StringVector& refKeys)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback(&refKeys);
						return returnValue;
					}
					else
						return this->CSceneManager::getOptionKeys(refKeys);
				}
				virtual void _updateSceneGraph(_in EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback(cam);
					}
					else
						return this->CSceneManager::_updateSceneGraph(cam);
				}
				virtual void _findVisibleObjects(_in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::VisibleObjectsBoundsInfo* visibleBounds, _in ev_bool onlyShadowCasters)
				{
					if(m_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback(cam, visibleBounds, onlyShadowCasters);
					}
					else
						return this->CSceneManager::_findVisibleObjects(cam, visibleBounds, onlyShadowCasters);
				}
				virtual void _applySceneAnimations()
				{
					if(m_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback();
					}
					else
						return this->CSceneManager::_applySceneAnimations();
				}
				virtual void _renderVisibleObjects()
				{
					if(m_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback();
					}
					else
						return this->CSceneManager::_renderVisibleObjects();
				}
				virtual void _renderScene(_in EarthView::World::Graphic::CCamera* camera, _in EarthView::World::Graphic::CViewport* vp, _in ev_bool includeOverlays)
				{
					if(m_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback(camera, vp, includeOverlays);
					}
					else
						return this->CSceneManager::_renderScene(camera, vp, includeOverlays);
				}
				virtual void _queueSkiesForRendering(_in EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback(cam);
					}
					else
						return this->CSceneManager::_queueSkiesForRendering(cam);
				}
				virtual void _setDestinationRenderSystem(_in EarthView::World::Graphic::CRenderSystem* ref_sys)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback(ref_sys);
					}
					else
						return this->CSceneManager::_setDestinationRenderSystem(ref_sys);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback(enable, &plane, materialName_Char, scale, tiling, drawFirst, bow, xsegments, ysegments, groupName_Char);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling, drawFirst, bow, xsegments, ysegments, groupName);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback(enable, &plane, materialName_Char, scale, tiling, drawFirst, bow, xsegments, ysegments);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling, drawFirst, bow, xsegments, ysegments);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback(enable, &plane, materialName_Char, scale, tiling, drawFirst, bow, xsegments);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling, drawFirst, bow, xsegments);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback(enable, &plane, materialName_Char, scale, tiling, drawFirst, bow);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling, drawFirst, bow);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback(enable, &plane, materialName_Char, scale, tiling, drawFirst);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling, drawFirst);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback(enable, &plane, materialName_Char, scale, tiling);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale, tiling);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback(enable, &plane, materialName_Char, scale);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName, scale);
				}
				virtual void setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback(enable, &plane, materialName_Char);
					}
					else
						return this->CSceneManager::setSkyPlane(enable, plane, materialName);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback(enable, &plane, materialName_Char, scale, tiling, renderQueue, bow, xsegments, ysegments, groupName_Char);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling, renderQueue, bow, xsegments, ysegments, groupName);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback(enable, &plane, materialName_Char, scale, tiling, renderQueue, bow, xsegments, ysegments);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling, renderQueue, bow, xsegments, ysegments);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback(enable, &plane, materialName_Char, scale, tiling, renderQueue, bow, xsegments);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling, renderQueue, bow, xsegments);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback(enable, &plane, materialName_Char, scale, tiling, renderQueue, bow);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling, renderQueue, bow);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback(enable, &plane, materialName_Char, scale, tiling, renderQueue);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling, renderQueue);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale, _in Real tiling)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback(enable, &plane, materialName_Char, scale, tiling);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale, tiling);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName, _in Real scale)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback(enable, &plane, materialName_Char, scale);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName, scale);
				}
				virtual void _setSkyPlane(_in ev_bool enable, _in const EarthView::World::Spatial::Math::CPlane& plane, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback(enable, &plane, materialName_Char);
					}
					else
						return this->CSceneManager::_setSkyPlane(enable, plane, materialName);
				}
				virtual void setSkyPlaneEnabled(_in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback(enable);
					}
					else
						return this->CSceneManager::setSkyPlaneEnabled(enable);
				}
				virtual ev_bool isSkyPlaneEnabled() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isSkyPlaneEnabled();
				}
				virtual EarthView::World::Graphic::CSceneNode* getSkyPlaneNode() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyPlaneNode();
				}
				virtual const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters& getSkyPlaneGenParameters() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters& returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyPlaneGenParameters();
				}
				virtual void setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback(enable, materialName_Char, distance, drawFirst, &orientation, groupName_Char);
					}
					else
						return this->CSceneManager::setSkyBox(enable, materialName, distance, drawFirst, orientation, groupName);
				}
				virtual void setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback(enable, materialName_Char, distance, drawFirst, &orientation);
					}
					else
						return this->CSceneManager::setSkyBox(enable, materialName, distance, drawFirst, orientation);
				}
				virtual void setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_bool drawFirst)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback(enable, materialName_Char, distance, drawFirst);
					}
					else
						return this->CSceneManager::setSkyBox(enable, materialName, distance, drawFirst);
				}
				virtual void setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback(enable, materialName_Char, distance);
					}
					else
						return this->CSceneManager::setSkyBox(enable, materialName, distance);
				}
				virtual void setSkyBox(_in ev_bool enable, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback(enable, materialName_Char);
					}
					else
						return this->CSceneManager::setSkyBox(enable, materialName);
				}
				virtual void _setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback(enable, materialName_Char, distance, renderQueue, &orientation, groupName_Char);
					}
					else
						return this->CSceneManager::_setSkyBox(enable, materialName, distance, renderQueue, orientation, groupName);
				}
				virtual void _setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback(enable, materialName_Char, distance, renderQueue, &orientation);
					}
					else
						return this->CSceneManager::_setSkyBox(enable, materialName, distance, renderQueue, orientation);
				}
				virtual void _setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance, _in ev_uint8 renderQueue)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback(enable, materialName_Char, distance, renderQueue);
					}
					else
						return this->CSceneManager::_setSkyBox(enable, materialName, distance, renderQueue);
				}
				virtual void _setSkyBox(_in ev_bool enable, _in const EVString& materialName, _in Real distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback(enable, materialName_Char, distance);
					}
					else
						return this->CSceneManager::_setSkyBox(enable, materialName, distance);
				}
				virtual void _setSkyBox(_in ev_bool enable, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback(enable, materialName_Char);
					}
					else
						return this->CSceneManager::_setSkyBox(enable, materialName);
				}
				virtual void setSkyBoxEnabled(_in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback(enable);
					}
					else
						return this->CSceneManager::setSkyBoxEnabled(enable);
				}
				virtual ev_bool isSkyBoxEnabled() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isSkyBoxEnabled();
				}
				virtual EarthView::World::Graphic::CSceneNode* getSkyBoxNode() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyBoxNode();
				}
				virtual const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters& getSkyBoxGenParameters() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters& returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyBoxGenParameters();
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst, &orientation, xsegments, ysegments, ysegments_keep, groupName_Char);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst, orientation, xsegments, ysegments, ysegments_keep, groupName);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst, &orientation, xsegments, ysegments, ysegments_keep);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst, orientation, xsegments, ysegments, ysegments_keep);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst, &orientation, xsegments, ysegments);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst, orientation, xsegments, ysegments);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst, &orientation, xsegments);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst, orientation, xsegments);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const EarthView::World::Spatial::Math::CQuaternion& orientation)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst, &orientation);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst, orientation);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback(enable, materialName_Char, curvature, tiling, distance, drawFirst);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance, drawFirst);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback(enable, materialName_Char, curvature, tiling, distance);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling, distance);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback(enable, materialName_Char, curvature, tiling);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature, tiling);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback(enable, materialName_Char, curvature);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName, curvature);
				}
				virtual void setSkyDome(_in ev_bool enable, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback(enable, materialName_Char);
					}
					else
						return this->CSceneManager::setSkyDome(enable, materialName);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue, &orientation, xsegments, ysegments, ysegments_keep, groupName_Char);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue, orientation, xsegments, ysegments, ysegments_keep, groupName);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue, &orientation, xsegments, ysegments, ysegments_keep);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue, orientation, xsegments, ysegments, ysegments_keep);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments, _in ev_int32 ysegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue, &orientation, xsegments, ysegments);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue, orientation, xsegments, ysegments);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation, _in ev_int32 xsegments)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue, &orientation, xsegments);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue, orientation, xsegments);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const EarthView::World::Spatial::Math::CQuaternion& orientation)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue, &orientation);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue, orientation);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback(enable, materialName_Char, curvature, tiling, distance, renderQueue);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance, renderQueue);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling, _in Real distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback(enable, materialName_Char, curvature, tiling, distance);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling, distance);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature, _in Real tiling)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback(enable, materialName_Char, curvature, tiling);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature, tiling);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName, _in Real curvature)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback(enable, materialName_Char, curvature);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName, curvature);
				}
				virtual void _setSkyDome(_in ev_bool enable, _in const EVString& materialName)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback(enable, materialName_Char);
					}
					else
						return this->CSceneManager::_setSkyDome(enable, materialName);
				}
				virtual void setSkyDomeEnabled(_in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback(enable);
					}
					else
						return this->CSceneManager::setSkyDomeEnabled(enable);
				}
				virtual ev_bool isSkyDomeEnabled() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isSkyDomeEnabled();
				}
				virtual EarthView::World::Graphic::CSceneNode* getSkyDomeNode() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyDomeNode();
				}
				virtual const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters& getSkyDomeGenParameters() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters& returnValue = m_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSkyDomeGenParameters();
				}
				virtual EarthView::World::Graphic::FogMode getFogMode() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::FogMode returnValue = (EarthView::World::Graphic::FogMode)m_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFogMode();
				}
				virtual const EarthView::World::Graphic::CColourValue& getFogColour() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CColourValue& returnValue = *(EarthView::World::Graphic::CColourValue*)m_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFogColour();
				}
				virtual Real getFogStart() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFogStart();
				}
				virtual Real getFogEnd() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFogEnd();
				}
				virtual Real getFogDensity() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFogDensity();
				}
				virtual EarthView::World::Graphic::CBillboardSet* createBillboardSet(_in const EVString& name, _in ev_uint32 poolSize)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CBillboardSet* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback(name_Char, poolSize);
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardSet(name, poolSize);
				}
				virtual EarthView::World::Graphic::CBillboardSet* createBillboardSet(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CBillboardSet* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardSet(name);
				}
				virtual EarthView::World::Graphic::CBillboardSet* createBillboardSet(_in ev_uint32 poolSize)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CBillboardSet* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback(poolSize);
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardSet(poolSize);
				}
				virtual EarthView::World::Graphic::CBillboardSet* createBillboardSet()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CBillboardSet* returnValue = m_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::createBillboardSet();
				}
				virtual EarthView::World::Graphic::CBillboardSet* getBillboardSet(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CBillboardSet* returnValue = m_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getBillboardSet(name);
				}
				virtual ev_bool hasBillboardSet(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasBillboardSet(name);
				}
				virtual void destroyBillboardSet(_in EarthView::World::Graphic::CBillboardSet* set)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback(set);
					}
					else
						return this->CSceneManager::destroyBillboardSet(set);
				}
				virtual void destroyBillboardSet(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyBillboardSet(name);
				}
				virtual void destroyAllBillboardSets()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllBillboardSets();
				}
				virtual void setDisplaySceneNodes(_in ev_bool display)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback(display);
					}
					else
						return this->CSceneManager::setDisplaySceneNodes(display);
				}
				virtual ev_bool getDisplaySceneNodes() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getDisplaySceneNodes();
				}
				virtual EarthView::World::Graphic::CAnimation* createAnimation(_in const EVString& name, _in Real length)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CAnimation* returnValue = m_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback(name_Char, length);
						return returnValue;
					}
					else
						return this->CSceneManager::createAnimation(name, length);
				}
				virtual EarthView::World::Graphic::CAnimation* getAnimation(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CAnimation* returnValue = m_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getAnimation(name);
				}
				virtual ev_bool hasAnimation(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasAnimation(name);
				}
				virtual void destroyAnimation(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyAnimation(name);
				}
				virtual void destroyAllAnimations()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllAnimations();
				}
				virtual EarthView::World::Graphic::CAnimationState* createAnimationState(_in const EVString& animName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* animName_Char = animName.makeBuffer();
						EarthView::World::Graphic::CAnimationState* returnValue = m_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback(animName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createAnimationState(animName);
				}
				virtual EarthView::World::Graphic::CAnimationState* getAnimationState(_in const EVString& animName) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* animName_Char = animName.makeBuffer();
						EarthView::World::Graphic::CAnimationState* returnValue = m_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback(animName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getAnimationState(animName);
				}
				virtual ev_bool hasAnimationState(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasAnimationState(name);
				}
				virtual void destroyAnimationState(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyAnimationState(name);
				}
				virtual void destroyAllAnimationStates()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllAnimationStates();
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& worldMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix, _in ev_bool doBeginEndFrame)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback(rend, pass, vp, &worldMatrix, &viewMatrix, &projMatrix, doBeginEndFrame);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, worldMatrix, viewMatrix, projMatrix, doBeginEndFrame);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& worldMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback(rend, pass, vp, &worldMatrix, &viewMatrix, &projMatrix);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, worldMatrix, viewMatrix, projMatrix);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback(rend, pass, vp, &viewMatrix, &projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration, manualLightList);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, viewMatrix, projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration, manualLightList);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback(rend, pass, vp, &viewMatrix, &projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, viewMatrix, projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback(rend, pass, vp, &viewMatrix, &projMatrix, doBeginEndFrame, lightScissoringClipping);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, viewMatrix, projMatrix, doBeginEndFrame, lightScissoringClipping);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix, _in ev_bool doBeginEndFrame)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback(rend, pass, vp, &viewMatrix, &projMatrix, doBeginEndFrame);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, viewMatrix, projMatrix, doBeginEndFrame);
				}
				virtual void manualRender(_in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Spatial::Math::CMatrix4& viewMatrix, _in const EarthView::World::Spatial::Math::CMatrix4& projMatrix)
				{
					if(m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback(rend, pass, vp, &viewMatrix, &projMatrix);
					}
					else
						return this->CSceneManager::manualRender(rend, pass, vp, viewMatrix, projMatrix);
				}
				virtual EarthView::World::Graphic::CRenderQueue* getRenderQueue()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CRenderQueue* returnValue = m_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getRenderQueue();
				}
				virtual void addRenderQueueListener(_in EarthView::World::Graphic::CRenderQueueListener* ref_newListener)
				{
					if(m_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback(ref_newListener);
					}
					else
						return this->CSceneManager::addRenderQueueListener(ref_newListener);
				}
				virtual void removeRenderQueueListener(_in EarthView::World::Graphic::CRenderQueueListener* delListener)
				{
					if(m_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback(delListener);
					}
					else
						return this->CSceneManager::removeRenderQueueListener(delListener);
				}
				virtual void addRenderObjectListener(_in EarthView::World::Graphic::CRenderObjectListener* ref_newListener)
				{
					if(m_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback(ref_newListener);
					}
					else
						return this->CSceneManager::addRenderObjectListener(ref_newListener);
				}
				virtual void removeRenderObjectListener(_in EarthView::World::Graphic::CRenderObjectListener* delListener)
				{
					if(m_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback(delListener);
					}
					else
						return this->CSceneManager::removeRenderObjectListener(delListener);
				}
				virtual void addSpecialCaseRenderQueue(_in ev_uint8 qid)
				{
					if(m_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback(qid);
					}
					else
						return this->CSceneManager::addSpecialCaseRenderQueue(qid);
				}
				virtual void removeSpecialCaseRenderQueue(_in ev_uint8 qid)
				{
					if(m_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback(qid);
					}
					else
						return this->CSceneManager::removeSpecialCaseRenderQueue(qid);
				}
				virtual void clearSpecialCaseRenderQueues()
				{
					if(m_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback();
					}
					else
						return this->CSceneManager::clearSpecialCaseRenderQueues();
				}
				virtual void setSpecialCaseRenderQueueMode(_in EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode mode)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback((int)mode);
					}
					else
						return this->CSceneManager::setSpecialCaseRenderQueueMode(mode);
				}
				virtual EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode getSpecialCaseRenderQueueMode()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode returnValue = (EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode)m_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getSpecialCaseRenderQueueMode();
				}
				virtual ev_bool isRenderQueueToBeProcessed(_in ev_uint8 qid)
				{
					if(m_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback(qid);
						return returnValue;
					}
					else
						return this->CSceneManager::isRenderQueueToBeProcessed(qid);
				}
				virtual void setWorldGeometryRenderQueue(_in ev_uint8 qid)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback(qid);
					}
					else
						return this->CSceneManager::setWorldGeometryRenderQueue(qid);
				}
				virtual ev_uint8 getWorldGeometryRenderQueue()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getWorldGeometryRenderQueue();
				}
				virtual void showBoundingBoxes(_in ev_bool bShow)
				{
					if(m_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback(bShow);
					}
					else
						return this->CSceneManager::showBoundingBoxes(bShow);
				}
				virtual ev_bool getShowBoundingBoxes() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShowBoundingBoxes();
				}
				virtual void _notifyAutotrackingSceneNode(_in EarthView::World::Graphic::CSceneNode* node, _in ev_bool autoTrack)
				{
					if(m_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback(node, autoTrack);
					}
					else
						return this->CSceneManager::_notifyAutotrackingSceneNode(node, autoTrack);
				}
				virtual EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* createAABBQuery(_in const EarthView::World::Spatial::Math::CAxisAlignedBox& box, _in ev_uint32 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback(&box, mask);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createAABBQuery(box, mask);
				}
				virtual EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* createAABBQuery(_in const EarthView::World::Spatial::Math::CAxisAlignedBox& box)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback(&box);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createAABBQuery(box);
				}
				virtual EarthView::World::Graphic::CSphereSceneQuery* createSphereQuery(_in const EarthView::World::Spatial::Math::CSphere& sphere, _in ev_uint32 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSphereSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback(&sphere, mask);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createSphereQuery(sphere, mask);
				}
				virtual EarthView::World::Graphic::CSphereSceneQuery* createSphereQuery(_in const EarthView::World::Spatial::Math::CSphere& sphere)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSphereSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback(&sphere);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createSphereQuery(sphere);
				}
				virtual EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* createPlaneBoundedVolumeQuery(_in const EarthView::World::Spatial::Math::PlaneBoundedVolumeList& volumes, _in ev_uint32 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback(&volumes, mask);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createPlaneBoundedVolumeQuery(volumes, mask);
				}
				virtual EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* createPlaneBoundedVolumeQuery(_in const EarthView::World::Spatial::Math::PlaneBoundedVolumeList& volumes)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback(&volumes);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createPlaneBoundedVolumeQuery(volumes);
				}
				virtual EarthView::World::Graphic::CRaySceneQuery* createRayQuery(_in const EarthView::World::Spatial::Math::CRay& ray, _in ev_uint32 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CRaySceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback(&ray, mask);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createRayQuery(ray, mask);
				}
				virtual EarthView::World::Graphic::CRaySceneQuery* createRayQuery(_in const EarthView::World::Spatial::Math::CRay& ray)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CRaySceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback(&ray);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createRayQuery(ray);
				}
				virtual EarthView::World::Graphic::CIntersectionSceneQuery* createIntersectionQuery(_in ev_uint32 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CIntersectionSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback(mask);
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createIntersectionQuery(mask);
				}
				virtual EarthView::World::Graphic::CIntersectionSceneQuery* createIntersectionQuery()
				{
					if(m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CIntersectionSceneQuery* returnValue = m_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback();
						if(returnValue != NULL) {
							((EarthView::World::Core::CBaseObject*)returnValue)->setExternFree(false);
						}
						return returnValue;
					}
					else
						return this->CSceneManager::createIntersectionQuery();
				}
				virtual void destroyQuery(_in EarthView::World::Graphic::CSceneQuery* query)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback(query);
					}
					else
						return this->CSceneManager::destroyQuery(query);
				}
				virtual void setShadowTechnique(_in EarthView::World::Graphic::ShadowTechnique technique)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback((int)technique);
					}
					else
						return this->CSceneManager::setShadowTechnique(technique);
				}
				virtual EarthView::World::Graphic::ShadowTechnique getShadowTechnique() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::ShadowTechnique returnValue = (EarthView::World::Graphic::ShadowTechnique)m_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowTechnique();
				}
				virtual void setShowDebugShadows(_in ev_bool debug)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback(debug);
					}
					else
						return this->CSceneManager::setShowDebugShadows(debug);
				}
				virtual ev_bool getShowDebugShadows() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShowDebugShadows();
				}
				virtual void setShadowColour(_in const EarthView::World::Graphic::CColourValue& colour)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback(&colour);
					}
					else
						return this->CSceneManager::setShadowColour(colour);
				}
				virtual const EarthView::World::Graphic::CColourValue& getShadowColour() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CColourValue& returnValue = *(EarthView::World::Graphic::CColourValue*)m_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowColour();
				}
				virtual void setShadowDirectionalLightExtrusionDistance(_in Real dist)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback(dist);
					}
					else
						return this->CSceneManager::setShadowDirectionalLightExtrusionDistance(dist);
				}
				virtual Real getShadowDirectionalLightExtrusionDistance() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowDirectionalLightExtrusionDistance();
				}
				virtual void setShadowColorRRatio(_in Real rRatio)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback(rRatio);
					}
					else
						return this->CSceneManager::setShadowColorRRatio(rRatio);
				}
				virtual void setShadowColorGRatio(_in Real gRatio)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback(gRatio);
					}
					else
						return this->CSceneManager::setShadowColorGRatio(gRatio);
				}
				virtual void setShadowColorBRatio(_in Real bRatio)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback(bRatio);
					}
					else
						return this->CSceneManager::setShadowColorBRatio(bRatio);
				}
				virtual Real getShadowColorRRatio() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowColorRRatio();
				}
				virtual Real getShadowColorGRatio() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowColorGRatio();
				}
				virtual Real getShadowColorBRatio() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowColorBRatio();
				}
				virtual void setShadowFarDistance(_in Real distance)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback(distance);
					}
					else
						return this->CSceneManager::setShadowFarDistance(distance);
				}
				virtual Real getShadowFarDistance() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowFarDistance();
				}
				virtual Real getShadowFarDistanceSquared() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowFarDistanceSquared();
				}
				virtual void setShadowIndexBufferSize(_in ev_size_t size)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback(size);
					}
					else
						return this->CSceneManager::setShadowIndexBufferSize(size);
				}
				virtual ev_size_t getShadowIndexBufferSize() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowIndexBufferSize();
				}
				virtual void setShadowTextureSize(_in ev_uint16 size)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback(size);
					}
					else
						return this->CSceneManager::setShadowTextureSize(size);
				}
				virtual void setShadowTextureConfig(_in ev_size_t shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in EarthView::World::Graphic::PixelFormat format)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback(shadowIndex, width, height, (int)format);
					}
					else
						return this->CSceneManager::setShadowTextureConfig(shadowIndex, width, height, format);
				}
				virtual void setShadowTextureConfig(_in ev_size_t shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in EarthView::World::Graphic::PixelFormat format, _in ev_uint16 fsaa)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback(shadowIndex, width, height, (int)format, fsaa);
					}
					else
						return this->CSceneManager::setShadowTextureConfig(shadowIndex, width, height, format, fsaa);
				}
				virtual void setShadowTextureConfig(_in ev_size_t shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in EarthView::World::Graphic::PixelFormat format, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback(shadowIndex, width, height, (int)format, fsaa, depthBufferPoolId);
					}
					else
						return this->CSceneManager::setShadowTextureConfig(shadowIndex, width, height, format, fsaa, depthBufferPoolId);
				}
				virtual void setShadowTextureConfig(_in ev_size_t shadowIndex, _in const EarthView::World::Graphic::ShadowTextureConfig& config)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback(shadowIndex, &config);
					}
					else
						return this->CSceneManager::setShadowTextureConfig(shadowIndex, config);
				}
				virtual void setShadowTexturePixelFormat(_in EarthView::World::Graphic::PixelFormat fmt)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback((int)fmt);
					}
					else
						return this->CSceneManager::setShadowTexturePixelFormat(fmt);
				}
				virtual void setShadowTextureFSAA(_in ev_uint16 fsaa)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback(fsaa);
					}
					else
						return this->CSceneManager::setShadowTextureFSAA(fsaa);
				}
				virtual void setShadowTextureCount(_in ev_size_t count)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback(count);
					}
					else
						return this->CSceneManager::setShadowTextureCount(count);
				}
				virtual void setShadowTextureSettings(_in ev_uint16 size, _in ev_uint16 count)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback(size, count);
					}
					else
						return this->CSceneManager::setShadowTextureSettings(size, count);
				}
				virtual void setShadowTextureSettings(_in ev_uint16 size, _in ev_uint16 count, _in EarthView::World::Graphic::PixelFormat fmt)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback(size, count, (int)fmt);
					}
					else
						return this->CSceneManager::setShadowTextureSettings(size, count, fmt);
				}
				virtual void setShadowTextureSettings(_in ev_uint16 size, _in ev_uint16 count, _in EarthView::World::Graphic::PixelFormat fmt, _in ev_uint16 fsaa)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback(size, count, (int)fmt, fsaa);
					}
					else
						return this->CSceneManager::setShadowTextureSettings(size, count, fmt, fsaa);
				}
				virtual void setShadowTextureSettings(_in ev_uint16 size, _in ev_uint16 count, _in EarthView::World::Graphic::PixelFormat fmt, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback(size, count, (int)fmt, fsaa, depthBufferPoolId);
					}
					else
						return this->CSceneManager::setShadowTextureSettings(size, count, fmt, fsaa, depthBufferPoolId);
				}
				virtual const EarthView::World::Graphic::CTexturePtr& getShadowTexture(_in ev_size_t shadowIndex)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CTexturePtr& returnValue = *(EarthView::World::Graphic::CTexturePtr*)m_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback(shadowIndex);
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowTexture(shadowIndex);
				}
				virtual void setShadowDirLightTextureOffset(_in Real offset)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback(offset);
					}
					else
						return this->CSceneManager::setShadowDirLightTextureOffset(offset);
				}
				virtual Real getShadowDirLightTextureOffset() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowDirLightTextureOffset();
				}
				virtual void setShadowTextureFadeStart(_in Real fadeStart)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback(fadeStart);
					}
					else
						return this->CSceneManager::setShadowTextureFadeStart(fadeStart);
				}
				virtual void setShadowTextureFadeEnd(_in Real fadeEnd)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback(fadeEnd);
					}
					else
						return this->CSceneManager::setShadowTextureFadeEnd(fadeEnd);
				}
				virtual void setShadowTextureSelfShadow(_in ev_bool selfShadow)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback(selfShadow);
					}
					else
						return this->CSceneManager::setShadowTextureSelfShadow(selfShadow);
				}
				virtual ev_bool getShadowTextureSelfShadow() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowTextureSelfShadow();
				}
				virtual void setShadowTextureCasterMaterial(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::setShadowTextureCasterMaterial(name);
				}
				virtual void setShadowTextureReceiverMaterial(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::setShadowTextureReceiverMaterial(name);
				}
				virtual void setShadowCasterRenderBackFaces(_in ev_bool bf)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback(bf);
					}
					else
						return this->CSceneManager::setShadowCasterRenderBackFaces(bf);
				}
				virtual ev_bool getShadowCasterRenderBackFaces() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowCasterRenderBackFaces();
				}
				virtual void setShadowCameraSetup(_in const EarthView::World::Graphic::ShadowCameraSetupPtr& shadowSetup)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback(&shadowSetup);
					}
					else
						return this->CSceneManager::setShadowCameraSetup(shadowSetup);
				}
				virtual const EarthView::World::Graphic::ShadowCameraSetupPtr& getShadowCameraSetup() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::ShadowCameraSetupPtr& returnValue = *(EarthView::World::Graphic::ShadowCameraSetupPtr*)m_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowCameraSetup();
				}
				virtual void setShadowUseInfiniteFarPlane(_in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback(enable);
					}
					else
						return this->CSceneManager::setShadowUseInfiniteFarPlane(enable);
				}
				virtual ev_bool isShadowTechniqueStencilBased() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueStencilBased();
				}
				virtual ev_bool isShadowTechniqueTextureBased() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueTextureBased();
				}
				virtual ev_bool isShadowTechniqueModulative() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueModulative();
				}
				virtual ev_bool isShadowTechniqueAdditive() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueAdditive();
				}
				virtual ev_bool isShadowTechniqueIntegrated() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueIntegrated();
				}
				virtual ev_bool isShadowTechniqueInUse() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isShadowTechniqueInUse();
				}
				virtual void setShadowUseLightClipPlanes(_in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback(enabled);
					}
					else
						return this->CSceneManager::setShadowUseLightClipPlanes(enabled);
				}
				virtual ev_bool getShadowUseLightClipPlanes() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getShadowUseLightClipPlanes();
				}
				virtual void _setActiveCompositorChain(_in EarthView::World::Graphic::CCompositorChain* chain)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback(chain);
					}
					else
						return this->CSceneManager::_setActiveCompositorChain(chain);
				}
				virtual void setLateMaterialResolving(_in ev_bool isLate)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback(isLate);
					}
					else
						return this->CSceneManager::setLateMaterialResolving(isLate);
				}
				virtual ev_bool isLateMaterialResolving() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::isLateMaterialResolving();
				}
				virtual EarthView::World::Graphic::CCompositorChain* _getActiveCompositorChain() const
				{
					if(m_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CCompositorChain* returnValue = m_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::_getActiveCompositorChain();
				}
				virtual void addListener(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ref_s)
				{
					if(m_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback(ref_s);
					}
					else
						return this->CSceneManager::addListener(ref_s);
				}
				virtual void removeListener(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s)
				{
					if(m_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback(s);
					}
					else
						return this->CSceneManager::removeListener(s);
				}
				virtual ev_bool existListener(_in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s)
				{
					if(m_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback(s);
						return returnValue;
					}
					else
						return this->CSceneManager::existListener(s);
				}
				virtual EarthView::World::Graphic::CStaticGeometry* createStaticGeometry(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CStaticGeometry* returnValue = m_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createStaticGeometry(name);
				}
				virtual EarthView::World::Graphic::CStaticGeometry* getStaticGeometry(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CStaticGeometry* returnValue = m_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getStaticGeometry(name);
				}
				virtual ev_bool hasStaticGeometry(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasStaticGeometry(name);
				}
				virtual void destroyStaticGeometry(_in EarthView::World::Graphic::CStaticGeometry* geom)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback(geom);
					}
					else
						return this->CSceneManager::destroyStaticGeometry(geom);
				}
				virtual void destroyStaticGeometry(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyStaticGeometry(name);
				}
				virtual void destroyAllStaticGeometry()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllStaticGeometry();
				}
				virtual EarthView::World::Graphic::CInstancedGeometry* createInstancedGeometry(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CInstancedGeometry* returnValue = m_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createInstancedGeometry(name);
				}
				virtual EarthView::World::Graphic::CInstancedGeometry* getInstancedGeometry(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EarthView::World::Graphic::CInstancedGeometry* returnValue = m_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getInstancedGeometry(name);
				}
				virtual void destroyInstancedGeometry(_in EarthView::World::Graphic::CInstancedGeometry* geom)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback(geom);
					}
					else
						return this->CSceneManager::destroyInstancedGeometry(geom);
				}
				virtual void destroyInstancedGeometry(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyInstancedGeometry(name);
				}
				virtual void destroyAllInstancedGeometry()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllInstancedGeometry();
				}
				virtual EarthView::World::Graphic::CInstanceManager* createInstanceManager(_in const EVString& customName, _in const EVString& meshName, _in const EVString& groupName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						char* customName_Char = customName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CInstanceManager* returnValue = m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback(customName_Char, meshName_Char, groupName_Char, (int)technique, numInstancesPerBatch, flags, subMeshIdx);
						return returnValue;
					}
					else
						return this->CSceneManager::createInstanceManager(customName, meshName, groupName, technique, numInstancesPerBatch, flags, subMeshIdx);
				}
				virtual EarthView::World::Graphic::CInstanceManager* createInstanceManager(_in const EVString& customName, _in const EVString& meshName, _in const EVString& groupName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch, _in ev_uint16 flags)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						char* customName_Char = customName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CInstanceManager* returnValue = m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback(customName_Char, meshName_Char, groupName_Char, (int)technique, numInstancesPerBatch, flags);
						return returnValue;
					}
					else
						return this->CSceneManager::createInstanceManager(customName, meshName, groupName, technique, numInstancesPerBatch, flags);
				}
				virtual EarthView::World::Graphic::CInstanceManager* createInstanceManager(_in const EVString& customName, _in const EVString& meshName, _in const EVString& groupName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						char* customName_Char = customName.makeBuffer();
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						EarthView::World::Graphic::CInstanceManager* returnValue = m_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback(customName_Char, meshName_Char, groupName_Char, (int)technique, numInstancesPerBatch);
						return returnValue;
					}
					else
						return this->CSceneManager::createInstanceManager(customName, meshName, groupName, technique, numInstancesPerBatch);
				}
				virtual EarthView::World::Graphic::CInstanceManager* getInstanceManager(_in const EVString& managerName) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* managerName_Char = managerName.makeBuffer();
						EarthView::World::Graphic::CInstanceManager* returnValue = m_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback(managerName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getInstanceManager(managerName);
				}
				virtual ev_bool hasInstanceManager(_in const EVString& managerName) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* managerName_Char = managerName.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback(managerName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasInstanceManager(managerName);
				}
				virtual void destroyInstanceManager(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyInstanceManager(name);
				}
				virtual void destroyInstanceManager(_in EarthView::World::Graphic::CInstanceManager* instanceManager)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback(instanceManager);
					}
					else
						return this->CSceneManager::destroyInstanceManager(instanceManager);
				}
				virtual void destroyInstanceManagerWithThreadSafe(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback(name_Char);
					}
					else
						return this->CSceneManager::destroyInstanceManagerWithThreadSafe(name);
				}
				virtual void destroyInstanceManagerWithThreadSafe(_in EarthView::World::Graphic::CInstanceManager* instanceManager)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback(instanceManager);
					}
					else
						return this->CSceneManager::destroyInstanceManagerWithThreadSafe(instanceManager);
				}
				virtual void destroyAllInstanceManagers()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllInstanceManagers();
				}
				virtual ev_size_t getNumInstancesPerBatch(_in const EVString& meshName, _in const EVString& groupName, _in const EVString& materialName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						char* materialName_Char = materialName.makeBuffer();
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback(meshName_Char, groupName_Char, materialName_Char, (int)technique, numInstancesPerBatch);
						return returnValue;
					}
					else
						return this->CSceneManager::getNumInstancesPerBatch(meshName, groupName, materialName, technique, numInstancesPerBatch);
				}
				virtual ev_size_t getNumInstancesPerBatch(_in const EVString& meshName, _in const EVString& groupName, _in const EVString& materialName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch, _in ev_uint16 flags)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						char* materialName_Char = materialName.makeBuffer();
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback(meshName_Char, groupName_Char, materialName_Char, (int)technique, numInstancesPerBatch, flags);
						return returnValue;
					}
					else
						return this->CSceneManager::getNumInstancesPerBatch(meshName, groupName, materialName, technique, numInstancesPerBatch, flags);
				}
				virtual ev_size_t getNumInstancesPerBatch(_in const EVString& meshName, _in const EVString& groupName, _in const EVString& materialName, _in EarthView::World::Graphic::CInstanceManager::InstancingTechnique technique, _in ev_size_t numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						char* meshName_Char = meshName.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						char* materialName_Char = materialName.makeBuffer();
						ev_size_t returnValue = m_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback(meshName_Char, groupName_Char, materialName_Char, (int)technique, numInstancesPerBatch, flags, subMeshIdx);
						return returnValue;
					}
					else
						return this->CSceneManager::getNumInstancesPerBatch(meshName, groupName, materialName, technique, numInstancesPerBatch, flags, subMeshIdx);
				}
				virtual EarthView::World::Graphic::CInstancedEntity* createInstancedEntity(_in const EVString& materialName, _in const EVString& managerName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* materialName_Char = materialName.makeBuffer();
						char* managerName_Char = managerName.makeBuffer();
						EarthView::World::Graphic::CInstancedEntity* returnValue = m_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback(materialName_Char, managerName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createInstancedEntity(materialName, managerName);
				}
				virtual void destroyInstancedEntity(_in EarthView::World::Graphic::CInstancedEntity* instancedEntity)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback(instancedEntity);
					}
					else
						return this->CSceneManager::destroyInstancedEntity(instancedEntity);
				}
				virtual EarthView::World::Graphic::CMovableObject* createMovableObject(_in const EVString& name, _in const EVString& typeName, _in const EarthView::World::Core::CommonStringPairList* params)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback(name_Char, typeName_Char, params);
						return returnValue;
					}
					else
						return this->CSceneManager::createMovableObject(name, typeName, params);
				}
				virtual EarthView::World::Graphic::CMovableObject* createMovableObject(_in const EVString& name, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback(name_Char, typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createMovableObject(name, typeName);
				}
				virtual EarthView::World::Graphic::CMovableObject* createMovableObject(_in const EVString& typeName, _in const EarthView::World::Core::CommonStringPairList* params)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback(typeName_Char, params);
						return returnValue;
					}
					else
						return this->CSceneManager::createMovableObject(typeName, params);
				}
				virtual EarthView::World::Graphic::CMovableObject* createMovableObject(_in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback(typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::createMovableObject(typeName);
				}
				virtual void destroyMovableObject(_in const EVString& name, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback(name_Char, typeName_Char);
					}
					else
						return this->CSceneManager::destroyMovableObject(name, typeName);
				}
				virtual void destroyMovableObject(_in EarthView::World::Graphic::CMovableObject* m)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback(m);
					}
					else
						return this->CSceneManager::destroyMovableObject(m);
				}
				virtual void destroyAllMovableObjectsByType(_in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback(typeName_Char);
					}
					else
						return this->CSceneManager::destroyAllMovableObjectsByType(typeName);
				}
				virtual void destroyAllMovableObjects()
				{
					if(m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback();
					}
					else
						return this->CSceneManager::destroyAllMovableObjects();
				}
				virtual EarthView::World::Graphic::CMovableObject* getMovableObject(_in const EVString& name, _in const EVString& typeName) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CMovableObject* returnValue = m_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback(name_Char, typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getMovableObject(name, typeName);
				}
				virtual ev_bool hasMovableObject(_in const EVString& name, _in const EVString& typeName) const
				{
					if(m_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback(name_Char, typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::hasMovableObject(name, typeName);
				}
				virtual EarthView::World::Graphic::CSceneManager::MovableObjectIterator getMovableObjectIterator(_in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						EarthView::World::Graphic::CSceneManager::MovableObjectIterator returnValue = *(EarthView::World::Graphic::CSceneManager::MovableObjectIterator*)m_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback(typeName_Char);
						return returnValue;
					}
					else
						return this->CSceneManager::getMovableObjectIterator(typeName);
				}
				virtual void injectMovableObject(_in EarthView::World::Graphic::CMovableObject* m)
				{
					if(m_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback(m);
					}
					else
						return this->CSceneManager::injectMovableObject(m);
				}
				virtual void extractMovableObject(_in const EVString& name, _in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback(name_Char, typeName_Char);
					}
					else
						return this->CSceneManager::extractMovableObject(name, typeName);
				}
				virtual void extractMovableObject(_in EarthView::World::Graphic::CMovableObject* m)
				{
					if(m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback(m);
					}
					else
						return this->CSceneManager::extractMovableObject(m);
				}
				virtual void extractAllMovableObjectsByType(_in const EVString& typeName)
				{
					if(m_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* typeName_Char = typeName.makeBuffer();
						m_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback(typeName_Char);
					}
					else
						return this->CSceneManager::extractAllMovableObjectsByType(typeName);
				}
				virtual void setVisibilityMask(_in ev_uint32 vmask)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback(vmask);
					}
					else
						return this->CSceneManager::setVisibilityMask(vmask);
				}
				virtual ev_uint32 getVisibilityMask()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getVisibilityMask();
				}
				virtual void setFindVisibleObjects(_in ev_bool find)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback(find);
					}
					else
						return this->CSceneManager::setFindVisibleObjects(find);
				}
				virtual ev_bool getFindVisibleObjects()
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFindVisibleObjects();
				}
				virtual void setNormaliseNormalsOnScale(_in ev_bool n)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback(n);
					}
					else
						return this->CSceneManager::setNormaliseNormalsOnScale(n);
				}
				virtual ev_bool getNormaliseNormalsOnScale() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getNormaliseNormalsOnScale();
				}
				virtual void setFlipCullingOnNegativeScale(_in ev_bool n)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback(n);
					}
					else
						return this->CSceneManager::setFlipCullingOnNegativeScale(n);
				}
				virtual ev_bool getFlipCullingOnNegativeScale() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getFlipCullingOnNegativeScale();
				}
				virtual void _injectRenderWithPass(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback(pass, rend, shadowDerivation, doLightIteration, manualLightList);
					}
					else
						return this->CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration, manualLightList);
				}
				virtual void _injectRenderWithPass(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback(pass, rend, shadowDerivation, doLightIteration);
					}
					else
						return this->CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration);
				}
				virtual void _injectRenderWithPass(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation)
				{
					if(m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback(pass, rend, shadowDerivation);
					}
					else
						return this->CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation);
				}
				virtual void _injectRenderWithPass(_in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend)
				{
					if(m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback(pass, rend);
					}
					else
						return this->CSceneManager::_injectRenderWithPass(pass, rend);
				}
				virtual void _suppressRenderStateChanges(_in ev_bool suppress)
				{
					if(m_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback(suppress);
					}
					else
						return this->CSceneManager::_suppressRenderStateChanges(suppress);
				}
				virtual ev_bool _areRenderStateChangesSuppressed() const
				{
					if(m_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::_areRenderStateChangesSuppressed();
				}
				virtual const EarthView::World::Graphic::CPass* _setPass(_in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed, _in ev_bool shadowDerivation)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CPass* returnValue = m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback(pass, evenIfSuppressed, shadowDerivation);
						return returnValue;
					}
					else
						return this->CSceneManager::_setPass(pass, evenIfSuppressed, shadowDerivation);
				}
				virtual const EarthView::World::Graphic::CPass* _setPass(_in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CPass* returnValue = m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback(pass, evenIfSuppressed);
						return returnValue;
					}
					else
						return this->CSceneManager::_setPass(pass, evenIfSuppressed);
				}
				virtual const EarthView::World::Graphic::CPass* _setPass(_in const EarthView::World::Graphic::CPass* pass)
				{
					if(m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CPass* returnValue = m_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback(pass);
						return returnValue;
					}
					else
						return this->CSceneManager::_setPass(pass);
				}
				virtual void _markGpuParamsDirty(_in ev_uint16 mask)
				{
					if(m_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback(mask);
					}
					else
						return this->CSceneManager::_markGpuParamsDirty(mask);
				}
				virtual void _suppressShadows(_in ev_bool suppress)
				{
					if(m_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback(suppress);
					}
					else
						return this->CSceneManager::_suppressShadows(suppress);
				}
				virtual ev_bool _areShadowsSuppressed() const
				{
					if(m_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::_areShadowsSuppressed();
				}
				virtual void _renderQueueGroupObjects(_in EarthView::World::Graphic::CRenderQueueGroup* group, _in EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode om)
				{
					if(m_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback(group, (int)om);
					}
					else
						return this->CSceneManager::_renderQueueGroupObjects(group, om);
				}
				virtual void setCameraRelativeRendering(_in ev_bool rel)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback(rel);
					}
					else
						return this->CSceneManager::setCameraRelativeRendering(rel);
				}
				virtual ev_bool getCameraRelativeRendering() const
				{
					if(m_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CSceneManager::getCameraRelativeRendering();
				}
				virtual Real getHeightAt(_in Real latitude, _in Real lontitude, _in ev_real32 targetSamplesPerDegrees)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback(latitude, lontitude, targetSamplesPerDegrees);
						return returnValue;
					}
					else
						return this->CSceneManager::getHeightAt(latitude, lontitude, targetSamplesPerDegrees);
				}
				virtual Real getBestHeightAt(_in Real latitude, _in Real lontitude)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback(latitude, lontitude);
						return returnValue;
					}
					else
						return this->CSceneManager::getBestHeightAt(latitude, lontitude);
				}
				virtual Real getHeightAtTile(_in Real latitude, _in Real lontitude)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback(latitude, lontitude);
						return returnValue;
					}
					else
						return this->CSceneManager::getHeightAtTile(latitude, lontitude);
				}
				virtual ev_bool getTileEnvelope(_in ev_int32 level, _in ev_uint32 row, _in ev_uint32 col, _inout Real& minX, _inout Real& maxX, _inout Real& minY, _inout Real& maxY)
				{
					if(m_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback(level, row, col, minX, maxX, minY, maxY);
						return returnValue;
					}
					else
						return this->CSceneManager::getTileEnvelope(level, row, col, minX, maxX, minY, maxY);
				}
				virtual ev_bool addTempLayer(_in EarthView::World::Spatial::Atlas::ILayer* layer)
				{
					if(m_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback(layer);
						return returnValue;
					}
					else
						return this->CSceneManager::addTempLayer(layer);
				}
				virtual ev_bool removeTempLayer(_in EarthView::World::Spatial::Atlas::ILayer* layer)
				{
					if(m_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback(layer);
						return returnValue;
					}
					else
						return this->CSceneManager::removeTempLayer(layer);
				}
				virtual void updateQuadImage(_in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup)
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback(updateImageGroup, updateFeatureGroup, updateKmlGroup);
					}
					else
						return this->CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup);
				}
				virtual void updateQuadImage(_in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup, _in Real minX, _in Real maxX, _in Real minY, _in Real maxY)
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback(updateImageGroup, updateFeatureGroup, updateKmlGroup, minX, maxX, minY, maxY);
					}
					else
						return this->CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup, minX, maxX, minY, maxY);
				}
				virtual void updateOBQ(_in ev_bool bUpdateVectorTexture, _in ev_bool bUpdateKmlTexture, _in ev_bool bUpdateTemporaryTexture, _in ev_bool bUpdateTerrain)
				{
					if(m_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback(bUpdateVectorTexture, bUpdateKmlTexture, bUpdateTemporaryTexture, bUpdateTerrain);
					}
					else
						return this->CSceneManager::updateOBQ(bUpdateVectorTexture, bUpdateKmlTexture, bUpdateTemporaryTexture, bUpdateTerrain);
				}
				virtual void setCollisionDetectionEnable(_in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback(enable);
					}
					else
						return this->CSceneManager::setCollisionDetectionEnable(enable);
				}
			};
			REGISTER_FACTORY_CLASS(CSceneManagerProxy);
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_WORLD_GEOMETRY_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::WORLD_GEOMETRY_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_WORLD_GEOMETRY_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::WORLD_GEOMETRY_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_ENTITY_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::ENTITY_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_ENTITY_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::ENTITY_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_FX_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::FX_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_FX_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::FX_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_STATICGEOMETRY_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::STATICGEOMETRY_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_STATICGEOMETRY_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::STATICGEOMETRY_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_LIGHT_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::LIGHT_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LIGHT_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::LIGHT_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_FRUSTUM_TYPE_MASK()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::FRUSTUM_TYPE_MASK;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_FRUSTUM_TYPE_MASK( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::FRUSTUM_TYPE_MASK = value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_USER_TYPE_MASK_LIMIT()
			{
				ev_uint32 objXXXX = EarthView::World::Graphic::CSceneManager::USER_TYPE_MASK_LIMIT;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_USER_TYPE_MASK_LIMIT( ev_uint32  value )
			{
				EarthView::World::Graphic::CSceneManager::USER_TYPE_MASK_LIMIT = value;
			}
			extern "C" EV_DLL_EXPORT  const char*  _stdcall Get_EarthView_World_Graphic_CSceneManager_GlobeCameraName()
			{
				const EVString objXXXX = EarthView::World::Graphic::CSceneManager::GlobeCameraName;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowMapGround_render_void_CCamera(void *pObjectXXXX, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager::ShadowMapGround* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowMapGround*) pObjectXXXX;
				ptrNativeObject->render(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowMapGround_disableRender_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowMapGround* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowMapGround*) pObjectXXXX;
				ptrNativeObject->disableRender();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_render_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*) pObjectXXXX;
				ptrNativeObject->render();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_disableRender_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*) pObjectXXXX;
				ptrNativeObject->disableRender();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSimpleRenderable*  _stdcall Get_EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_mFullScreenQuadRenderable( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*) pObjectXXXX;
				EarthView::World::Graphic::CSimpleRenderable* objXXXX = ptrNativeObject->mFullScreenQuadRenderable;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_mFullScreenQuadRenderable( void *pObjectXXXX, EarthView::World::Graphic::CSimpleRenderable*  value )
			{
				((EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*)pObjectXXXX)->mFullScreenQuadRenderable = value;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_GetMaterialVB_CMaterialPtr(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*) pObjectXXXX;
				EarthView::World::Graphic::CMaterialPtr objXXXX = ptrNativeObject->GetMaterialVB();
				EarthView::World::Graphic::CMaterialPtr *pXXXX = new EarthView::World::Graphic::CMaterialPtr(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_ShadowFullScreenQuad_GetMaterialHB_CMaterialPtr(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowFullScreenQuad*) pObjectXXXX;
				EarthView::World::Graphic::CMaterialPtr objXXXX = ptrNativeObject->GetMaterialHB();
				EarthView::World::Graphic::CMaterialPtr *pXXXX = new EarthView::World::Graphic::CMaterialPtr(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback)(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback)(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback)(_in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback)(_in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback)(_in ev_uint64  numberOfShadowTextures);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback)(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback)(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* frustum);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback)(_inout void* lightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback)(_in EarthView::World::Graphic::CSceneManager* source);
			class CSceneManagerListenerProxy : public EarthView::World::Graphic::CSceneManager::CSceneManagerListener
			{
			private:
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback;
			public:
				CSceneManagerListenerProxy(EarthView::World::Core::CNameValuePairList *pList) : CSceneManagerListener(pList)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager(EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback = pCallback;
				}
				virtual void preUpdateSceneGraph(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback(source, camera);
					}
					else
						return this->CSceneManagerListener::preUpdateSceneGraph(source, camera);
				}
				virtual void postUpdateSceneGraph(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback(source, camera);
					}
					else
						return this->CSceneManagerListener::postUpdateSceneGraph(source, camera);
				}
				virtual void preFindVisibleObjects(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CSceneManager::IlluminationRenderStage irs, _in EarthView::World::Graphic::CViewport* v)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback(source, (int)irs, v);
					}
					else
						return this->CSceneManagerListener::preFindVisibleObjects(source, irs, v);
				}
				virtual void postFindVisibleObjects(_in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CSceneManager::IlluminationRenderStage irs, _in EarthView::World::Graphic::CViewport* v)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback(source, (int)irs, v);
					}
					else
						return this->CSceneManagerListener::postFindVisibleObjects(source, irs, v);
				}
				virtual void shadowTexturesUpdated(_in ev_size_t numberOfShadowTextures)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback(numberOfShadowTextures);
					}
					else
						return this->CSceneManagerListener::shadowTexturesUpdated(numberOfShadowTextures);
				}
				virtual void shadowTextureCasterPreViewProj(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_size_t iteration)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback(light, camera, iteration);
					}
					else
						return this->CSceneManagerListener::shadowTextureCasterPreViewProj(light, camera, iteration);
				}
				virtual void shadowTextureReceiverPreViewProj(_in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* frustum)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback(light, frustum);
					}
					else
						return this->CSceneManagerListener::shadowTextureReceiverPreViewProj(light, frustum);
				}
				virtual ev_bool sortLightsAffectingFrustum(_inout EarthView::World::Graphic::LightList& lightList)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback(&lightList);
						return returnValue;
					}
					else
						return this->CSceneManagerListener::sortLightsAffectingFrustum(lightList);
				}
				virtual void sceneManagerDestroyed(_in EarthView::World::Graphic::CSceneManager* source)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback(source);
					}
					else
						return this->CSceneManagerListener::sceneManagerDestroyed(source);
				}
			};
			REGISTER_FACTORY_CLASS(CSceneManagerListenerProxy);
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::preUpdateSceneGraph(source, camera);
				else
					ptrNativeObject->preUpdateSceneGraph(source, camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preUpdateSceneGraph_void_CSceneManager_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::preUpdateSceneGraph(source, camera);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::postUpdateSceneGraph(source, camera);
				else
					ptrNativeObject->postUpdateSceneGraph(source, camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postUpdateSceneGraph_void_CSceneManager_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::postUpdateSceneGraph(source, camera);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::preFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
				else
					ptrNativeObject->preFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_preFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::preFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::postFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
				else
					ptrNativeObject->postFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_postFindVisibleObjects_void_CSceneManager_IlluminationRenderStage_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source, _in int irs, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::postFindVisibleObjects(source, (EarthView::World::Graphic::CSceneManager::IlluminationRenderStage)irs, v);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  numberOfShadowTextures )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTexturesUpdated(numberOfShadowTextures);
				else
					ptrNativeObject->shadowTexturesUpdated(numberOfShadowTextures);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTexturesUpdated_void_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  numberOfShadowTextures )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTexturesUpdated(numberOfShadowTextures);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTextureCasterPreViewProj(light, camera, iteration);
				else
					ptrNativeObject->shadowTextureCasterPreViewProj(light, camera, iteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureCasterPreViewProj_void_CLight_CCamera_ev_size_t_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTextureCasterPreViewProj(light, camera, iteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* frustum )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTextureReceiverPreViewProj(light, frustum);
				else
					ptrNativeObject->shadowTextureReceiverPreViewProj(light, frustum);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_shadowTextureReceiverPreViewProj_void_CLight_CFrustum_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* frustum )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::shadowTextureReceiverPreViewProj(light, frustum);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList(void *pObjectXXXX, _inout void* lightList )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::sortLightsAffectingFrustum(*(EarthView::World::Graphic::LightList*)lightList);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->sortLightsAffectingFrustum(*(EarthView::World::Graphic::LightList*)lightList);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sortLightsAffectingFrustum_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _inout void* lightList )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::sortLightsAffectingFrustum(*(EarthView::World::Graphic::LightList*)lightList);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::sceneManagerDestroyed(source);
				else
					ptrNativeObject->sceneManagerDestroyed(source);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_Callback* pCallback )
			{
				CSceneManagerListenerProxy* ptr = dynamic_cast<CSceneManagerListenerProxy*>((EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneManagerListener_sceneManagerDestroyed_void_CSceneManager_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* source )
			{
				EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneManagerListener*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneManagerListener::sceneManagerDestroyed(source);
			}
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback)(_in EarthView::World::Graphic::RenderablePass* rp);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback)(_in const EarthView::World::Graphic::CPass* p);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback)(_in EarthView::World::Graphic::CRenderable* r);
			class CSceneMgrQueuedRenderableVisitorProxy : public EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor
			{
			private:
				EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback;
				EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback* m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback;
			public:
				CSceneMgrQueuedRenderableVisitorProxy(EarthView::World::Core::CNameValuePairList *pList) : CSceneMgrQueuedRenderableVisitor(pList)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass(EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass(EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable(EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback = pCallback;
				}
				virtual void visit(_in EarthView::World::Graphic::CRenderable* r)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback(r);
					}
					else
						return this->CSceneMgrQueuedRenderableVisitor::visit(r);
				}
				virtual ev_bool visit(_in const EarthView::World::Graphic::CPass* p)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback(p);
						return returnValue;
					}
					else
						return this->CSceneMgrQueuedRenderableVisitor::visit(p);
				}
				virtual void visit(_in EarthView::World::Graphic::RenderablePass* rp)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback(rp);
					}
					else
						return this->CSceneMgrQueuedRenderableVisitor::visit(rp);
				}
			};
			REGISTER_FACTORY_CLASS(CSceneMgrQueuedRenderableVisitorProxy);
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* r )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				if (dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(r);
				else
					ptrNativeObject->visit(r);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_Callback* pCallback )
			{
				CSceneMgrQueuedRenderableVisitorProxy* ptr = dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_CRenderable_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* r )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(r);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* p )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				if (dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(p);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->visit(p);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_Callback* pCallback )
			{
				CSceneMgrQueuedRenderableVisitorProxy* ptr = dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_ev_bool_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* p )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(p);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass(void *pObjectXXXX, _in EarthView::World::Graphic::RenderablePass* rp )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				if (dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(rp);
				else
					ptrNativeObject->visit(rp);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_Callback* pCallback )
			{
				CSceneMgrQueuedRenderableVisitorProxy* ptr = dynamic_cast<CSceneMgrQueuedRenderableVisitorProxy*>((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_visit_void_RenderablePass_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::RenderablePass* rp )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor::visit(rp);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager*  _stdcall Get_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_targetSceneMgr( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->targetSceneMgr;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_targetSceneMgr( void *pObjectXXXX, EarthView::World::Graphic::CSceneManager*  value )
			{
				((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)pObjectXXXX)->targetSceneMgr = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall Get_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_transparentShadowCastersMode( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->transparentShadowCastersMode;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_transparentShadowCastersMode( void *pObjectXXXX, ev_bool  value )
			{
				((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)pObjectXXXX)->transparentShadowCastersMode = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall Get_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_autoLights( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->autoLights;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_autoLights( void *pObjectXXXX, ev_bool  value )
			{
				((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)pObjectXXXX)->autoLights = value;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::LightList*  _stdcall Get_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_manualLightList( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				const EarthView::World::Graphic::LightList* objXXXX = ptrNativeObject->manualLightList;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_manualLightList( void *pObjectXXXX, const EarthView::World::Graphic::LightList*  value )
			{
				((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)pObjectXXXX)->manualLightList = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall Get_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_scissoring( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->scissoring;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CSceneMgrQueuedRenderableVisitor_scissoring( void *pObjectXXXX, ev_bool  value )
			{
				((EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*)pObjectXXXX)->scissoring = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_push_ev_bool_EVString_CCamera(void *pObjectXXXX, _in const char* key, _in EarthView::World::Graphic::CCamera*& ref_val )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->push(key1, ref_val);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_exist_ev_bool_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->exist(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_OperatorIndex_CCamera_EVString(void *pObjXXXX, _in const char* key )
			{
				EarthView::World::Graphic::CSceneManager::CameraList& objYYYY = *(EarthView::World::Graphic::CSceneManager::CameraList*) pObjXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = objYYYY[key];
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_get_CCamera_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->get(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_erase_void_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ptrNativeObject->erase(key1);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_CameraList_size_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->size();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CameraList_empty_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::CameraList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->empty();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_push_ev_bool_EVString_CAnimation(void *pObjectXXXX, _in const char* key, _in EarthView::World::Graphic::CAnimation*& ref_val )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->push(key1, ref_val);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_exist_ev_bool_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->exist(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_OperatorIndex_CAnimation_EVString(void *pObjXXXX, _in const char* key )
			{
				EarthView::World::Graphic::CSceneManager::AnimationList& objYYYY = *(EarthView::World::Graphic::CSceneManager::AnimationList*) pObjXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = objYYYY[key];
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_get_CAnimation_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->get(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_erase_void_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ptrNativeObject->erase(key1);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_size_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->size();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_AnimationList_empty_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::AnimationList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->empty();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_push_ev_bool_EVString_CMovableObject(void *pObjectXXXX, _in const char* key, _in EarthView::World::Graphic::CMovableObject*& val )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->push(key1, val);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_exist_ev_bool_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->exist(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_OperatorIndex_CMovableObject_EVString(void *pObjXXXX, _in const char* key )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectMap& objYYYY = *(EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = objYYYY[key];
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_get_CMovableObject_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->get(key1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_erase_void_EVString(void *pObjectXXXX, _in const char* key )
			{
				EarthView::World::Core::ev_string key1 = key;
				EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ptrNativeObject->erase(key1);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_size_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->size();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectMap_empty_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::MovableObjectMap* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectMap*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->empty();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNodeImpl();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->createSceneNodeImpl();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNodeImpl();
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNodeImpl(name1);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->createSceneNodeImpl(name1);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNodeImpl_CSceneNode_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNodeImpl(name1);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getHeightMapRendering_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getHeightMapRendering();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall Get_EarthView_World_Graphic_CSceneManager_LightInfo_light( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::LightInfo*) pObjectXXXX;
				EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->light;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LightInfo_light( void *pObjectXXXX, EarthView::World::Graphic::CLight*  value )
			{
				((EarthView::World::Graphic::CSceneManager::LightInfo*)pObjectXXXX)->light = value;
			}
			extern "C" EV_DLL_EXPORT  ev_int32  _stdcall Get_EarthView_World_Graphic_CSceneManager_LightInfo_type( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::LightInfo*) pObjectXXXX;
				ev_int32 objXXXX = ptrNativeObject->type;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LightInfo_type( void *pObjectXXXX, ev_int32  value )
			{
				((EarthView::World::Graphic::CSceneManager::LightInfo*)pObjectXXXX)->type = value;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall Get_EarthView_World_Graphic_CSceneManager_LightInfo_range( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::LightInfo*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->range;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LightInfo_range( void *pObjectXXXX, Real  value )
			{
				((EarthView::World::Graphic::CSceneManager::LightInfo*)pObjectXXXX)->range = value;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall Get_EarthView_World_Graphic_CSceneManager_LightInfo_position( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::LightInfo*) pObjectXXXX;
				EarthView::World::Spatial::Math::CVector3 &objXXXX = ptrNativeObject->position;
				EarthView::World::Spatial::Math::CVector3 *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LightInfo_position( void *pObjectXXXX, void*  value )
			{
				((EarthView::World::Graphic::CSceneManager::LightInfo*)pObjectXXXX)->position = *(EarthView::World::Spatial::Math::CVector3*)value;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall Get_EarthView_World_Graphic_CSceneManager_LightInfo_lightMask( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::LightInfo*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->lightMask;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_LightInfo_lightMask( void *pObjectXXXX, ev_uint32  value )
			{
				((EarthView::World::Graphic::CSceneManager::LightInfo*)pObjectXXXX)->lightMask = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_LightInfo_OperatorEquals_ev_bool_LightInfo(void *pObjXXXX, _in const void* rhs )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo& objXXXX = *(EarthView::World::Graphic::CSceneManager::LightInfo*) pObjXXXX;
				const EarthView::World::Graphic::CSceneManager::LightInfo& objXXXX1 = *(EarthView::World::Graphic::CSceneManager::LightInfo*)rhs;
				return objXXXX == objXXXX1;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_LightInfo_OperatorNotEquals_ev_bool_LightInfo(void *pObjXXXX, _in const void* rhs )
			{
				EarthView::World::Graphic::CSceneManager::LightInfo& objXXXX = *(EarthView::World::Graphic::CSceneManager::LightInfo*) pObjXXXX;
				const EarthView::World::Graphic::CSceneManager::LightInfo& objXXXX1 = *(EarthView::World::Graphic::CSceneManager::LightInfo*)rhs;
				return objXXXX != objXXXX1;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_initRenderQueue_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::initRenderQueue();
				else
					ptrNativeObject->initRenderQueue();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_initRenderQueue_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_initRenderQueue_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_initRenderQueue_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_initRenderQueue_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::initRenderQueue();
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::deriveShadowCasterPass(pass);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->deriveShadowCasterPass(pass);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowCasterPass_CPass_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::deriveShadowCasterPass(pass);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::deriveShadowReceiverPass(pass);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->deriveShadowReceiverPass(pass);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager_deriveShadowReceiverPass_CPass_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::deriveShadowReceiverPass(pass);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::validatePassForRendering(pass);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->validatePassForRendering(pass);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_validatePassForRendering_ev_bool_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::validatePassForRendering(pass);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CRenderable* rend )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::validateRenderableForRendering(pass, rend);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->validateRenderableForRendering(pass, rend);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_validateRenderableForRendering_ev_bool_CPass_CRenderable_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CRenderable* rend )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::validateRenderableForRendering(pass, rend);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString(void *pObjectXXXX, _in int bp, _in Real distance, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSkyboxPlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
					EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->createSkyboxPlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
					EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_createSkyboxPlane_CMeshPtr_BoxPlane_Real_CQuaternion_EVString_NoVirtual(void *pObjectXXXX, _in int bp, _in Real distance, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSkyboxPlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
				EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(void *pObjectXXXX, _in int bp, _in Real curvature, _in Real tiling, _in Real distance, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ySegmentsToKeep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSkydomePlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, curvature, tiling, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ySegmentsToKeep, groupName1);
					EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->createSkydomePlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, curvature, tiling, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ySegmentsToKeep, groupName1);
					EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_createSkydomePlane_CMeshPtr_BoxPlane_Real_Real_Real_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_NoVirtual(void *pObjectXXXX, _in int bp, _in Real curvature, _in Real tiling, _in Real distance, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ySegmentsToKeep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMeshPtr objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSkydomePlane((EarthView::World::Graphic::CSceneManager::BoxPlane)bp, curvature, tiling, distance, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ySegmentsToKeep, groupName1);
				EarthView::World::Graphic::CMeshPtr *pXXXX = new EarthView::World::Graphic::CMeshPtr(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool(void *pObjectXXXX, _in const EarthView::World::Graphic::CRenderable* pRend, _in ev_bool fixedFunction )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::useRenderableViewProjMode(pRend, fixedFunction);
				else
					ptrNativeObject->useRenderableViewProjMode(pRend, fixedFunction);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useRenderableViewProjMode_void_CRenderable_ev_bool_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CRenderable* pRend, _in ev_bool fixedFunction )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::useRenderableViewProjMode(pRend, fixedFunction);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool(void *pObjectXXXX, _in ev_bool fixedFunction )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetViewProjMode(fixedFunction);
				else
					ptrNativeObject->resetViewProjMode(fixedFunction);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetViewProjMode_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool fixedFunction )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetViewProjMode(fixedFunction);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreRenderQueues();
				else
					ptrNativeObject->firePreRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreRenderQueues_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostRenderQueues();
				else
					ptrNativeObject->firePostRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostRenderQueues_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString(void *pObjectXXXX, _in ev_uint8 id, _in const char* invocation )
			{
				EarthView::World::Core::ev_string invocation1 = invocation;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderQueueStarted(id, invocation1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->fireRenderQueueStarted(id, invocation1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueStarted_ev_bool_ev_uint8_EVString_NoVirtual(void *pObjectXXXX, _in ev_uint8 id, _in const char* invocation )
			{
				EarthView::World::Core::ev_string invocation1 = invocation;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderQueueStarted(id, invocation1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString(void *pObjectXXXX, _in ev_uint8 id, _in const char* invocation )
			{
				EarthView::World::Core::ev_string invocation1 = invocation;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderQueueEnded(id, invocation1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->fireRenderQueueEnded(id, invocation1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderQueueEnded_ev_bool_ev_uint8_EVString_NoVirtual(void *pObjectXXXX, _in ev_uint8 id, _in const char* invocation )
			{
				EarthView::World::Core::ev_string invocation1 = invocation;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderQueueEnded(id, invocation1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderSingleObjectStarted(rend, pass, source, pLightList, suppressRenderStateChanges);
				else
					ptrNativeObject->fireRenderSingleObjectStarted(rend, pass, source, pLightList, suppressRenderStateChanges);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectStarted_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderSingleObjectStarted(rend, pass, source, pLightList, suppressRenderStateChanges);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderSingleObjectEnd(rend, pass, source, pLightList, suppressRenderStateChanges);
				else
					ptrNativeObject->fireRenderSingleObjectEnd(rend, pass, source, pLightList, suppressRenderStateChanges);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireRenderSingleObjectEnd_void_CRenderable_CPass_CAutoParamDataSource_LightList_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::CAutoParamDataSource* source, _in const EarthView::World::Graphic::LightList* pLightList, _in ev_bool suppressRenderStateChanges )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireRenderSingleObjectEnd(rend, pass, source, pLightList, suppressRenderStateChanges);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  numberOfShadowTextures )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesUpdated(numberOfShadowTextures);
				else
					ptrNativeObject->fireShadowTexturesUpdated(numberOfShadowTextures);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesUpdated_void_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  numberOfShadowTextures )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesUpdated(numberOfShadowTextures);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesPreCaster(light, camera, iteration);
				else
					ptrNativeObject->fireShadowTexturesPreCaster(light, camera, iteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreCaster_void_CLight_CCamera_ev_size_t_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CCamera* camera, _in ev_uint64  iteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesPreCaster(light, camera, iteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* f )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesPreReceiver(light, f);
				else
					ptrNativeObject->fireShadowTexturesPreReceiver(light, f);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireShadowTexturesPreReceiver_void_CLight_CFrustum_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CFrustum* f )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireShadowTexturesPreReceiver(light, f);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreUpdateSceneGraph(camera);
				else
					ptrNativeObject->firePreUpdateSceneGraph(camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreUpdateSceneGraph_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreUpdateSceneGraph(camera);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostUpdateSceneGraph(camera);
				else
					ptrNativeObject->firePostUpdateSceneGraph(camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostUpdateSceneGraph_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostUpdateSceneGraph(camera);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreFindVisibleObjects(v);
				else
					ptrNativeObject->firePreFindVisibleObjects(v);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePreFindVisibleObjects_void_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePreFindVisibleObjects(v);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostFindVisibleObjects(v);
				else
					ptrNativeObject->firePostFindVisibleObjects(v);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_firePostFindVisibleObjects_void_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* v )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::firePostFindVisibleObjects(v);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireSceneManagerDestroyed();
				else
					ptrNativeObject->fireSceneManagerDestroyed();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_fireSceneManagerDestroyed_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::fireSceneManagerDestroyed();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* vp )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setViewport(vp);
				else
					ptrNativeObject->setViewport(vp);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setViewport_void_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CViewport* vp )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setViewport(vp);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderVisibleObjectsDefaultSequence();
				else
					ptrNativeObject->renderVisibleObjectsDefaultSequence();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsDefaultSequence_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderVisibleObjectsDefaultSequence();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueInvocationSequence* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderVisibleObjectsCustomSequence(s);
				else
					ptrNativeObject->renderVisibleObjectsCustomSequence(s);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderVisibleObjectsCustomSequence_void_CRenderQueueInvocationSequence_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueInvocationSequence* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderVisibleObjectsCustomSequence(s);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareRenderQueue();
				else
					ptrNativeObject->prepareRenderQueue();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareRenderQueue_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareRenderQueue();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration, manualLightList);
				else
					ptrNativeObject->renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration);
				else
					ptrNativeObject->renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderSingleObject_void_CRenderable_CPass_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderSingleObject(rend, pass, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAutoParamDataSource*  _stdcall EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAutoParamDataSource* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAutoParamDataSource();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAutoParamDataSource* objXXXX = ptrNativeObject->createAutoParamDataSource();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAutoParamDataSource*  _stdcall EarthView_World_Graphic_CSceneManager_createAutoParamDataSource_CAutoParamDataSource_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAutoParamDataSource* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAutoParamDataSource();
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAutoParamDataSource*  _stdcall EarthView_World_Graphic_CSceneManager_getAutoParamDataSource_CAutoParamDataSource(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAutoParamDataSource* objXXXX = ptrNativeObject->getAutoParamDataSource();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera(void *pObjectXXXX, _in const EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::findLightsAffectingFrustum(camera);
				else
					ptrNativeObject->findLightsAffectingFrustum(camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_findLightsAffectingFrustum_void_CCamera_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::findLightsAffectingFrustum(camera);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::initShadowVolumeMaterials();
				else
					ptrNativeObject->initShadowVolumeMaterials();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_initShadowVolumeMaterials_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::initShadowVolumeMaterials();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::ensureShadowTexturesCreated();
				else
					ptrNativeObject->ensureShadowTexturesCreated();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ensureShadowTexturesCreated_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::ensureShadowTexturesCreated();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyShadowTextures();
				else
					ptrNativeObject->destroyShadowTextures();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyShadowTextures_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyShadowTextures();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareShadowTextures(cam, vp, lightList);
				else
					ptrNativeObject->prepareShadowTextures(cam, vp, lightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_LightList_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp, _in const EarthView::World::Graphic::LightList* lightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareShadowTextures(cam, vp, lightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareShadowTextures(cam, vp);
				else
					ptrNativeObject->prepareShadowTextures(cam, vp);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareShadowTextures_void_CCamera_CViewport_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CViewport* vp )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareShadowTextures(cam, vp);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr(void *pObjectXXXX, _in const void* matPtr )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setImageDefaultMaterial(*(EarthView::World::Graphic::CMaterialPtr*)matPtr);
				else
					ptrNativeObject->setImageDefaultMaterial(*(EarthView::World::Graphic::CMaterialPtr*)matPtr);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setImageDefaultMaterial_void_CMaterialPtr_NoVirtual(void *pObjectXXXX, _in const void* matPtr )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setImageDefaultMaterial(*(EarthView::World::Graphic::CMaterialPtr*)matPtr);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool(void *pObjectXXXX, _in const ev_bool& useDefaultMat )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setImageUseDefaultMaterial(useDefaultMat);
				else
					ptrNativeObject->setImageUseDefaultMaterial(useDefaultMat);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setImageUseDefaultMaterial_void_ev_bool_NoVirtual(void *pObjectXXXX, _in const ev_bool& useDefaultMat )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setImageUseDefaultMaterial(useDefaultMat);
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Spatial::Math::CVector3 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSunPosition();
					EarthView::World::Spatial::Math::CVector3 *pXXXX = new EarthView::World::Spatial::Math::CVector3(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Spatial::Math::CVector3 objXXXX = ptrNativeObject->getSunPosition();
					EarthView::World::Spatial::Math::CVector3 *pXXXX = new EarthView::World::Spatial::Math::CVector3(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSunPosition_CVector3_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Spatial::Math::CVector3 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSunPosition();
				EarthView::World::Spatial::Math::CVector3 *pXXXX = new EarthView::World::Spatial::Math::CVector3(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool(void *pObjectXXXX, _in const ev_bool& visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setAtmosphereVisible(visible);
				else
					ptrNativeObject->setAtmosphereVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setAtmosphereVisible_void_ev_bool_NoVirtual(void *pObjectXXXX, _in const ev_bool& visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setAtmosphereVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::storeAtmosphereVisibleState();
				else
					ptrNativeObject->storeAtmosphereVisibleState();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_storeAtmosphereVisibleState_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::storeAtmosphereVisibleState();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::restoreAtmosphereVisibleState();
				else
					ptrNativeObject->restoreAtmosphereVisibleState();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_restoreAtmosphereVisibleState_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::restoreAtmosphereVisibleState();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool(void *pObjectXXXX, _in ev_bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSunVisible(flag);
				else
					ptrNativeObject->setSunVisible(flag);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSunVisible_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSunVisible(flag);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRenderQueue*  _stdcall Get_EarthView_World_Graphic_CSceneManager_RenderContext_renderQueue( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::RenderContext* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::RenderContext*) pObjectXXXX;
				EarthView::World::Graphic::CRenderQueue* objXXXX = ptrNativeObject->renderQueue;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_RenderContext_renderQueue( void *pObjectXXXX, EarthView::World::Graphic::CRenderQueue*  value )
			{
				((EarthView::World::Graphic::CSceneManager::RenderContext*)pObjectXXXX)->renderQueue = value;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CViewport*  _stdcall Get_EarthView_World_Graphic_CSceneManager_RenderContext_viewport( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::RenderContext* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::RenderContext*) pObjectXXXX;
				EarthView::World::Graphic::CViewport* objXXXX = ptrNativeObject->viewport;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_RenderContext_viewport( void *pObjectXXXX, EarthView::World::Graphic::CViewport*  value )
			{
				((EarthView::World::Graphic::CSceneManager::RenderContext*)pObjectXXXX)->viewport = value;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall Get_EarthView_World_Graphic_CSceneManager_RenderContext_camera( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::RenderContext* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::RenderContext*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->camera;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_RenderContext_camera( void *pObjectXXXX, EarthView::World::Graphic::CCamera*  value )
			{
				((EarthView::World::Graphic::CSceneManager::RenderContext*)pObjectXXXX)->camera = value;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCompositorChain*  _stdcall Get_EarthView_World_Graphic_CSceneManager_RenderContext_activeChain( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::RenderContext* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::RenderContext*) pObjectXXXX;
				EarthView::World::Graphic::CCompositorChain* objXXXX = ptrNativeObject->activeChain;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_RenderContext_activeChain( void *pObjectXXXX, EarthView::World::Graphic::CCompositorChain*  value )
			{
				((EarthView::World::Graphic::CSceneManager::RenderContext*)pObjectXXXX)->activeChain = value;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRenderSystem::RenderSystemContext*  _stdcall Get_EarthView_World_Graphic_CSceneManager_RenderContext_rsContext( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::RenderContext* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::RenderContext*) pObjectXXXX;
				EarthView::World::Graphic::CRenderSystem::RenderSystemContext* objXXXX = ptrNativeObject->rsContext;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_RenderContext_rsContext( void *pObjectXXXX, EarthView::World::Graphic::CRenderSystem::RenderSystemContext*  value )
			{
				((EarthView::World::Graphic::CSceneManager::RenderContext*)pObjectXXXX)->rsContext = value;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager::RenderContext*  _stdcall EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneManager::RenderContext* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_pauseRendering();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneManager::RenderContext* objXXXX = ptrNativeObject->_pauseRendering();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager::RenderContext*  _stdcall EarthView_World_Graphic_CSceneManager__pauseRendering_RenderContext_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::RenderContext* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_pauseRendering();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::RenderContext* context )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_resumeRendering(context);
				else
					ptrNativeObject->_resumeRendering(context);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__resumeRendering_void_RenderContext_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::RenderContext* context )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_resumeRendering(context);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_push_back_void_CShadowCaster(void *pObjectXXXX, _in EarthView::World::Graphic::CShadowCaster*& ref_t )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ptrNativeObject->push_back(ref_t);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_remove_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  pos )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ptrNativeObject->remove(pos);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_empty_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->empty();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CShadowCaster*  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_OperatorIndex_CShadowCaster_ev_size_t(void *pObjXXXX, _in ev_uint64  n )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList& objYYYY = *(EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjXXXX;
				EarthView::World::Graphic::CShadowCaster* objXXXX = objYYYY[n];
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CShadowCaster*  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_at_CShadowCaster_ev_size_t(void *pObjectXXXX, _in ev_uint64  n )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				EarthView::World::Graphic::CShadowCaster* objXXXX = ptrNativeObject->at(n);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_size_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->size();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_resize_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  newSize )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ptrNativeObject->resize(newSize);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_reserve_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  count )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ptrNativeObject->reserve(count);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_ShadowCasterList_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::ShadowCasterList* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::ShadowCasterList*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback)(_in EarthView::World::Graphic::CMovableObject* object);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback)(_in EarthView::World::Graphic::CMovableObject* object, _inout void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback)(_in EarthView::World::Graphic::CSceneQuery::WorldFragment* fragment);
			class CShadowCasterSceneQueryListenerProxy : public EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener
			{
			private:
				EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback* m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback;
				EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback* m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback;
				EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback* m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback;
			public:
				CShadowCasterSceneQueryListenerProxy(EarthView::World::Core::CNameValuePairList *pList) : CShadowCasterSceneQueryListener(pList)
				{
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject(EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector(EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment(EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback = pCallback;
				}
				virtual ev_bool queryResult(_in EarthView::World::Graphic::CMovableObject* object)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback(object);
						return returnValue;
					}
					else
						return this->CShadowCasterSceneQueryListener::queryResult(object);
				}
				virtual ev_bool queryResult(_in EarthView::World::Graphic::CSceneQuery::WorldFragment* fragment)
				{
					if(m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback(fragment);
						return returnValue;
					}
					else
						return this->CShadowCasterSceneQueryListener::queryResult(fragment);
				}
			};
			REGISTER_FACTORY_CLASS(CShadowCasterSceneQueryListenerProxy);
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_prepare_void_ev_bool_PlaneBoundedVolumeList_CLight_CCamera_ShadowCasterList_Real(void *pObjectXXXX, _in ev_bool lightInFrustum, _in const EarthView::World::Spatial::Math::PlaneBoundedVolumeList* lightClipVolumes, _in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::CSceneManager::ShadowCasterList* casterList, _in Real farDistSquared )
			{
				EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX;
				ptrNativeObject->prepare(lightInFrustum, lightClipVolumes, light, cam, casterList, farDistSquared);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* object )
			{
				EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX;
				if (dynamic_cast<CShadowCasterSceneQueryListenerProxy*>((EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener::queryResult(object);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->queryResult(object);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_Callback* pCallback )
			{
				CShadowCasterSceneQueryListenerProxy* ptr = dynamic_cast<CShadowCasterSceneQueryListenerProxy*>((EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* object )
			{
				EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener::queryResult(object);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneQuery::WorldFragment* fragment )
			{
				EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX;
				if (dynamic_cast<CShadowCasterSceneQueryListenerProxy*>((EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener::queryResult(fragment);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->queryResult(fragment);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_Callback* pCallback )
			{
				CShadowCasterSceneQueryListenerProxy* ptr = dynamic_cast<CShadowCasterSceneQueryListenerProxy*>((EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_WorldFragment_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneQuery::WorldFragment* fragment )
			{
				EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener::queryResult(fragment);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector_Callback* pCallback )
			{
				CShadowCasterSceneQueryListenerProxy* ptr = dynamic_cast<CShadowCasterSceneQueryListenerProxy*>((EarthView::World::Graphic::CSceneManager::CShadowCasterSceneQueryListener*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_CShadowCasterSceneQueryListener_queryResult_ev_bool_CMovableObject_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* cam, _in ev_bool calcScissor )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderShadowVolumesToStencil(light, cam, calcScissor);
				else
					ptrNativeObject->renderShadowVolumesToStencil(light, cam, calcScissor);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderShadowVolumesToStencil_void_CLight_CCamera_ev_bool_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* cam, _in ev_bool calcScissor )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderShadowVolumesToStencil(light, cam, calcScissor);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool(void *pObjectXXXX, _in ev_bool secondpass, _in ev_bool zfail, _in ev_bool twosided )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowVolumeStencilState(secondpass, zfail, twosided);
				else
					ptrNativeObject->setShadowVolumeStencilState(secondpass, zfail, twosided);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowVolumeStencilState_void_ev_bool_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool secondpass, _in ev_bool zfail, _in ev_bool twosided )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowVolumeStencilState(secondpass, zfail, twosided);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CSceneManager::ShadowCasterList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::findShadowCastersForLight(light, camera);
					const EarthView::World::Graphic::CSceneManager::ShadowCasterList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CSceneManager::ShadowCasterList& objXXXX = ptrNativeObject->findShadowCastersForLight(light, camera);
					const EarthView::World::Graphic::CSceneManager::ShadowCasterList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_findShadowCastersForLight_ShadowCasterList_CLight_CCamera_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light, _in const EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::ShadowCasterList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::findShadowCastersForLight(light, camera);
				const EarthView::World::Graphic::CSceneManager::ShadowCasterList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* pGroup, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderBasicQueueGroupObjects(pGroup, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderBasicQueueGroupObjects(pGroup, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderBasicQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* pGroup, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderBasicQueueGroupObjects(pGroup, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderAdditiveStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderAdditiveStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderAdditiveStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderModulativeStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderModulativeStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeStencilShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderModulativeStencilShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTextureShadowCasterQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderTextureShadowCasterQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowCasterQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTextureShadowCasterQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTextureShadowReceiverQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderTextureShadowReceiverQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTextureShadowReceiverQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTextureShadowReceiverQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderModulativeTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderModulativeTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderModulativeTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderModulativeTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderAdditiveTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->renderAdditiveTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderAdditiveTextureShadowedQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderAdditiveTextureShadowedQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
				else
					ptrNativeObject->renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
				else
					ptrNativeObject->renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
				else
					ptrNativeObject->renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
				else
					ptrNativeObject->renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_renderTransparentShadowCasterObjects_void_CQueuedRenderableCollection_OrganisationMode_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in const void* objs, _in int om, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::renderTransparentShadowCasterObjects(*(EarthView::World::Graphic::CQueuedRenderableCollection*)objs, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateRenderQueueSplitOptions();
				else
					ptrNativeObject->updateRenderQueueSplitOptions();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueSplitOptions_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateRenderQueueSplitOptions();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in ev_bool suppressShadows, _in ev_bool suppressRenderState )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateRenderQueueGroupSplitOptions(group, suppressShadows, suppressRenderState);
				else
					ptrNativeObject->updateRenderQueueGroupSplitOptions(group, suppressShadows, suppressRenderState);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateRenderQueueGroupSplitOptions_void_CRenderQueueGroup_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in ev_bool suppressShadows, _in ev_bool suppressRenderState )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateRenderQueueGroupSplitOptions(group, suppressShadows, suppressRenderState);
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera(void *pObjectXXXX, _in const void* ll, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildAndSetScissor(*(EarthView::World::Graphic::LightList*)ll, cam);
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->buildAndSetScissor(*(EarthView::World::Graphic::LightList*)ll, cam);
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetScissor_ClipResult_LightList_CCamera_NoVirtual(void *pObjectXXXX, _in const void* ll, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildAndSetScissor(*(EarthView::World::Graphic::LightList*)ll, cam);
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam, _inout void* rect )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildScissor(l, cam, *(EarthView::World::Graphic::RealRect*)rect);
				else
					ptrNativeObject->buildScissor(l, cam, *(EarthView::World::Graphic::RealRect*)rect);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_buildScissor_void_CLight_CCamera_RealRect_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam, _inout void* rect )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildScissor(l, cam, *(EarthView::World::Graphic::RealRect*)rect);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetScissor_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetScissor();
				else
					ptrNativeObject->resetScissor();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_resetScissor_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_resetScissor_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_resetScissor_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetScissor_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetScissor();
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList(void *pObjectXXXX, _in const void* ll )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildAndSetLightClip(*(EarthView::World::Graphic::LightList*)ll);
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->buildAndSetLightClip(*(EarthView::World::Graphic::LightList*)ll);
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_buildAndSetLightClip_ClipResult_LightList_NoVirtual(void *pObjectXXXX, _in const void* ll )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ClipResult objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildAndSetLightClip(*(EarthView::World::Graphic::LightList*)ll);
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l, _inout void* planes )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildLightClip(l, *(EarthView::World::Spatial::Math::PlaneList*)planes);
				else
					ptrNativeObject->buildLightClip(l, *(EarthView::World::Spatial::Math::PlaneList*)planes);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_buildLightClip_void_CLight_PlaneList_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* l, _inout void* planes )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::buildLightClip(l, *(EarthView::World::Spatial::Math::PlaneList*)planes);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetLightClip_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetLightClip();
				else
					ptrNativeObject->resetLightClip();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_resetLightClip_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_resetLightClip_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_resetLightClip_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_resetLightClip_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::resetLightClip();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::checkCachedLightClippingInfo();
				else
					ptrNativeObject->checkCachedLightClippingInfo();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_checkCachedLightClippingInfo_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::checkCachedLightClippingInfo();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16(void *pObjectXXXX, _in const void* lights, _in ev_uint16 limit )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::useLights(*(EarthView::World::Graphic::LightList*)lights, limit);
				else
					ptrNativeObject->useLights(*(EarthView::World::Graphic::LightList*)lights, limit);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useLights_void_LightList_ev_uint16_NoVirtual(void *pObjectXXXX, _in const void* lights, _in ev_uint16 limit )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::useLights(*(EarthView::World::Graphic::LightList*)lights, limit);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4(void *pObjectXXXX, _in const void* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setViewMatrix(*(EarthView::World::Spatial::Math::CMatrix4*)m);
				else
					ptrNativeObject->setViewMatrix(*(EarthView::World::Spatial::Math::CMatrix4*)m);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setViewMatrix_void_CMatrix4_NoVirtual(void *pObjectXXXX, _in const void* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setViewMatrix(*(EarthView::World::Spatial::Math::CMatrix4*)m);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::LightList* lights )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::useLightsGpuProgram(pass, lights);
				else
					ptrNativeObject->useLightsGpuProgram(pass, lights);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_useLightsGpuProgram_void_CPass_LightList_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in const EarthView::World::Graphic::LightList* lights )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::useLightsGpuProgram(pass, lights);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram(void *pObjectXXXX, _in EarthView::World::Graphic::CGpuProgram* prog )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::bindGpuProgram(prog);
				else
					ptrNativeObject->bindGpuProgram(prog);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_bindGpuProgram_void_CGpuProgram_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CGpuProgram* prog )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::bindGpuProgram(prog);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* p )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateGpuProgramParameters(p);
				else
					ptrNativeObject->updateGpuProgramParameters(p);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateGpuProgramParameters_void_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* p )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateGpuProgramParameters(p);
			}
			extern "C" EV_DLL_EXPORT  const char*  _stdcall EarthView_World_Graphic_CSceneManager_getName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EVString& objXXXX = ptrNativeObject->getName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CSceneManager_getTypeName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getTypeName();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getTypeName();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getTypeName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getTypeName_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getTypeName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CSceneManager_getTypeName_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getTypeName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createCamera(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->createCamera(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_createCamera_CCamera_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createCamera(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCamera(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->getCamera(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_getCamera_CCamera_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCamera(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasCamera(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasCamera(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasCamera_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasCamera(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyCamera(cam);
				else
					ptrNativeObject->destroyCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyCamera(name1);
				else
					ptrNativeObject->destroyCamera(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyCamera_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyCamera(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllCameras_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllCameras();
				else
					ptrNativeObject->destroyAllCameras();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllCameras_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllCameras_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllCameras();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createLight(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->createLight(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createLight(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createLight();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->createLight();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createLight_CLight_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createLight_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_createLight_CLight_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createLight();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_uint16 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightCount();
					return objXXXX;
				}
				else
				{
					ev_uint16 objXXXX = ptrNativeObject->getLightCount();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CSceneManager_getLightCount_ev_uint16_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightCount();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLight(index);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->getLight(index);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLight(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLight(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->getLight(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CLight*  _stdcall EarthView_World_Graphic_CSceneManager_getLight_CLight_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CLight* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLight(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasLight(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasLight(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasLight_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasLight(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* l )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::PlaneList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightClippingPlanes(l);
					const EarthView::World::Spatial::Math::PlaneList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::PlaneList& objXXXX = ptrNativeObject->getLightClippingPlanes(l);
					const EarthView::World::Spatial::Math::PlaneList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getLightClippingPlanes_PlaneList_CLight_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* l )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Spatial::Math::PlaneList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightClippingPlanes(l);
				const EarthView::World::Spatial::Math::PlaneList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::RealRect& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightScissorRect(l, cam);
					const EarthView::World::Graphic::RealRect *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::RealRect& objXXXX = ptrNativeObject->getLightScissorRect(l, cam);
					const EarthView::World::Graphic::RealRect *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getLightScissorRect_RealRect_CLight_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* l, _in const EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::RealRect& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getLightScissorRect(l, cam);
				const EarthView::World::Graphic::RealRect *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyLight(name1);
				else
					ptrNativeObject->destroyLight(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyLight(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyLight(light);
				else
					ptrNativeObject->destroyLight(light);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyLight_void_CLight_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CLight* light )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyLight(light);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllLights_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllLights();
				else
					ptrNativeObject->destroyAllLights();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllLights_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllLights_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllLights_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllLights_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllLights();
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowTexName();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getSoftShadowTexName();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowTexName_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowTexName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTexCam();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->getShadowTexCam();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexCam_CCamera_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTexCam();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Spatial::Math::CMatrix4 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowProjMatrix(index);
					EarthView::World::Spatial::Math::CMatrix4 *pXXXX = new EarthView::World::Spatial::Math::CMatrix4(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Spatial::Math::CMatrix4 objXXXX = ptrNativeObject->getSoftShadowProjMatrix(index);
					EarthView::World::Spatial::Math::CMatrix4 *pXXXX = new EarthView::World::Spatial::Math::CMatrix4(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowProjMatrix_CMatrix4_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Spatial::Math::CMatrix4 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowProjMatrix(index);
				EarthView::World::Spatial::Math::CMatrix4 *pXXXX = new EarthView::World::Spatial::Math::CMatrix4(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Spatial::Math::CVector4 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadeEyeSpaceDepthArray();
					EarthView::World::Spatial::Math::CVector4 *pXXXX = new EarthView::World::Spatial::Math::CVector4(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Spatial::Math::CVector4 objXXXX = ptrNativeObject->getCascadeEyeSpaceDepthArray();
					EarthView::World::Spatial::Math::CVector4 *pXXXX = new EarthView::World::Spatial::Math::CVector4(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getCascadeEyeSpaceDepthArray_CVector4_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Spatial::Math::CVector4 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadeEyeSpaceDepthArray();
				EarthView::World::Spatial::Math::CVector4 *pXXXX = new EarthView::World::Spatial::Math::CVector4(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowNearClip(index);
					return objXXXX;
				}
				else
				{
					float objXXXX = ptrNativeObject->getSoftShadowNearClip(index);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNearClip_float_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowNearClip(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowFarClip(index);
					return objXXXX;
				}
				else
				{
					float objXXXX = ptrNativeObject->getSoftShadowFarClip(index);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowFarClip_float_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowFarClip(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getIsUseSoftShadowFitToCascadesMode();
					return objXXXX;
				}
				else
				{
					bool objXXXX = ptrNativeObject->getIsUseSoftShadowFitToCascadesMode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowFitToCascadesMode_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getIsUseSoftShadowFitToCascadesMode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool(void *pObjectXXXX, _in bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setIsUseSoftShadowFitToCascadesMode(flag);
				else
					ptrNativeObject->setIsUseSoftShadowFitToCascadesMode(flag);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowFitToCascadesMode_void_bool_NoVirtual(void *pObjectXXXX, _in bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setIsUseSoftShadowFitToCascadesMode(flag);
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCurrentClipIndex();
					return objXXXX;
				}
				else
				{
					ev_uint8 objXXXX = ptrNativeObject->getCurrentClipIndex();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CSceneManager_getCurrentClipIndex_ev_uint8_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCurrentClipIndex();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getIsUseSoftShadowTechnique();
					return objXXXX;
				}
				else
				{
					bool objXXXX = ptrNativeObject->getIsUseSoftShadowTechnique();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_getIsUseSoftShadowTechnique_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getIsUseSoftShadowTechnique();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool(void *pObjectXXXX, _in bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setIsUseSoftShadowTechnique(flag);
				else
					ptrNativeObject->setIsUseSoftShadowTechnique(flag);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setIsUseSoftShadowTechnique_void_bool_NoVirtual(void *pObjectXXXX, _in bool flag )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setIsUseSoftShadowTechnique(flag);
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadePartitionsPercent();
					return objXXXX;
				}
				else
				{
					float objXXXX = ptrNativeObject->getCascadePartitionsPercent();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsPercent_float_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadePartitionsPercent();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float(void *pObjectXXXX, _in float percent )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCascadePartitionsPercent(percent);
				else
					ptrNativeObject->setCascadePartitionsPercent(percent);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsPercent_void_float_NoVirtual(void *pObjectXXXX, _in float percent )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCascadePartitionsPercent(percent);
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					int objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadePartitionsDistance(index);
					return objXXXX;
				}
				else
				{
					int objXXXX = ptrNativeObject->getCascadePartitionsDistance(index);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getCascadePartitionsDistance_int_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 index )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				int objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCascadePartitionsDistance(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8(void *pObjectXXXX, _in ev_uint8 index, _in ev_uint8 distance )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCascadePartitionsDistance(index, distance);
				else
					ptrNativeObject->setCascadePartitionsDistance(index, distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCascadePartitionsDistance_void_ev_uint8_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 index, _in ev_uint8 distance )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCascadePartitionsDistance(index, distance);
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::PixelFormat objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowOffsetFormat();
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::PixelFormat objXXXX = ptrNativeObject->getSoftShadowOffsetFormat();
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowOffsetFormat_PixelFormat_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::PixelFormat objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowOffsetFormat();
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::checkShadowCasterInFrustum(camera);
				else
					ptrNativeObject->checkShadowCasterInFrustum(camera);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_checkShadowCasterInFrustum_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::checkShadowCasterInFrustum(camera);
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasShadowCasterInFrustum();
					return objXXXX;
				}
				else
				{
					bool objXXXX = ptrNativeObject->hasShadowCasterInFrustum();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  bool  _stdcall EarthView_World_Graphic_CSceneManager_hasShadowCasterInFrustum_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasShadowCasterInFrustum();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowLightBleedPower();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getSoftShadowLightBleedPower();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowLightBleedPower_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowLightBleedPower();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real(void *pObjectXXXX, _in Real power )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowLightBleedPower(power);
				else
					ptrNativeObject->setSoftShadowLightBleedPower(power);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowLightBleedPower_void_Real_NoVirtual(void *pObjectXXXX, _in Real power )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowLightBleedPower(power);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowDepthOffset();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getSoftShadowDepthOffset();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowDepthOffset_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowDepthOffset();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real(void *pObjectXXXX, _in Real offset )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowDepthOffset(offset);
				else
					ptrNativeObject->setSoftShadowDepthOffset(offset);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowDepthOffset_void_Real_NoVirtual(void *pObjectXXXX, _in Real offset )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowDepthOffset(offset);
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowNormalFactor();
					return objXXXX;
				}
				else
				{
					float objXXXX = ptrNativeObject->getSoftShadowNormalFactor();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  float  _stdcall EarthView_World_Graphic_CSceneManager_getSoftShadowNormalFactor_float_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				float objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSoftShadowNormalFactor();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float(void *pObjectXXXX, _in float factor )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowNormalFactor(factor);
				else
					ptrNativeObject->setSoftShadowNormalFactor(factor);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSoftShadowNormalFactor_void_float_NoVirtual(void *pObjectXXXX, _in float factor )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSoftShadowNormalFactor(factor);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_notifyLightsDirty();
				else
					ptrNativeObject->_notifyLightsDirty();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyLightsDirty_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_notifyLightsDirty();
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CSceneManager__getLightsDirtyCounter_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->_getLightsDirtyCounter();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_getLightsAffectingFrustum();
					const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->_getLightsAffectingFrustum();
					const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager__getLightsAffectingFrustum_LightList_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::LightList& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_getLightsAffectingFrustum();
				const EarthView::World::Graphic::LightList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32(void *pObjectXXXX, _in const void* position, _in Real radius, _inout void* destList, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
				else
					ptrNativeObject->_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* position, _in Real radius, _inout void* destList, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList(void *pObjectXXXX, _in const void* position, _in Real radius, _inout void* destList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList);
				else
					ptrNativeObject->_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CVector3_Real_LightList_NoVirtual(void *pObjectXXXX, _in const void* position, _in Real radius, _inout void* destList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(*(EarthView::World::Spatial::Math::CVector3*)position, radius, *(EarthView::World::Graphic::LightList*)destList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::showImage(visible);
				else
					ptrNativeObject->showImage(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showImage_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::showImage(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getImageVisible();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getImageVisible();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getImageVisible_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getImageVisible();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::showOcean(visible);
				else
					ptrNativeObject->showOcean(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showOcean_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::showOcean(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOceanVisible();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getOceanVisible();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOceanVisible_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOceanVisible();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32(void *pObjectXXXX, _in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
				else
					ptrNativeObject->_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_ev_uint32_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList, _in ev_uint32 lightMask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList, lightMask);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList(void *pObjectXXXX, _in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList);
				else
					ptrNativeObject->_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__populateLightList_void_CSceneNode_Real_LightList_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CSceneNode* sn, _in Real radius, _inout void* destList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_populateLightList(sn, radius, *(EarthView::World::Graphic::LightList*)destList);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->createSceneNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNode(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->createSceneNode(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_createSceneNode_CSceneNode_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSceneNode(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroySceneNode(name1);
				else
					ptrNativeObject->destroySceneNode(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroySceneNode(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneNode* sn )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroySceneNode(sn);
				else
					ptrNativeObject->destroySceneNode(sn);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroySceneNode_void_CSceneNode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneNode* sn )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroySceneNode(sn);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRootSceneNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getRootSceneNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getRootSceneNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRootSceneNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSceneNode(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getSceneNode(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSceneNode_CSceneNode_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSceneNode(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasSceneNode(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasSceneNode(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasSceneNode_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasSceneNode(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const void* subentityIndics, _in const char* groupName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics, groupName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics, groupName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_EVString_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const void* subentityIndics, _in const char* groupName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics, groupName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const char* groupName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, groupName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, meshName1, groupName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const char* groupName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, groupName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_IntVector_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const char* meshName, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString(void *pObjectXXXX, _in const char* entityName, _in const char* meshName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, meshName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const char* meshName )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, meshName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector(void *pObjectXXXX, _in const char* entityName, _in const void* pMesh, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_IntVector_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const void* pMesh, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr(void *pObjectXXXX, _in const char* entityName, _in const void* pMesh )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_CMeshPtr_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in const void* pMesh )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, *(EarthView::World::Graphic::CMeshPtr*)pMesh);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector(void *pObjectXXXX, _in const void* pMesh, _in const void* subentityIndics )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_IntVector_NoVirtual(void *pObjectXXXX, _in const void* pMesh, _in const void* subentityIndics )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh, *(EarthView::World::Core::IntVector*)subentityIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr(void *pObjectXXXX, _in const void* pMesh )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_CMeshPtr_NoVirtual(void *pObjectXXXX, _in const void* pMesh )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(*(EarthView::World::Graphic::CMeshPtr*)pMesh);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector(void *pObjectXXXX, _in const char* meshName, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_IntVector_NoVirtual(void *pObjectXXXX, _in const char* meshName, _in const void* subentityIndics )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(meshName1, *(EarthView::World::Core::IntVector*)subentityIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString(void *pObjectXXXX, _in const char* meshName )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(meshName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(meshName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_NoVirtual(void *pObjectXXXX, _in const char* meshName )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(meshName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType(void *pObjectXXXX, _in const char* entityName, _in int ptype )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, (EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity(entityName1, (EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_EVString_PrefabType_NoVirtual(void *pObjectXXXX, _in const char* entityName, _in int ptype )
			{
				EarthView::World::Core::ev_string entityName1 = entityName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity(entityName1, (EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType(void *pObjectXXXX, _in int ptype )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity((EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->createEntity((EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createEntity_CEntity_PrefabType_NoVirtual(void *pObjectXXXX, _in int ptype )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createEntity((EarthView::World::Graphic::CSceneManager::PrefabType)ptype);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getEntity(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->getEntity(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEntity*  _stdcall EarthView_World_Graphic_CSceneManager_getEntity_CEntity_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getEntity(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasEntity(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasEntity(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasEntity_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasEntity(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity(void *pObjectXXXX, _in EarthView::World::Graphic::CEntity* ent )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyEntity(ent);
				else
					ptrNativeObject->destroyEntity(ent);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_CEntity_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CEntity* ent )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyEntity(ent);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyEntity(name1);
				else
					ptrNativeObject->destroyEntity(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyEntity_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyEntity(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllEntities_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllEntities();
				else
					ptrNativeObject->destroyAllEntities();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllEntities_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllEntities_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllEntities();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createManualObject(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->createManualObject(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createManualObject(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createManualObject();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->createManualObject();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_createManualObject_CManualObject_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createManualObject();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getManualObject(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->getManualObject(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CManualObject*  _stdcall EarthView_World_Graphic_CSceneManager_getManualObject_CManualObject_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CManualObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getManualObject(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasManualObject(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasManualObject(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasManualObject_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasManualObject(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject(void *pObjectXXXX, _in EarthView::World::Graphic::CManualObject* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyManualObject(obj);
				else
					ptrNativeObject->destroyManualObject(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_CManualObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CManualObject* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyManualObject(obj);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyManualObject(name1);
				else
					ptrNativeObject->destroyManualObject(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyManualObject_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyManualObject(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllManualObjects();
				else
					ptrNativeObject->destroyAllManualObjects();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllManualObjects_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllManualObjects();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::usingWebMercator();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->usingWebMercator();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_usingWebMercator_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::usingWebMercator();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardChain(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->createBillboardChain(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardChain(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardChain();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->createBillboardChain();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardChain_CBillboardChain_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardChain();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBillboardChain(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->getBillboardChain(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardChain*  _stdcall EarthView_World_Graphic_CSceneManager_getBillboardChain_CBillboardChain_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBillboardChain(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasBillboardChain(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasBillboardChain(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardChain_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasBillboardChain(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain(void *pObjectXXXX, _in EarthView::World::Graphic::CBillboardChain* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardChain(obj);
				else
					ptrNativeObject->destroyBillboardChain(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_CBillboardChain_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CBillboardChain* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardChain(obj);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardChain(name1);
				else
					ptrNativeObject->destroyBillboardChain(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardChain_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardChain(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllBillboardChains();
				else
					ptrNativeObject->destroyAllBillboardChains();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardChains_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllBillboardChains();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRibbonTrail(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->createRibbonTrail(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRibbonTrail(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRibbonTrail();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->createRibbonTrail();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_createRibbonTrail_CRibbonTrail_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRibbonTrail();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRibbonTrail(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->getRibbonTrail(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRibbonTrail*  _stdcall EarthView_World_Graphic_CSceneManager_getRibbonTrail_CRibbonTrail_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRibbonTrail* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRibbonTrail(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasRibbonTrail(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasRibbonTrail(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasRibbonTrail_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasRibbonTrail(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail(void *pObjectXXXX, _in EarthView::World::Graphic::CRibbonTrail* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyRibbonTrail(obj);
				else
					ptrNativeObject->destroyRibbonTrail(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_CRibbonTrail_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRibbonTrail* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyRibbonTrail(obj);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyRibbonTrail(name1);
				else
					ptrNativeObject->destroyRibbonTrail(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyRibbonTrail_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyRibbonTrail(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllRibbonTrails();
				else
					ptrNativeObject->destroyAllRibbonTrails();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllRibbonTrails_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllRibbonTrails();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* templateName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string templateName1 = templateName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, templateName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(name1, templateName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* templateName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string templateName1 = templateName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, templateName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString(void *pObjectXXXX, _in const char* name, _in ev_uint64  quota, _in const char* resourceGroup )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string resourceGroup1 = resourceGroup;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, quota, resourceGroup1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(name1, quota, resourceGroup1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in ev_uint64  quota, _in const char* resourceGroup )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string resourceGroup1 = resourceGroup;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, quota, resourceGroup1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t(void *pObjectXXXX, _in const char* name, _in ev_uint64  quota )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, quota);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(name1, quota);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_ev_size_t_NoVirtual(void *pObjectXXXX, _in const char* name, _in ev_uint64  quota )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1, quota);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString(void *pObjectXXXX, _in ev_uint64  quota, _in const char* resourceGroup )
			{
				EarthView::World::Core::ev_string resourceGroup1 = resourceGroup;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(quota, resourceGroup1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(quota, resourceGroup1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_EVString_NoVirtual(void *pObjectXXXX, _in ev_uint64  quota, _in const char* resourceGroup )
			{
				EarthView::World::Core::ev_string resourceGroup1 = resourceGroup;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(quota, resourceGroup1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t(void *pObjectXXXX, _in ev_uint64  quota )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(quota);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem(quota);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  quota )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem(quota);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->createParticleSystem();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_createParticleSystem_CParticleSystem_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createParticleSystem();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getParticleSystem(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->getParticleSystem(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem*  _stdcall EarthView_World_Graphic_CSceneManager_getParticleSystem_CParticleSystem_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getParticleSystem(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasParticleSystem(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasParticleSystem(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasParticleSystem_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasParticleSystem(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem(void *pObjectXXXX, _in EarthView::World::Graphic::CParticleSystem* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyParticleSystem(obj);
				else
					ptrNativeObject->destroyParticleSystem(obj);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_CParticleSystem_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CParticleSystem* obj )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyParticleSystem(obj);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyParticleSystem(name1);
				else
					ptrNativeObject->destroyParticleSystem(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyParticleSystem_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyParticleSystem(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllParticleSystems();
				else
					ptrNativeObject->destroyAllParticleSystems();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllParticleSystems_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllParticleSystems();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_clearScene_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::clearScene();
				else
					ptrNativeObject->clearScene();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_clearScene_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_clearScene_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_clearScene_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_clearScene_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::clearScene();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setAmbientLight_void_CColourValue(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setAmbientLight(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getAmbientLight_CColourValue(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->getAmbientLight();
				const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(filename1);
				else
					ptrNativeObject->prepareWorldGeometry(filename1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(filename1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
				else
					ptrNativeObject->prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_EVString_NoVirtual(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
				else
					ptrNativeObject->prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_prepareWorldGeometry_void_DataStreamPtr_NoVirtual(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::prepareWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(filename1);
				else
					ptrNativeObject->setWorldGeometry(filename1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(filename1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
				else
					ptrNativeObject->setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_EVString_NoVirtual(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
				else
					ptrNativeObject->setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometry_void_DataStreamPtr_NoVirtual(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(filename1);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->estimateWorldGeometry(filename1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_EVString_NoVirtual(void *pObjectXXXX, _in const char* filename )
			{
				EarthView::World::Core::ev_string filename1 = filename;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(filename1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_EVString_NoVirtual(void *pObjectXXXX, _inout void* stream, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream, typeName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_estimateWorldGeometry_ev_size_t_DataStreamPtr_NoVirtual(void *pObjectXXXX, _inout void* stream )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::estimateWorldGeometry(*(EarthView::World::Core::DataStreamPtr*)stream);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool(void *pObjectXXXX, _in ev_bool random )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSuggestedViewpoint(random);
					EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->getSuggestedViewpoint(random);
					EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool random )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSuggestedViewpoint(random);
				EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSuggestedViewpoint();
					EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->getSuggestedViewpoint();
					EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getSuggestedViewpoint_ViewPoint_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ViewPoint objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSuggestedViewpoint();
				EarthView::World::Graphic::ViewPoint *pXXXX = new EarthView::World::Graphic::ViewPoint(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void(void *pObjectXXXX, _in const char* strKey, _in const void* pValue )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::setOption(strKey1, pValue);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setOption(strKey1, pValue);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_setOption_ev_bool_EVString_void_NoVirtual(void *pObjectXXXX, _in const char* strKey, _in const void* pValue )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::setOption(strKey1, pValue);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void(void *pObjectXXXX, _in const char* strKey, _in void* pDestValue )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOption(strKey1, pDestValue);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getOption(strKey1, pDestValue);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOption_ev_bool_EVString_void_NoVirtual(void *pObjectXXXX, _in const char* strKey, _in void* pDestValue )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOption(strKey1, pDestValue);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString(void *pObjectXXXX, _in const char* strKey )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasOption(strKey1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasOption(strKey1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasOption_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* strKey )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasOption(strKey1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector(void *pObjectXXXX, _in const char* strKey, _inout void* refValueList )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOptionValues(strKey1, *(EarthView::World::Core::StringVector*)refValueList);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getOptionValues(strKey1, *(EarthView::World::Core::StringVector*)refValueList);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOptionValues_ev_bool_EVString_StringVector_NoVirtual(void *pObjectXXXX, _in const char* strKey, _inout void* refValueList )
			{
				EarthView::World::Core::ev_string strKey1 = strKey;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOptionValues(strKey1, *(EarthView::World::Core::StringVector*)refValueList);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector(void *pObjectXXXX, _inout void* refKeys )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOptionKeys(*(EarthView::World::Core::StringVector*)refKeys);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getOptionKeys(*(EarthView::World::Core::StringVector*)refKeys);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getOptionKeys_ev_bool_StringVector_NoVirtual(void *pObjectXXXX, _inout void* refKeys )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getOptionKeys(*(EarthView::World::Core::StringVector*)refKeys);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_updateSceneGraph(cam);
				else
					ptrNativeObject->_updateSceneGraph(cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__updateSceneGraph_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_updateSceneGraph(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::VisibleObjectsBoundsInfo* visibleBounds, _in ev_bool onlyShadowCasters )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_findVisibleObjects(cam, visibleBounds, onlyShadowCasters);
				else
					ptrNativeObject->_findVisibleObjects(cam, visibleBounds, onlyShadowCasters);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__findVisibleObjects_void_CCamera_VisibleObjectsBoundsInfo_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam, _in EarthView::World::Graphic::VisibleObjectsBoundsInfo* visibleBounds, _in ev_bool onlyShadowCasters )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_findVisibleObjects(cam, visibleBounds, onlyShadowCasters);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__applySceneAnimations_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_applySceneAnimations();
				else
					ptrNativeObject->_applySceneAnimations();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__applySceneAnimations_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__applySceneAnimations_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_applySceneAnimations();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderVisibleObjects();
				else
					ptrNativeObject->_renderVisibleObjects();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderVisibleObjects_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderVisibleObjects();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera, _in EarthView::World::Graphic::CViewport* vp, _in ev_bool includeOverlays )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderScene(camera, vp, includeOverlays);
				else
					ptrNativeObject->_renderScene(camera, vp, includeOverlays);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderScene_void_CCamera_CViewport_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* camera, _in EarthView::World::Graphic::CViewport* vp, _in ev_bool includeOverlays )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderScene(camera, vp, includeOverlays);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_queueSkiesForRendering(cam);
				else
					ptrNativeObject->_queueSkiesForRendering(cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__queueSkiesForRendering_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_queueSkiesForRendering(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderSystem* ref_sys )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setDestinationRenderSystem(ref_sys);
				else
					ptrNativeObject->_setDestinationRenderSystem(ref_sys);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setDestinationRenderSystem_void_CRenderSystem_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderSystem* ref_sys )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setDestinationRenderSystem(ref_sys);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments, groupName1);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow, xsegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst, _in Real bow )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst, bow);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
				else
					ptrNativeObject->setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlane_void_ev_bool_CPlane_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments, groupName1);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow, xsegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue, _in Real bow )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue, bow);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale, tiling);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName, _in Real scale )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1, scale);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
				else
					ptrNativeObject->_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyPlane_void_ev_bool_CPlane_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const void* plane, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyPlane(enable, *(EarthView::World::Spatial::Math::CPlane*)plane, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlaneEnabled(enable);
				else
					ptrNativeObject->setSkyPlaneEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyPlaneEnabled_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyPlaneEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyPlaneEnabled();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isSkyPlaneEnabled();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyPlaneEnabled_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyPlaneEnabled();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyPlaneNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getSkyPlaneNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyPlaneNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyPlaneGenParameters();
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters& objXXXX = ptrNativeObject->getSkyPlaneGenParameters();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyPlaneGenParameters_SkyPlaneGenParameters_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::SkyPlaneGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyPlaneGenParameters();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
				else
					ptrNativeObject->setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
				else
					ptrNativeObject->setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_CQuaternion_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst);
				else
					ptrNativeObject->setSkyBox(enable, materialName1, distance, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance);
				else
					ptrNativeObject->setSkyBox(enable, materialName1, distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1, distance);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1);
				else
					ptrNativeObject->setSkyBox(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBox_void_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBox(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
				else
					ptrNativeObject->_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
				else
					ptrNativeObject->_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_CQuaternion_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue);
				else
					ptrNativeObject->_setSkyBox(enable, materialName1, distance, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance);
				else
					ptrNativeObject->_setSkyBox(enable, materialName1, distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1, distance);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1);
				else
					ptrNativeObject->_setSkyBox(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyBox_void_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyBox(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBoxEnabled(enable);
				else
					ptrNativeObject->setSkyBoxEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyBoxEnabled_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyBoxEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyBoxEnabled();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isSkyBoxEnabled();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyBoxEnabled_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyBoxEnabled();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyBoxNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getSkyBoxNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyBoxNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyBoxGenParameters();
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters& objXXXX = ptrNativeObject->getSkyBoxGenParameters();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyBoxGenParameters_SkyBoxGenParameters_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::SkyBoxGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyBoxGenParameters();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_CQuaternion_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_bool drawFirst )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance, drawFirst);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling, distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling, distance);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature, tiling);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature, tiling);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature);
				else
					ptrNativeObject->setSkyDome(enable, materialName1, curvature);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1, curvature);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1);
				else
					ptrNativeObject->setSkyDome(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDome_void_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDome(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep, _in const char* groupName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments, _in ev_int32 ysegments_keep )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments, ysegments_keep);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments, _in ev_int32 ysegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments, ysegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_ev_int32_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation, _in ev_int32 xsegments )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation, xsegments);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_CQuaternion_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue, _in const void* orientation )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue, *(EarthView::World::Spatial::Math::CQuaternion*)orientation);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance, _in ev_uint8 renderQueue )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance, renderQueue);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling, distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling, _in Real distance )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling, distance);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature, tiling);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature, _in Real tiling )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature, tiling);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1, curvature);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Real_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName, _in Real curvature )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1, curvature);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1);
				else
					ptrNativeObject->_setSkyDome(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setSkyDome_void_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in ev_bool enable, _in const char* materialName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setSkyDome(enable, materialName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDomeEnabled(enable);
				else
					ptrNativeObject->setSkyDomeEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSkyDomeEnabled_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSkyDomeEnabled(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyDomeEnabled();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isSkyDomeEnabled();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isSkyDomeEnabled_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isSkyDomeEnabled();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyDomeNode();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->getSkyDomeNode();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneNode*  _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeNode_CSceneNode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneNode* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyDomeNode();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyDomeGenParameters();
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters& objXXXX = ptrNativeObject->getSkyDomeGenParameters();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters&  _stdcall EarthView_World_Graphic_CSceneManager_getSkyDomeGenParameters_SkyDomeGenParameters_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::SkyDomeGenParameters& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSkyDomeGenParameters();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void_FogMode_CColourValue_Real_Real_Real(void *pObjectXXXX, _in int mode, _in const void* colour, _in Real expDensity, _in Real linearStart, _in Real linearEnd )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog((EarthView::World::Graphic::FogMode)mode, *(EarthView::World::Graphic::CColourValue*)colour, expDensity, linearStart, linearEnd);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void_FogMode_CColourValue_Real_Real(void *pObjectXXXX, _in int mode, _in const void* colour, _in Real expDensity, _in Real linearStart )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog((EarthView::World::Graphic::FogMode)mode, *(EarthView::World::Graphic::CColourValue*)colour, expDensity, linearStart);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void_FogMode_CColourValue_Real(void *pObjectXXXX, _in int mode, _in const void* colour, _in Real expDensity )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog((EarthView::World::Graphic::FogMode)mode, *(EarthView::World::Graphic::CColourValue*)colour, expDensity);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void_FogMode_CColourValue(void *pObjectXXXX, _in int mode, _in const void* colour )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog((EarthView::World::Graphic::FogMode)mode, *(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void_FogMode(void *pObjectXXXX, _in int mode )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog((EarthView::World::Graphic::FogMode)mode);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFog_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setFog();
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getFogMode_FogMode(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::FogMode objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogMode();
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::FogMode objXXXX = ptrNativeObject->getFogMode();
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFogMode_FogMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getFogMode_FogMode_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::FogMode objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogMode();
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogColour();
					const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->getFogColour();
					const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getFogColour_CColourValue_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogColour();
				const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogStart_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogStart();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getFogStart();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFogStart_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFogStart_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFogStart_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogStart_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogStart();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogEnd_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogEnd();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getFogEnd();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFogEnd_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFogEnd_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFogEnd_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogEnd_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogEnd();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogDensity_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogDensity();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getFogDensity();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFogDensity_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFogDensity_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFogDensity_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getFogDensity_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFogDensity();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32(void *pObjectXXXX, _in const char* name, _in ev_uint32 poolSize )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(name1, poolSize);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->createBillboardSet(name1, poolSize);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_ev_uint32_NoVirtual(void *pObjectXXXX, _in const char* name, _in ev_uint32 poolSize )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(name1, poolSize);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->createBillboardSet(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32(void *pObjectXXXX, _in ev_uint32 poolSize )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(poolSize);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->createBillboardSet(poolSize);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 poolSize )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet(poolSize);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->createBillboardSet();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_createBillboardSet_CBillboardSet_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createBillboardSet();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBillboardSet(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->getBillboardSet(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CBillboardSet*  _stdcall EarthView_World_Graphic_CSceneManager_getBillboardSet_CBillboardSet_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CBillboardSet* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBillboardSet(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasBillboardSet(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasBillboardSet(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasBillboardSet_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasBillboardSet(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet(void *pObjectXXXX, _in EarthView::World::Graphic::CBillboardSet* set )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardSet(set);
				else
					ptrNativeObject->destroyBillboardSet(set);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_CBillboardSet_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CBillboardSet* set )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardSet(set);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardSet(name1);
				else
					ptrNativeObject->destroyBillboardSet(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyBillboardSet_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyBillboardSet(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllBillboardSets();
				else
					ptrNativeObject->destroyAllBillboardSets();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllBillboardSets_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllBillboardSets();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool(void *pObjectXXXX, _in ev_bool display )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setDisplaySceneNodes(display);
				else
					ptrNativeObject->setDisplaySceneNodes(display);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setDisplaySceneNodes_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool display )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setDisplaySceneNodes(display);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getDisplaySceneNodes();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getDisplaySceneNodes();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getDisplaySceneNodes_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getDisplaySceneNodes();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real(void *pObjectXXXX, _in const char* name, _in Real length )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAnimation(name1, length);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->createAnimation(name1, length);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_createAnimation_CAnimation_EVString_Real_NoVirtual(void *pObjectXXXX, _in const char* name, _in Real length )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAnimation(name1, length);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getAnimation(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->getAnimation(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimation_CAnimation_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getAnimation(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasAnimation(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasAnimation(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasAnimation_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasAnimation(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAnimation(name1);
				else
					ptrNativeObject->destroyAnimation(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimation_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAnimation(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllAnimations();
				else
					ptrNativeObject->destroyAllAnimations();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimations_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllAnimations();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimationState*  _stdcall EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString(void *pObjectXXXX, _in const char* animName )
			{
				EarthView::World::Core::ev_string animName1 = animName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAnimationState(animName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->createAnimationState(animName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimationState*  _stdcall EarthView_World_Graphic_CSceneManager_createAnimationState_CAnimationState_EVString_NoVirtual(void *pObjectXXXX, _in const char* animName )
			{
				EarthView::World::Core::ev_string animName1 = animName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAnimationState(animName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimationState*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString(void *pObjectXXXX, _in const char* animName )
			{
				EarthView::World::Core::ev_string animName1 = animName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getAnimationState(animName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->getAnimationState(animName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimationState*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimationState_CAnimationState_EVString_NoVirtual(void *pObjectXXXX, _in const char* animName )
			{
				EarthView::World::Core::ev_string animName1 = animName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAnimationState* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getAnimationState(animName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasAnimationState(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasAnimationState(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasAnimationState_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasAnimationState(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAnimationState(name1);
				else
					ptrNativeObject->destroyAnimationState(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAnimationState_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAnimationState(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllAnimationStates();
				else
					ptrNativeObject->destroyAllAnimationStates();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllAnimationStates_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllAnimationStates();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderOperation_CPass_CViewport_CMatrix4_CMatrix4_CMatrix4_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderOperation* rend, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* worldMatrix, _in const void* viewMatrix, _in const void* projMatrix )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)worldMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration, manualLightList);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame, _in ev_bool lightScissoringClipping )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame, lightScissoringClipping);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix, _in ev_bool doBeginEndFrame )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix, doBeginEndFrame);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
				else
					ptrNativeObject->manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_manualRender_void_CRenderable_CPass_CViewport_CMatrix4_CMatrix4_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable* rend, _in const EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CViewport* vp, _in const void* viewMatrix, _in const void* projMatrix )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::manualRender(rend, pass, vp, *(EarthView::World::Spatial::Math::CMatrix4*)viewMatrix, *(EarthView::World::Spatial::Math::CMatrix4*)projMatrix);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRenderQueue*  _stdcall EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRenderQueue* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRenderQueue();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRenderQueue* objXXXX = ptrNativeObject->getRenderQueue();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRenderQueue*  _stdcall EarthView_World_Graphic_CSceneManager_getRenderQueue_CRenderQueue_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRenderQueue* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getRenderQueue();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueListener* ref_newListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::addRenderQueueListener(ref_newListener);
				else
					ptrNativeObject->addRenderQueueListener(ref_newListener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addRenderQueueListener_void_CRenderQueueListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueListener* ref_newListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::addRenderQueueListener(ref_newListener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueListener* delListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeRenderQueueListener(delListener);
				else
					ptrNativeObject->removeRenderQueueListener(delListener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeRenderQueueListener_void_CRenderQueueListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueListener* delListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeRenderQueueListener(delListener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderObjectListener* ref_newListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::addRenderObjectListener(ref_newListener);
				else
					ptrNativeObject->addRenderObjectListener(ref_newListener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addRenderObjectListener_void_CRenderObjectListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderObjectListener* ref_newListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::addRenderObjectListener(ref_newListener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderObjectListener* delListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeRenderObjectListener(delListener);
				else
					ptrNativeObject->removeRenderObjectListener(delListener);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeRenderObjectListener_void_CRenderObjectListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderObjectListener* delListener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeRenderObjectListener(delListener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::addSpecialCaseRenderQueue(qid);
				else
					ptrNativeObject->addSpecialCaseRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addSpecialCaseRenderQueue_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::addSpecialCaseRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeSpecialCaseRenderQueue(qid);
				else
					ptrNativeObject->removeSpecialCaseRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeSpecialCaseRenderQueue_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeSpecialCaseRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::clearSpecialCaseRenderQueues();
				else
					ptrNativeObject->clearSpecialCaseRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_clearSpecialCaseRenderQueues_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::clearSpecialCaseRenderQueues();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode(void *pObjectXXXX, _in int mode )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSpecialCaseRenderQueueMode((EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode)mode);
				else
					ptrNativeObject->setSpecialCaseRenderQueueMode((EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode)mode);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setSpecialCaseRenderQueueMode_void_SpecialCaseRenderQueueMode_NoVirtual(void *pObjectXXXX, _in int mode )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setSpecialCaseRenderQueueMode((EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode)mode);
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSpecialCaseRenderQueueMode();
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode objXXXX = ptrNativeObject->getSpecialCaseRenderQueueMode();
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getSpecialCaseRenderQueueMode_SpecialCaseRenderQueueMode_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::SpecialCaseRenderQueueMode objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getSpecialCaseRenderQueueMode();
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isRenderQueueToBeProcessed(qid);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isRenderQueueToBeProcessed(qid);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isRenderQueueToBeProcessed_ev_bool_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isRenderQueueToBeProcessed(qid);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometryRenderQueue(qid);
				else
					ptrNativeObject->setWorldGeometryRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setWorldGeometryRenderQueue_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 qid )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setWorldGeometryRenderQueue(qid);
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getWorldGeometryRenderQueue();
					return objXXXX;
				}
				else
				{
					ev_uint8 objXXXX = ptrNativeObject->getWorldGeometryRenderQueue();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint8  _stdcall EarthView_World_Graphic_CSceneManager_getWorldGeometryRenderQueue_ev_uint8_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint8 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getWorldGeometryRenderQueue();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool(void *pObjectXXXX, _in ev_bool bShow )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::showBoundingBoxes(bShow);
				else
					ptrNativeObject->showBoundingBoxes(bShow);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_showBoundingBoxes_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool bShow )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::showBoundingBoxes(bShow);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShowBoundingBoxes();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getShowBoundingBoxes();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShowBoundingBoxes_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShowBoundingBoxes();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneNode* node, _in ev_bool autoTrack )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_notifyAutotrackingSceneNode(node, autoTrack);
				else
					ptrNativeObject->_notifyAutotrackingSceneNode(node, autoTrack);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyAutotrackingSceneNode_void_CSceneNode_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneNode* node, _in ev_bool autoTrack )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_notifyAutotrackingSceneNode(node, autoTrack);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32(void *pObjectXXXX, _in const void* box, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* box, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box, mask);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox(void *pObjectXXXX, _in const void* box )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAxisAlignedBoxSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createAABBQuery_CAxisAlignedBoxSceneQuery_CAxisAlignedBox_NoVirtual(void *pObjectXXXX, _in const void* box )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CAxisAlignedBoxSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createAABBQuery(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)box);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSphereSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32(void *pObjectXXXX, _in const void* sphere, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSphereSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* sphere, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere, mask);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSphereSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere(void *pObjectXXXX, _in const void* sphere )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSphereSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createSphereQuery_CSphereSceneQuery_CSphere_NoVirtual(void *pObjectXXXX, _in const void* sphere )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSphereSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createSphereQuery(*(EarthView::World::Spatial::Math::CSphere*)sphere);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32(void *pObjectXXXX, _in const void* volumes, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* volumes, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes, mask);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList(void *pObjectXXXX, _in const void* volumes )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createPlaneBoundedVolumeQuery_CPlaneBoundedVolumeListSceneQuery_PlaneBoundedVolumeList_NoVirtual(void *pObjectXXXX, _in const void* volumes )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CPlaneBoundedVolumeListSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createPlaneBoundedVolumeQuery(*(EarthView::World::Spatial::Math::PlaneBoundedVolumeList*)volumes);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRaySceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32(void *pObjectXXXX, _in const void* ray, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray, mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRaySceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_ev_uint32_NoVirtual(void *pObjectXXXX, _in const void* ray, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray, mask);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRaySceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay(void *pObjectXXXX, _in const void* ray )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRaySceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createRayQuery_CRaySceneQuery_CRay_NoVirtual(void *pObjectXXXX, _in const void* ray )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRaySceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createRayQuery(*(EarthView::World::Spatial::Math::CRay*)ray);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CIntersectionSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32(void *pObjectXXXX, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createIntersectionQuery(mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->createIntersectionQuery(mask);
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CIntersectionSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createIntersectionQuery(mask);
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CIntersectionSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createIntersectionQuery();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->createIntersectionQuery();
					if(objXXXX != NULL) {
						((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
					}
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CIntersectionSceneQuery*  _stdcall EarthView_World_Graphic_CSceneManager_createIntersectionQuery_CIntersectionSceneQuery_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CIntersectionSceneQuery* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createIntersectionQuery();
				if(objXXXX != NULL) {
					((EarthView::World::Core::CBaseObject*)objXXXX)->setExternFree(true);
				}
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneQuery* query )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyQuery(query);
				else
					ptrNativeObject->destroyQuery(query);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyQuery_void_CSceneQuery_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneQuery* query )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyQuery(query);
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Graphic_CSceneManager_CameraIteratorPair_first( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIteratorPair*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->first;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CameraIteratorPair_first( void *pObjectXXXX, char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				((EarthView::World::Graphic::CSceneManager::CameraIteratorPair*)pObjectXXXX)->first = value1;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall Get_EarthView_World_Graphic_CSceneManager_CameraIteratorPair_second( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIteratorPair*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->second;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_CameraIteratorPair_second( void *pObjectXXXX, EarthView::World::Graphic::CCamera*  value )
			{
				((EarthView::World::Graphic::CSceneManager::CameraIteratorPair*)pObjectXXXX)->second = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_hasMoreElements_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->hasMoreElements();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_moveNext_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				ptrNativeObject->moveNext();
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_nextKey_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->nextKey();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_nextValue_CCamera(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->nextValue();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera**  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_nextValuePtr_CCamera(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				EarthView::World::Graphic::CCamera** objXXXX = ptrNativeObject->nextValuePtr();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_next_CCamera(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->next();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_getBegin_CameraIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair& objXXXX = ptrNativeObject->getBegin();
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_getEnd_CameraIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair& objXXXX = ptrNativeObject->getEnd();
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_CameraIterator_getCurrent_CameraIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::CameraIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::CameraIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair& objXXXX = ptrNativeObject->getCurrent();
				const EarthView::World::Graphic::CSceneManager::CameraIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Graphic_CSceneManager_AnimationIteratorPair_first( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIteratorPair*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->first;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_AnimationIteratorPair_first( void *pObjectXXXX, char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				((EarthView::World::Graphic::CSceneManager::AnimationIteratorPair*)pObjectXXXX)->first = value1;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall Get_EarthView_World_Graphic_CSceneManager_AnimationIteratorPair_second( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIteratorPair*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->second;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_AnimationIteratorPair_second( void *pObjectXXXX, EarthView::World::Graphic::CAnimation*  value )
			{
				((EarthView::World::Graphic::CSceneManager::AnimationIteratorPair*)pObjectXXXX)->second = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_hasMoreElements_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->hasMoreElements();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_moveNext_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				ptrNativeObject->moveNext();
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_nextKey_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->nextKey();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_nextValue_CAnimation(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->nextValue();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation**  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_nextValuePtr_CAnimation(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation** objXXXX = ptrNativeObject->nextValuePtr();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CAnimation*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_next_CAnimation(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				EarthView::World::Graphic::CAnimation* objXXXX = ptrNativeObject->next();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_getBegin_AnimationIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair& objXXXX = ptrNativeObject->getBegin();
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_getEnd_AnimationIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair& objXXXX = ptrNativeObject->getEnd();
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_AnimationIterator_getCurrent_AnimationIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::AnimationIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::AnimationIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair& objXXXX = ptrNativeObject->getCurrent();
				const EarthView::World::Graphic::CSceneManager::AnimationIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getCameraIterator_CameraIterator(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::CameraIterator objXXXX = ptrNativeObject->getCameraIterator();
				EarthView::World::Graphic::CSceneManager::CameraIterator *pXXXX = new EarthView::World::Graphic::CSceneManager::CameraIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getCameras_CameraList(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::CameraList& objXXXX = ptrNativeObject->getCameras();
				const EarthView::World::Graphic::CSceneManager::CameraList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimationIterator_AnimationIterator(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::AnimationIterator objXXXX = ptrNativeObject->getAnimationIterator();
				EarthView::World::Graphic::CSceneManager::AnimationIterator *pXXXX = new EarthView::World::Graphic::CSceneManager::AnimationIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimations_AnimationList(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::AnimationList& objXXXX = ptrNativeObject->getAnimations();
				const EarthView::World::Graphic::CSceneManager::AnimationList *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getAnimationStateIterator_AnimationStateMapIterator(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::AnimationStateMapIterator objXXXX = ptrNativeObject->getAnimationStateIterator();
				EarthView::World::Graphic::AnimationStateMapIterator *pXXXX = new EarthView::World::Graphic::AnimationStateMapIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique(void *pObjectXXXX, _in int technique )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTechnique((EarthView::World::Graphic::ShadowTechnique)technique);
				else
					ptrNativeObject->setShadowTechnique((EarthView::World::Graphic::ShadowTechnique)technique);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTechnique_void_ShadowTechnique_NoVirtual(void *pObjectXXXX, _in int technique )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTechnique((EarthView::World::Graphic::ShadowTechnique)technique);
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::ShadowTechnique objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTechnique();
					return (int)objXXXX;
				}
				else
				{
					EarthView::World::Graphic::ShadowTechnique objXXXX = ptrNativeObject->getShadowTechnique();
					return (int)objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  int  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTechnique_ShadowTechnique_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ShadowTechnique objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTechnique();
				return (int)objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool(void *pObjectXXXX, _in ev_bool debug )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShowDebugShadows(debug);
				else
					ptrNativeObject->setShowDebugShadows(debug);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShowDebugShadows_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool debug )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShowDebugShadows(debug);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShowDebugShadows();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getShowDebugShadows();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShowDebugShadows_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShowDebugShadows();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColour(*(EarthView::World::Graphic::CColourValue*)colour);
				else
					ptrNativeObject->setShadowColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColour_void_CColourValue_NoVirtual(void *pObjectXXXX, _in const void* colour )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColour(*(EarthView::World::Graphic::CColourValue*)colour);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColour();
					const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->getShadowColour();
					const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColour_CColourValue_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CColourValue& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColour();
				const EarthView::World::Graphic::CColourValue *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowDirectionalLightExtrusionDistance(dist);
				else
					ptrNativeObject->setShadowDirectionalLightExtrusionDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirectionalLightExtrusionDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real dist )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowDirectionalLightExtrusionDistance(dist);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowDirectionalLightExtrusionDistance();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowDirectionalLightExtrusionDistance();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirectionalLightExtrusionDistance_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowDirectionalLightExtrusionDistance();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real(void *pObjectXXXX, _in Real rRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorRRatio(rRatio);
				else
					ptrNativeObject->setShadowColorRRatio(rRatio);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorRRatio_void_Real_NoVirtual(void *pObjectXXXX, _in Real rRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorRRatio(rRatio);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real(void *pObjectXXXX, _in Real gRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorGRatio(gRatio);
				else
					ptrNativeObject->setShadowColorGRatio(gRatio);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorGRatio_void_Real_NoVirtual(void *pObjectXXXX, _in Real gRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorGRatio(gRatio);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real(void *pObjectXXXX, _in Real bRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorBRatio(bRatio);
				else
					ptrNativeObject->setShadowColorBRatio(bRatio);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowColorBRatio_void_Real_NoVirtual(void *pObjectXXXX, _in Real bRatio )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowColorBRatio(bRatio);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorRRatio();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowColorRRatio();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorRRatio_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorRRatio();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorGRatio();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowColorGRatio();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorGRatio_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorGRatio();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorBRatio();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowColorBRatio();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowColorBRatio_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowColorBRatio();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real(void *pObjectXXXX, _in Real distance )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowFarDistance(distance);
				else
					ptrNativeObject->setShadowFarDistance(distance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowFarDistance_void_Real_NoVirtual(void *pObjectXXXX, _in Real distance )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowFarDistance(distance);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowFarDistance();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowFarDistance();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistance_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowFarDistance();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowFarDistanceSquared();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowFarDistanceSquared();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowFarDistanceSquared_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowFarDistanceSquared();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  size )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowIndexBufferSize(size);
				else
					ptrNativeObject->setShadowIndexBufferSize(size);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowIndexBufferSize_void_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  size )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowIndexBufferSize(size);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowIndexBufferSize();
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->getShadowIndexBufferSize();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getShadowIndexBufferSize_ev_size_t_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowIndexBufferSize();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16(void *pObjectXXXX, _in ev_uint16 size )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSize(size);
				else
					ptrNativeObject->setShadowTextureSize(size);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSize_void_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 size )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSize(size);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format);
				else
					ptrNativeObject->setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_NoVirtual(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa);
				else
					ptrNativeObject->setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa, depthBufferPoolId);
				else
					ptrNativeObject->setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa, depthBufferPoolId);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in ev_uint16 width, _in ev_uint16 height, _in int format, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, width, height, (EarthView::World::Graphic::PixelFormat)format, fsaa, depthBufferPoolId);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in const void* config )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, *(EarthView::World::Graphic::ShadowTextureConfig*)config);
				else
					ptrNativeObject->setShadowTextureConfig(shadowIndex, *(EarthView::World::Graphic::ShadowTextureConfig*)config);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureConfig_void_ev_size_t_ShadowTextureConfig_NoVirtual(void *pObjectXXXX, _in ev_uint64  shadowIndex, _in const void* config )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureConfig(shadowIndex, *(EarthView::World::Graphic::ShadowTextureConfig*)config);
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureConfigIterator_ConstShadowTextureConfigIterator(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::ConstShadowTextureConfigIterator objXXXX = ptrNativeObject->getShadowTextureConfigIterator();
				EarthView::World::Graphic::ConstShadowTextureConfigIterator *pXXXX = new EarthView::World::Graphic::ConstShadowTextureConfigIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat(void *pObjectXXXX, _in int fmt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTexturePixelFormat((EarthView::World::Graphic::PixelFormat)fmt);
				else
					ptrNativeObject->setShadowTexturePixelFormat((EarthView::World::Graphic::PixelFormat)fmt);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTexturePixelFormat_void_PixelFormat_NoVirtual(void *pObjectXXXX, _in int fmt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTexturePixelFormat((EarthView::World::Graphic::PixelFormat)fmt);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16(void *pObjectXXXX, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFSAA(fsaa);
				else
					ptrNativeObject->setShadowTextureFSAA(fsaa);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFSAA_void_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFSAA(fsaa);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  count )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureCount(count);
				else
					ptrNativeObject->setShadowTextureCount(count);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCount_void_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  count )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureCount(count);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureCount_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->getShadowTextureCount();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCountPerLightType_void_LightTypes_ev_size_t(void *pObjectXXXX, _in int type, _in ev_uint64  count )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setShadowTextureCountPerLightType((EarthView::World::Graphic::CLight::LightTypes)type, count);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureCountPerLightType_ev_size_t_LightTypes(void *pObjectXXXX, _in int type )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->getShadowTextureCountPerLightType((EarthView::World::Graphic::CLight::LightTypes)type);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count);
				else
					ptrNativeObject->setShadowTextureSettings(size, count);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt);
				else
					ptrNativeObject->setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_NoVirtual(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa);
				else
					ptrNativeObject->setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa, depthBufferPoolId);
				else
					ptrNativeObject->setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa, depthBufferPoolId);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSettings_void_ev_uint16_ev_uint16_PixelFormat_ev_uint16_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 size, _in ev_uint16 count, _in int fmt, _in ev_uint16 fsaa, _in ev_uint16 depthBufferPoolId )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSettings(size, count, (EarthView::World::Graphic::PixelFormat)fmt, fsaa, depthBufferPoolId);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t(void *pObjectXXXX, _in ev_uint64  shadowIndex )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CTexturePtr& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTexture(shadowIndex);
					const EarthView::World::Graphic::CTexturePtr *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CTexturePtr& objXXXX = ptrNativeObject->getShadowTexture(shadowIndex);
					const EarthView::World::Graphic::CTexturePtr *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTexture_CTexturePtr_ev_size_t_NoVirtual(void *pObjectXXXX, _in ev_uint64  shadowIndex )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CTexturePtr& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTexture(shadowIndex);
				const EarthView::World::Graphic::CTexturePtr *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real(void *pObjectXXXX, _in Real offset )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowDirLightTextureOffset(offset);
				else
					ptrNativeObject->setShadowDirLightTextureOffset(offset);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowDirLightTextureOffset_void_Real_NoVirtual(void *pObjectXXXX, _in Real offset )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowDirLightTextureOffset(offset);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowDirLightTextureOffset();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getShadowDirLightTextureOffset();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getShadowDirLightTextureOffset_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowDirLightTextureOffset();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real(void *pObjectXXXX, _in Real fadeStart )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFadeStart(fadeStart);
				else
					ptrNativeObject->setShadowTextureFadeStart(fadeStart);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeStart_void_Real_NoVirtual(void *pObjectXXXX, _in Real fadeStart )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFadeStart(fadeStart);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real(void *pObjectXXXX, _in Real fadeEnd )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFadeEnd(fadeEnd);
				else
					ptrNativeObject->setShadowTextureFadeEnd(fadeEnd);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureFadeEnd_void_Real_NoVirtual(void *pObjectXXXX, _in Real fadeEnd )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureFadeEnd(fadeEnd);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool(void *pObjectXXXX, _in ev_bool selfShadow )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSelfShadow(selfShadow);
				else
					ptrNativeObject->setShadowTextureSelfShadow(selfShadow);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureSelfShadow_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool selfShadow )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureSelfShadow(selfShadow);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTextureSelfShadow();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getShadowTextureSelfShadow();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowTextureSelfShadow_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowTextureSelfShadow();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureCasterMaterial(name1);
				else
					ptrNativeObject->setShadowTextureCasterMaterial(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureCasterMaterial_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureCasterMaterial(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureReceiverMaterial(name1);
				else
					ptrNativeObject->setShadowTextureReceiverMaterial(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowTextureReceiverMaterial_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowTextureReceiverMaterial(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool(void *pObjectXXXX, _in ev_bool bf )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowCasterRenderBackFaces(bf);
				else
					ptrNativeObject->setShadowCasterRenderBackFaces(bf);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowCasterRenderBackFaces_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool bf )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowCasterRenderBackFaces(bf);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowCasterRenderBackFaces();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getShadowCasterRenderBackFaces();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCasterRenderBackFaces_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowCasterRenderBackFaces();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr(void *pObjectXXXX, _in const void* shadowSetup )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowCameraSetup(*(EarthView::World::Graphic::ShadowCameraSetupPtr*)shadowSetup);
				else
					ptrNativeObject->setShadowCameraSetup(*(EarthView::World::Graphic::ShadowCameraSetupPtr*)shadowSetup);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowCameraSetup_void_ShadowCameraSetupPtr_NoVirtual(void *pObjectXXXX, _in const void* shadowSetup )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowCameraSetup(*(EarthView::World::Graphic::ShadowCameraSetupPtr*)shadowSetup);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::ShadowCameraSetupPtr& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowCameraSetup();
					const EarthView::World::Graphic::ShadowCameraSetupPtr *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::ShadowCameraSetupPtr& objXXXX = ptrNativeObject->getShadowCameraSetup();
					const EarthView::World::Graphic::ShadowCameraSetupPtr *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCameraSetup_ShadowCameraSetupPtr_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::ShadowCameraSetupPtr& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowCameraSetup();
				const EarthView::World::Graphic::ShadowCameraSetupPtr *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowUseInfiniteFarPlane(enable);
				else
					ptrNativeObject->setShadowUseInfiniteFarPlane(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseInfiniteFarPlane_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowUseInfiniteFarPlane(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueStencilBased();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueStencilBased();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueStencilBased_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueStencilBased();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueTextureBased();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueTextureBased();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueTextureBased_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueTextureBased();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueModulative();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueModulative();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueModulative_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueModulative();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueAdditive();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueAdditive();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueAdditive_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueAdditive();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueIntegrated();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueIntegrated();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueIntegrated_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueIntegrated();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueInUse();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isShadowTechniqueInUse();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isShadowTechniqueInUse_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isShadowTechniqueInUse();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowUseLightClipPlanes(enabled);
				else
					ptrNativeObject->setShadowUseLightClipPlanes(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setShadowUseLightClipPlanes_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setShadowUseLightClipPlanes(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowUseLightClipPlanes();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getShadowUseLightClipPlanes();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getShadowUseLightClipPlanes_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getShadowUseLightClipPlanes();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain(void *pObjectXXXX, _in EarthView::World::Graphic::CCompositorChain* chain )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setActiveCompositorChain(chain);
				else
					ptrNativeObject->_setActiveCompositorChain(chain);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__setActiveCompositorChain_void_CCompositorChain_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCompositorChain* chain )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setActiveCompositorChain(chain);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool(void *pObjectXXXX, _in ev_bool isLate )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setLateMaterialResolving(isLate);
				else
					ptrNativeObject->setLateMaterialResolving(isLate);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setLateMaterialResolving_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool isLate )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setLateMaterialResolving(isLate);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isLateMaterialResolving();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->isLateMaterialResolving();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_isLateMaterialResolving_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::isLateMaterialResolving();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCompositorChain*  _stdcall EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CCompositorChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_getActiveCompositorChain();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CCompositorChain* objXXXX = ptrNativeObject->_getActiveCompositorChain();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCompositorChain*  _stdcall EarthView_World_Graphic_CSceneManager__getActiveCompositorChain_CCompositorChain_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CCompositorChain* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_getActiveCompositorChain();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ref_s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::addListener(ref_s);
				else
					ptrNativeObject->addListener(ref_s);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addListener_void_CSceneManagerListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* ref_s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::addListener(ref_s);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeListener(s);
				else
					ptrNativeObject->removeListener(s);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeListener_void_CSceneManagerListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeListener(s);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::existListener(s);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->existListener(s);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_existListener_ev_bool_CSceneManagerListener_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneManagerListener* s )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::existListener(s);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CStaticGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createStaticGeometry(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->createStaticGeometry(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CStaticGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_createStaticGeometry_CStaticGeometry_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createStaticGeometry(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CStaticGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getStaticGeometry(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->getStaticGeometry(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CStaticGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_getStaticGeometry_CStaticGeometry_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CStaticGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getStaticGeometry(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasStaticGeometry(name1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasStaticGeometry(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasStaticGeometry_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasStaticGeometry(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry(void *pObjectXXXX, _in EarthView::World::Graphic::CStaticGeometry* geom )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyStaticGeometry(geom);
				else
					ptrNativeObject->destroyStaticGeometry(geom);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_CStaticGeometry_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CStaticGeometry* geom )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyStaticGeometry(geom);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyStaticGeometry(name1);
				else
					ptrNativeObject->destroyStaticGeometry(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyStaticGeometry_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyStaticGeometry(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllStaticGeometry();
				else
					ptrNativeObject->destroyAllStaticGeometry();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllStaticGeometry_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllStaticGeometry();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstancedGeometry(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->createInstancedGeometry(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_createInstancedGeometry_CInstancedGeometry_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstancedGeometry(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getInstancedGeometry(name1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->getInstancedGeometry(name1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedGeometry*  _stdcall EarthView_World_Graphic_CSceneManager_getInstancedGeometry_CInstancedGeometry_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstancedGeometry* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getInstancedGeometry(name1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry(void *pObjectXXXX, _in EarthView::World::Graphic::CInstancedGeometry* geom )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedGeometry(geom);
				else
					ptrNativeObject->destroyInstancedGeometry(geom);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_CInstancedGeometry_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CInstancedGeometry* geom )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedGeometry(geom);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedGeometry(name1);
				else
					ptrNativeObject->destroyInstancedGeometry(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedGeometry_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedGeometry(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllInstancedGeometry();
				else
					ptrNativeObject->destroyAllInstancedGeometry();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstancedGeometry_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllInstancedGeometry();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_NoVirtual(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_NoVirtual(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_createInstanceManager_CInstanceManager_EVString_EVString_EVString_InstancingTechnique_ev_size_t_NoVirtual(void *pObjectXXXX, _in const char* customName, _in const char* meshName, _in const char* groupName, _in int technique, _in ev_uint64  numInstancesPerBatch )
			{
				EarthView::World::Core::ev_string customName1 = customName;
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstanceManager(customName1, meshName1, groupName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addInstanceManager_void_CInstanceManager(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* pInstMnger )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->addInstanceManager(pInstMnger);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString(void *pObjectXXXX, _in const char* managerName )
			{
				EarthView::World::Core::ev_string managerName1 = managerName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getInstanceManager(managerName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->getInstanceManager(managerName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstanceManager*  _stdcall EarthView_World_Graphic_CSceneManager_getInstanceManager_CInstanceManager_EVString_NoVirtual(void *pObjectXXXX, _in const char* managerName )
			{
				EarthView::World::Core::ev_string managerName1 = managerName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstanceManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getInstanceManager(managerName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString(void *pObjectXXXX, _in const char* managerName )
			{
				EarthView::World::Core::ev_string managerName1 = managerName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasInstanceManager(managerName1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasInstanceManager(managerName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasInstanceManager_ev_bool_EVString_NoVirtual(void *pObjectXXXX, _in const char* managerName )
			{
				EarthView::World::Core::ev_string managerName1 = managerName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasInstanceManager(managerName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManager(name1);
				else
					ptrNativeObject->destroyInstanceManager(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManager(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* instanceManager )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManager(instanceManager);
				else
					ptrNativeObject->destroyInstanceManager(instanceManager);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManager_void_CInstanceManager_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* instanceManager )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManager(instanceManager);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManagerWithThreadSafe(name1);
				else
					ptrNativeObject->destroyInstanceManagerWithThreadSafe(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManagerWithThreadSafe(name1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* instanceManager )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManagerWithThreadSafe(instanceManager);
				else
					ptrNativeObject->destroyInstanceManagerWithThreadSafe(instanceManager);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstanceManagerWithThreadSafe_void_CInstanceManager_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* instanceManager )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstanceManagerWithThreadSafe(instanceManager);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllInstanceManagers();
				else
					ptrNativeObject->destroyAllInstanceManagers();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllInstanceManagers_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllInstanceManagers();
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_NoVirtual(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_NoVirtual(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
					return objXXXX;
				}
				else
				{
					ev_size_t objXXXX = ptrNativeObject->getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CSceneManager_getNumInstancesPerBatch_ev_size_t_EVString_EVString_EVString_InstancingTechnique_ev_size_t_ev_uint16_ev_uint16_NoVirtual(void *pObjectXXXX, _in const char* meshName, _in const char* groupName, _in const char* materialName, _in int technique, _in ev_uint64  numInstancesPerBatch, _in ev_uint16 flags, _in ev_uint16 subMeshIdx )
			{
				EarthView::World::Core::ev_string meshName1 = meshName;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNumInstancesPerBatch(meshName1, groupName1, materialName1, (EarthView::World::Graphic::CInstanceManager::InstancingTechnique)technique, numInstancesPerBatch, flags, subMeshIdx);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString(void *pObjectXXXX, _in const char* materialName, _in const char* managerName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string managerName1 = managerName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CInstancedEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstancedEntity(materialName1, managerName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CInstancedEntity* objXXXX = ptrNativeObject->createInstancedEntity(materialName1, managerName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CInstancedEntity*  _stdcall EarthView_World_Graphic_CSceneManager_createInstancedEntity_CInstancedEntity_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* materialName, _in const char* managerName )
			{
				EarthView::World::Core::ev_string materialName1 = materialName;
				EarthView::World::Core::ev_string managerName1 = managerName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CInstancedEntity* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createInstancedEntity(materialName1, managerName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity(void *pObjectXXXX, _in EarthView::World::Graphic::CInstancedEntity* instancedEntity )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedEntity(instancedEntity);
				else
					ptrNativeObject->destroyInstancedEntity(instancedEntity);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyInstancedEntity_void_CInstancedEntity_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CInstancedEntity* instancedEntity )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyInstancedEntity(instancedEntity);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__addDirtyInstanceManager_void_CInstanceManager(void *pObjectXXXX, _in EarthView::World::Graphic::CInstanceManager* ref_dirtyManager )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->_addDirtyInstanceManager(ref_dirtyManager);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList(void *pObjectXXXX, _in const char* name, _in const char* typeName, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(name1, typeName1, params);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createMovableObject(name1, typeName1, params);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_CommonStringPairList_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(name1, typeName1, params);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(name1, typeName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createMovableObject(name1, typeName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(name1, typeName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList(void *pObjectXXXX, _in const char* typeName, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(typeName1, params);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createMovableObject(typeName1, params);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_CommonStringPairList_NoVirtual(void *pObjectXXXX, _in const char* typeName, _in const EarthView::World::Core::CommonStringPairList* params )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(typeName1, params);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(typeName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->createMovableObject(typeName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_createMovableObject_CMovableObject_EVString_NoVirtual(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::createMovableObject(typeName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyMovableObject(name1, typeName1);
				else
					ptrNativeObject->destroyMovableObject(name1, typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyMovableObject(name1, typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyMovableObject(m);
				else
					ptrNativeObject->destroyMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyMovableObject_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllMovableObjectsByType(typeName1);
				else
					ptrNativeObject->destroyAllMovableObjectsByType(typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjectsByType_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllMovableObjectsByType(typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllMovableObjects();
				else
					ptrNativeObject->destroyAllMovableObjects();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_destroyAllMovableObjects_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::destroyAllMovableObjects();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getMovableObject(name1, typeName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->getMovableObject(name1, typeName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_getMovableObject_CMovableObject_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getMovableObject(name1, typeName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasMovableObject(name1, typeName1);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->hasMovableObject(name1, typeName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_hasMovableObject_ev_bool_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::hasMovableObject(name1, typeName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Graphic_CSceneManager_MovableObjectIteratorPair_first( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->first;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_MovableObjectIteratorPair_first( void *pObjectXXXX, char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				((EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair*)pObjectXXXX)->first = value1;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall Get_EarthView_World_Graphic_CSceneManager_MovableObjectIteratorPair_second( void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->second;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_CSceneManager_MovableObjectIteratorPair_second( void *pObjectXXXX, EarthView::World::Graphic::CMovableObject*  value )
			{
				((EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair*)pObjectXXXX)->second = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_hasMoreElements_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->hasMoreElements();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_moveNext_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				ptrNativeObject->moveNext();
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_nextKey_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->nextKey();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_nextValue_CMovableObject(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->nextValue();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject**  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_nextValuePtr_CMovableObject(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject** objXXXX = ptrNativeObject->nextValuePtr();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CMovableObject*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_next_CMovableObject(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				EarthView::World::Graphic::CMovableObject* objXXXX = ptrNativeObject->next();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_getBegin_MovableObjectIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair& objXXXX = ptrNativeObject->getBegin();
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_getEnd_MovableObjectIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair& objXXXX = ptrNativeObject->getEnd();
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_MovableObjectIterator_getCurrent_MovableObjectIteratorPair(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator* ptrNativeObject = (EarthView::World::Graphic::CSceneManager::MovableObjectIterator*) pObjectXXXX;
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair& objXXXX = ptrNativeObject->getCurrent();
				const EarthView::World::Graphic::CSceneManager::MovableObjectIteratorPair *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneManager::MovableObjectIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getMovableObjectIterator(typeName1);
					EarthView::World::Graphic::CSceneManager::MovableObjectIterator *pXXXX = new EarthView::World::Graphic::CSceneManager::MovableObjectIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneManager::MovableObjectIterator objXXXX = ptrNativeObject->getMovableObjectIterator(typeName1);
					EarthView::World::Graphic::CSceneManager::MovableObjectIterator *pXXXX = new EarthView::World::Graphic::CSceneManager::MovableObjectIterator(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CSceneManager_getMovableObjectIterator_MovableObjectIterator_EVString_NoVirtual(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getMovableObjectIterator(typeName1);
				EarthView::World::Graphic::CSceneManager::MovableObjectIterator *pXXXX = new EarthView::World::Graphic::CSceneManager::MovableObjectIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::injectMovableObject(m);
				else
					ptrNativeObject->injectMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_injectMovableObject_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::injectMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractMovableObject(name1, typeName1);
				else
					ptrNativeObject->extractMovableObject(name1, typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* typeName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractMovableObject(name1, typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractMovableObject(m);
				else
					ptrNativeObject->extractMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractMovableObject_void_CMovableObject_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CMovableObject* m )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractMovableObject(m);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractAllMovableObjectsByType(typeName1);
				else
					ptrNativeObject->extractAllMovableObjectsByType(typeName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_extractAllMovableObjectsByType_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::extractAllMovableObjectsByType(typeName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32(void *pObjectXXXX, _in ev_uint32 vmask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setVisibilityMask(vmask);
				else
					ptrNativeObject->setVisibilityMask(vmask);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setVisibilityMask_void_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 vmask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setVisibilityMask(vmask);
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getVisibilityMask();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getVisibilityMask();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CSceneManager_getVisibilityMask_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getVisibilityMask();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CSceneManager__getCombinedVisibilityMask_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->_getCombinedVisibilityMask();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool(void *pObjectXXXX, _in ev_bool find )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setFindVisibleObjects(find);
				else
					ptrNativeObject->setFindVisibleObjects(find);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFindVisibleObjects_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool find )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setFindVisibleObjects(find);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFindVisibleObjects();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getFindVisibleObjects();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getFindVisibleObjects_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFindVisibleObjects();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool(void *pObjectXXXX, _in ev_bool n )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setNormaliseNormalsOnScale(n);
				else
					ptrNativeObject->setNormaliseNormalsOnScale(n);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setNormaliseNormalsOnScale_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool n )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setNormaliseNormalsOnScale(n);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNormaliseNormalsOnScale();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getNormaliseNormalsOnScale();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getNormaliseNormalsOnScale_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getNormaliseNormalsOnScale();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool(void *pObjectXXXX, _in ev_bool n )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setFlipCullingOnNegativeScale(n);
				else
					ptrNativeObject->setFlipCullingOnNegativeScale(n);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setFlipCullingOnNegativeScale_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool n )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setFlipCullingOnNegativeScale(n);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFlipCullingOnNegativeScale();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getFlipCullingOnNegativeScale();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getFlipCullingOnNegativeScale_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getFlipCullingOnNegativeScale();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration, manualLightList);
				else
					ptrNativeObject->_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_LightList_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration, _in const EarthView::World::Graphic::LightList* manualLightList )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration, manualLightList);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration);
				else
					ptrNativeObject->_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation, _in ev_bool doLightIteration )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation, doLightIteration);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation);
				else
					ptrNativeObject->_injectRenderWithPass(pass, rend, shadowDerivation);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend, _in ev_bool shadowDerivation )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend, shadowDerivation);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend);
				else
					ptrNativeObject->_injectRenderWithPass(pass, rend);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__injectRenderWithPass_void_CPass_CRenderable_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CPass* pass, _in EarthView::World::Graphic::CRenderable* rend )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_injectRenderWithPass(pass, rend);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool(void *pObjectXXXX, _in ev_bool suppress )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_suppressRenderStateChanges(suppress);
				else
					ptrNativeObject->_suppressRenderStateChanges(suppress);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__suppressRenderStateChanges_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool suppress )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_suppressRenderStateChanges(suppress);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_areRenderStateChangesSuppressed();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->_areRenderStateChangesSuppressed();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager__areRenderStateChangesSuppressed_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_areRenderStateChangesSuppressed();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed, _in ev_bool shadowDerivation )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass, evenIfSuppressed, shadowDerivation);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->_setPass(pass, evenIfSuppressed, shadowDerivation);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed, _in ev_bool shadowDerivation )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass, evenIfSuppressed, shadowDerivation);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass, evenIfSuppressed);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->_setPass(pass, evenIfSuppressed);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_ev_bool_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass, _in ev_bool evenIfSuppressed )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass, evenIfSuppressed);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass);
					return objXXXX;
				}
				else
				{
					const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->_setPass(pass);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const EarthView::World::Graphic::CPass*  _stdcall EarthView_World_Graphic_CSceneManager__setPass_CPass_CPass_NoVirtual(void *pObjectXXXX, _in const EarthView::World::Graphic::CPass* pass )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::CPass* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_setPass(pass);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16(void *pObjectXXXX, _in ev_uint16 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_markGpuParamsDirty(mask);
				else
					ptrNativeObject->_markGpuParamsDirty(mask);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__markGpuParamsDirty_void_ev_uint16_NoVirtual(void *pObjectXXXX, _in ev_uint16 mask )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_markGpuParamsDirty(mask);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool(void *pObjectXXXX, _in ev_bool suppress )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_suppressShadows(suppress);
				else
					ptrNativeObject->_suppressShadows(suppress);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__suppressShadows_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool suppress )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_suppressShadows(suppress);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_areShadowsSuppressed();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->_areShadowsSuppressed();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager__areShadowsSuppressed_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::_areShadowsSuppressed();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
				else
					ptrNativeObject->_renderQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__renderQueueGroupObjects_void_CRenderQueueGroup_OrganisationMode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueueGroup* group, _in int om )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::_renderQueueGroupObjects(group, (EarthView::World::Graphic::CQueuedRenderableCollection::OrganisationMode)om);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setQueuedRenderableVisitor_void_CSceneMgrQueuedRenderableVisitor(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* visitor )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->setQueuedRenderableVisitor(visitor);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor*  _stdcall EarthView_World_Graphic_CSceneManager_getQueuedRenderableVisitor_CSceneMgrQueuedRenderableVisitor(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager::CSceneMgrQueuedRenderableVisitor* objXXXX = ptrNativeObject->getQueuedRenderableVisitor();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CRenderSystem*  _stdcall EarthView_World_Graphic_CSceneManager_getDestinationRenderSystem_CRenderSystem(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CRenderSystem* objXXXX = ptrNativeObject->getDestinationRenderSystem();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CViewport*  _stdcall EarthView_World_Graphic_CSceneManager_getCurrentViewport_CViewport(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CViewport* objXXXX = ptrNativeObject->getCurrentViewport();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CCamera*  _stdcall EarthView_World_Graphic_CSceneManager_getCameraInProgress_CCamera(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				EarthView::World::Graphic::CCamera* objXXXX = ptrNativeObject->getCameraInProgress();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getVisibleObjectsBoundsInfo_VisibleObjectsBoundsInfo_CCamera(void *pObjectXXXX, _in const EarthView::World::Graphic::CCamera* cam )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo& objXXXX = ptrNativeObject->getVisibleObjectsBoundsInfo(cam);
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCasterBoundsInfo_VisibleObjectsBoundsInfo_CLight_ev_size_t(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light, _in ev_uint64  iteration )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo& objXXXX = ptrNativeObject->getShadowCasterBoundsInfo(light, iteration);
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManager_getShadowCasterBoundsInfo_VisibleObjectsBoundsInfo_CLight(void *pObjectXXXX, _in const EarthView::World::Graphic::CLight* light )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo& objXXXX = ptrNativeObject->getShadowCasterBoundsInfo(light);
				const EarthView::World::Graphic::VisibleObjectsBoundsInfo *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool(void *pObjectXXXX, _in ev_bool rel )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCameraRelativeRendering(rel);
				else
					ptrNativeObject->setCameraRelativeRendering(rel);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCameraRelativeRendering_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool rel )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCameraRelativeRendering(rel);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCameraRelativeRendering();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getCameraRelativeRendering();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getCameraRelativeRendering_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getCameraRelativeRendering();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_addLodListener_void_CLodListener(void *pObjectXXXX, _in EarthView::World::Graphic::CLodListener* ref_listener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->addLodListener(ref_listener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_removeLodListener_void_CLodListener(void *pObjectXXXX, _in EarthView::World::Graphic::CLodListener* listener )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->removeLodListener(listener);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyMovableObjectLodChanged_void_MovableObjectLodChangedEvent(void *pObjectXXXX, _inout void* evt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->_notifyMovableObjectLodChanged(*(EarthView::World::Graphic::MovableObjectLodChangedEvent*)evt);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyEntityMeshLodChanged_void_EntityMeshLodChangedEvent(void *pObjectXXXX, _inout void* evt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->_notifyEntityMeshLodChanged(*(EarthView::World::Graphic::EntityMeshLodChangedEvent*)evt);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__notifyEntityMaterialLodChanged_void_EntityMaterialLodChangedEvent(void *pObjectXXXX, _inout void* evt )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->_notifyEntityMaterialLodChanged(*(EarthView::World::Graphic::EntityMaterialLodChangedEvent*)evt);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager__handleLodEvents_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->_handleLodEvents();
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32(void *pObjectXXXX, _in Real latitude, _in Real lontitude, _in ev_real32 targetSamplesPerDegrees )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getHeightAt(latitude, lontitude, targetSamplesPerDegrees);
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getHeightAt(latitude, lontitude, targetSamplesPerDegrees);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getHeightAt_Real_Real_Real_ev_real32_NoVirtual(void *pObjectXXXX, _in Real latitude, _in Real lontitude, _in ev_real32 targetSamplesPerDegrees )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getHeightAt(latitude, lontitude, targetSamplesPerDegrees);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real(void *pObjectXXXX, _in Real latitude, _in Real lontitude )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBestHeightAt(latitude, lontitude);
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getBestHeightAt(latitude, lontitude);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getBestHeightAt_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in Real latitude, _in Real lontitude )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getBestHeightAt(latitude, lontitude);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real(void *pObjectXXXX, _in Real latitude, _in Real lontitude )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getHeightAtTile(latitude, lontitude);
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getHeightAtTile(latitude, lontitude);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CSceneManager_getHeightAtTile_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in Real latitude, _in Real lontitude )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getHeightAtTile(latitude, lontitude);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real(void *pObjectXXXX, _in ev_int32 level, _in ev_uint32 row, _in ev_uint32 col, _inout Real& minX, _inout Real& maxX, _inout Real& minY, _inout Real& maxY )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getTileEnvelope(level, row, col, minX, maxX, minY, maxY);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getTileEnvelope(level, row, col, minX, maxX, minY, maxY);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getTileEnvelope_ev_bool_ev_int32_ev_uint32_ev_uint32_Real_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in ev_int32 level, _in ev_uint32 row, _in ev_uint32 col, _inout Real& minX, _inout Real& maxX, _inout Real& minY, _inout Real& maxY )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::getTileEnvelope(level, row, col, minX, maxX, minY, maxY);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer(void *pObjectXXXX, _in EarthView::World::Spatial::Atlas::ILayer* layer )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::addTempLayer(layer);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->addTempLayer(layer);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_addTempLayer_ev_bool_ILayer_NoVirtual(void *pObjectXXXX, _in EarthView::World::Spatial::Atlas::ILayer* layer )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::addTempLayer(layer);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer(void *pObjectXXXX, _in EarthView::World::Spatial::Atlas::ILayer* layer )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeTempLayer(layer);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->removeTempLayer(layer);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_removeTempLayer_ev_bool_ILayer_NoVirtual(void *pObjectXXXX, _in EarthView::World::Spatial::Atlas::ILayer* layer )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManager::removeTempLayer(layer);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool(void *pObjectXXXX, _in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup);
				else
					ptrNativeObject->updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_NoVirtual(void *pObjectXXXX, _in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real(void *pObjectXXXX, _in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup, _in Real minX, _in Real maxX, _in Real minY, _in Real maxY )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup, minX, maxX, minY, maxY);
				else
					ptrNativeObject->updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup, minX, maxX, minY, maxY);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateQuadImage_void_bool_bool_bool_Real_Real_Real_Real_NoVirtual(void *pObjectXXXX, _in bool updateImageGroup, _in bool updateFeatureGroup, _in bool updateKmlGroup, _in Real minX, _in Real maxX, _in Real minY, _in Real maxY )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateQuadImage(updateImageGroup, updateFeatureGroup, updateKmlGroup, minX, maxX, minY, maxY);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool(void *pObjectXXXX, _in ev_bool bUpdateVectorTexture, _in ev_bool bUpdateKmlTexture, _in ev_bool bUpdateTemporaryTexture, _in ev_bool bUpdateTerrain )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateOBQ(bUpdateVectorTexture, bUpdateKmlTexture, bUpdateTemporaryTexture, bUpdateTerrain);
				else
					ptrNativeObject->updateOBQ(bUpdateVectorTexture, bUpdateKmlTexture, bUpdateTemporaryTexture, bUpdateTerrain);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_updateOBQ_void_ev_bool_ev_bool_ev_bool_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool bUpdateVectorTexture, _in ev_bool bUpdateKmlTexture, _in ev_bool bUpdateTemporaryTexture, _in ev_bool bUpdateTerrain )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::updateOBQ(bUpdateVectorTexture, bUpdateKmlTexture, bUpdateTemporaryTexture, bUpdateTerrain);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCollisionDetectionEnable(enable);
				else
					ptrNativeObject->setCollisionDetectionEnable(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_Callback* pCallback )
			{
				CSceneManagerProxy* ptr = dynamic_cast<CSceneManagerProxy*>((EarthView::World::Graphic::CSceneManager*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManager_setCollisionDetectionEnable_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool enable )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManager::setCollisionDetectionEnable(enable);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CSceneManager_getCollisionDetectionEnable_ev_bool(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CSceneManager* ptrNativeObject = (EarthView::World::Graphic::CSceneManager*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getCollisionDetectionEnable();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Graphic_SceneManagerMetaData_typeName( void *pObjectXXXX )
			{
				EarthView::World::Graphic::SceneManagerMetaData* ptrNativeObject = (EarthView::World::Graphic::SceneManagerMetaData*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->typeName;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_SceneManagerMetaData_typeName( void *pObjectXXXX, char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				((EarthView::World::Graphic::SceneManagerMetaData*)pObjectXXXX)->typeName = value1;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall Get_EarthView_World_Graphic_SceneManagerMetaData_description( void *pObjectXXXX )
			{
				EarthView::World::Graphic::SceneManagerMetaData* ptrNativeObject = (EarthView::World::Graphic::SceneManagerMetaData*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->description;
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_SceneManagerMetaData_description( void *pObjectXXXX, char*  value )
			{
				EarthView::World::Core::ev_string value1 = value;
				((EarthView::World::Graphic::SceneManagerMetaData*)pObjectXXXX)->description = value1;
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall Get_EarthView_World_Graphic_SceneManagerMetaData_sceneTypeMask( void *pObjectXXXX )
			{
				EarthView::World::Graphic::SceneManagerMetaData* ptrNativeObject = (EarthView::World::Graphic::SceneManagerMetaData*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->sceneTypeMask;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_SceneManagerMetaData_sceneTypeMask( void *pObjectXXXX, ev_uint16  value )
			{
				((EarthView::World::Graphic::SceneManagerMetaData*)pObjectXXXX)->sceneTypeMask = value;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall Get_EarthView_World_Graphic_SceneManagerMetaData_worldGeometrySupported( void *pObjectXXXX )
			{
				EarthView::World::Graphic::SceneManagerMetaData* ptrNativeObject = (EarthView::World::Graphic::SceneManagerMetaData*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->worldGeometrySupported;
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void _stdcall Set_EarthView_World_Graphic_SceneManagerMetaData_worldGeometrySupported( void *pObjectXXXX, ev_bool  value )
			{
				((EarthView::World::Graphic::SceneManagerMetaData*)pObjectXXXX)->worldGeometrySupported = value;
			}
			typedef const void*  ( _stdcall EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback)();
			typedef EarthView::World::Graphic::CSceneManager*  ( _stdcall EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback)(_in char*& instanceName);
			typedef void  ( _stdcall EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback)(_in EarthView::World::Graphic::CSceneManager* instance);
			class CSceneManagerFactoryProxy : public EarthView::World::Graphic::CSceneManagerFactory
			{
			private:
				EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback* m_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback;
				EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback* m_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback;
				EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback* m_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback;
			public:
				CSceneManagerFactoryProxy(EarthView::World::Core::CNameValuePairList *pList) : CSceneManagerFactory(pList)
				{
					m_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData(EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString(EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager(EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback = pCallback;
				}
				virtual const EarthView::World::Graphic::SceneManagerMetaData& getMetaData() const
				{
					if(m_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::SceneManagerMetaData& returnValue = *(EarthView::World::Graphic::SceneManagerMetaData*)m_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback();
						return returnValue;
					}
					else
						return this->CSceneManagerFactory::getMetaData();
				}
				virtual EarthView::World::Graphic::CSceneManager* createInstance(_in const EVString& instanceName)
				{
					if(m_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* instanceName_Char = instanceName.makeBuffer();
						EarthView::World::Graphic::CSceneManager* returnValue = m_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback(instanceName_Char);
						return returnValue;
					}
					else
						return this->CSceneManagerFactory::createInstance(instanceName);
				}
				virtual void destroyInstance(_in EarthView::World::Graphic::CSceneManager* instance)
				{
					if(m_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback(instance);
					}
					else
						return this->CSceneManagerFactory::destroyInstance(instance);
				}
			};
			REGISTER_FACTORY_CLASS(CSceneManagerFactoryProxy);
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Graphic::SceneManagerMetaData& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::getMetaData();
					const EarthView::World::Graphic::SceneManagerMetaData *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Graphic::SceneManagerMetaData& objXXXX = ptrNativeObject->getMetaData();
					const EarthView::World::Graphic::SceneManagerMetaData *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData( void *pObjectXXXX, EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_Callback* pCallback )
			{
				CSceneManagerFactoryProxy* ptr = dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CSceneManagerFactory_getMetaData_SceneManagerMetaData_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				const EarthView::World::Graphic::SceneManagerMetaData& objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::getMetaData();
				const EarthView::World::Graphic::SceneManagerMetaData *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager*  _stdcall EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString(void *pObjectXXXX, _in const char* instanceName )
			{
				EarthView::World::Core::ev_string instanceName1 = instanceName;
				EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::createInstance(instanceName1);
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->createInstance(instanceName1);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString( void *pObjectXXXX, EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_Callback* pCallback )
			{
				CSceneManagerFactoryProxy* ptr = dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CSceneManager*  _stdcall EarthView_World_Graphic_CSceneManagerFactory_createInstance_CSceneManager_EVString_NoVirtual(void *pObjectXXXX, _in const char* instanceName )
			{
				EarthView::World::Core::ev_string instanceName1 = instanceName;
				EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				EarthView::World::Graphic::CSceneManager* objXXXX = ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::createInstance(instanceName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* instance )
			{
				EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				if (dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::destroyInstance(instance);
				else
					ptrNativeObject->destroyInstance(instance);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_Callback* pCallback )
			{
				CSceneManagerFactoryProxy* ptr = dynamic_cast<CSceneManagerFactoryProxy*>((EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CSceneManagerFactory_destroyInstance_void_CSceneManager_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CSceneManager* instance )
			{
				EarthView::World::Graphic::CSceneManagerFactory* ptrNativeObject = (EarthView::World::Graphic::CSceneManagerFactory*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CSceneManagerFactory::destroyInstance(instance);
			}
		}
	}
}
