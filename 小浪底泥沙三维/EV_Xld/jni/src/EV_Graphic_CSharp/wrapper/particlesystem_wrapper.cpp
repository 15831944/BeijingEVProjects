/* This file is produced by the P/Invoke AutoWrapper Utility 
 Copyright (c) 2012 by EarthView Image Inc */
#include "stableheaders.h"
#include "graphic/particlesystem.h"
namespace EarthView
{
	namespace World
	{
		namespace Graphic
		{
			typedef EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback)(_in char*& name, _in char*& groupName);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback)(_in char*& name);
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback)(_in Real width, _in Real height);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback)(_in Real width);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback)(_in Real height);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback)(_in ev_bool cullIndividual);
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback)();
			typedef const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback)();
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback)(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact);
			typedef EarthView::World::Graphic::CMovableObjectFactory*  ( _stdcall EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback)(_in EarthView::World::Graphic::CSceneManager* ref_mgr);
			typedef EarthView::World::Graphic::CSceneManager*  ( _stdcall EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback)();
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback)();
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback)();
			typedef EarthView::World::Graphic::CNode*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback)();
			typedef EarthView::World::Graphic::CSceneNode*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback)(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback)(_in EarthView::World::Graphic::CNode* ref_parent);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback)(_in const EarthView::World::Graphic::LightList* lightList);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener);
			typedef EarthView::World::Graphic::CMovableObject::CLightQueriedListener*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback)(_in ev_uint32 frame);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback)(_in EarthView::World::Graphic::CCamera* ref_cam);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback)();
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback)(_in EarthView::World::Graphic::CRenderQueue* queue);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback)(_in ev_bool visible);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback)(_in Real dist);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback)(_in Real pixelSize);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback)(_in const void* colour);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback)(_in const void* objIndics);
			typedef void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback)(_in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback)(_in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback)(_in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback)(_in ev_uint32 objectIndex);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback)();
			typedef EarthView::World::Graphic::CEditBoundingBox*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _inout void* matrix);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback)(_in ev_uint32 objectIndex, _in const void* matrix);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback)(_in ev_uint8 queueID);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback)(_in ev_uint8 queueID, _in ev_uint16 priority);
			typedef ev_uint8  ( _stdcall EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback)(_in ev_uint32 flags);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback)(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener);
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback)();
			typedef EarthView::World::Graphic::CMovableObject::CMovableObjectListener*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback)(_in ev_uint32 index);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback)(_in ev_uint32 lightMask);
			typedef EarthView::World::Graphic::LightList*  ( _stdcall EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback)();
			typedef ev_uint32  ( _stdcall EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback)();
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback)(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback)(_in ev_bool enabled);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback)();
			typedef EarthView::World::Graphic::CEdgeData*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback)();
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback)(_in ev_bool derive);
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback)();
			typedef const void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback)();
			typedef void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback)(_in const void* light, _in Real dirLightExtrusionDist);
			typedef void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance, _in ev_uint32 flags);
			typedef void*  ( _stdcall EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback)(_in int shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDistance);
			typedef Real  ( _stdcall EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback)(_in const EarthView::World::Graphic::CLight* l);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* lightPos);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback)(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const void* indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout void* shadowRenderables, _in ev_uint32 flags);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback)(_inout void* box, _in const void* lightPos, _in Real extrudeDist);
			class CParticleSystemProxy : public EarthView::World::Graphic::CParticleSystem
			{
			private:
				EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback* m_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback;
				EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback;
				EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* m_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback;
				EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback* m_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback;
				EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback* m_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback;
				EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback* m_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback;
				EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback* m_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback;
				EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback* m_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback;
				EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback;
				EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback* m_EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback;
				EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback;
				EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback* m_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback;
				EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback* m_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback;
				EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback* m_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback;
				EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback* m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback;
				EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback* m_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback;
				EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback* m_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback;
				EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback* m_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback;
				EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback;
				EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback;
				EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* m_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback;
				EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback* m_EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback;
				EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback* m_EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback;
				EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback* m_EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback;
				EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback* m_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback;
				EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* m_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback;
				EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback* m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback;
				EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback;
				EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback* m_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback;
				EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback* m_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback;
				EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback* m_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback;
				EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback* m_EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback;
				EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback* m_EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback;
				EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback* m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback;
				EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback* m_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback;
				EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback* m_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback;
				EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback;
				EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback* m_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback;
				EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* m_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback;
				EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* m_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback;
				EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* m_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback;
			public:
				CParticleSystemProxy(EarthView::World::Core::CNameValuePairList *pList) : CParticleSystem(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface(EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString(EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString(EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString(EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void(EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void(EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real(EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real(EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real(EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real(EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real(EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool(EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool(EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString(EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8(EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory(EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory(EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager(EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager(EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getName_EVString(EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString(EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode(EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode(EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool(EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool(EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode(EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool(EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_detachFromParent_void(EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool(EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyMoved_void(EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList(EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener(EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener(EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32(EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera(EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox(EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real(EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool(EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere(EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue(EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool(EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool(EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool(EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real(EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real(EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real(EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real(EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real(EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real(EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue(EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector(EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector(EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector(EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_renderSelection_void(EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_clearSelection_void(EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32(EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_endEditing_void(EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox(EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8(EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8(EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4(EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32(EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32(EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener(EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener(EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener(EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32(EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32(EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_queryLights_LightList(EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32(EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32(EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem__getLightList_LightList(EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool(EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool(EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32(EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool(EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor(EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool(EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool(EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool(EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData(EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool(EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool(EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox(EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox(EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real(EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight(EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4(EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback = pCallback;
				}
				virtual EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface* getStringInterfacePtr()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface* returnValue = m_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getStringInterfacePtr();
				}
				virtual void setVisible(_in ev_bool visible)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback(visible);
					}
					else
						return this->CParticleSystem::setVisible(visible);
				}
				virtual void setMaterialName(_in const EVString& name, _in const EVString& groupName)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* groupName_Char = groupName.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback(name_Char, groupName_Char);
					}
					else
						return this->CParticleSystem::setMaterialName(name, groupName);
				}
				virtual void setMaterialName(_in const EVString& name)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback(name_Char);
					}
					else
						return this->CParticleSystem::setMaterialName(name);
				}
				virtual EVString getMaterialName() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getMaterialName();
				}
				virtual void _notifyCurrentCamera(_in EarthView::World::Graphic::CCamera* cam)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback(cam);
					}
					else
						return this->CParticleSystem::_notifyCurrentCamera(cam);
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback(ref_parent, isTagPoint);
					}
					else
						return this->CParticleSystem::_notifyAttached(ref_parent, isTagPoint);
				}
				virtual void _notifyAttached(_in EarthView::World::Graphic::CNode* ref_parent)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback(ref_parent);
					}
					else
						return this->CParticleSystem::_notifyAttached(ref_parent);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getBoundingBox() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getBoundingBox();
				}
				virtual Real getBoundingRadius() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getBoundingRadius();
				}
				virtual void _updateRenderQueue(_in EarthView::World::Graphic::CRenderQueue* queue)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback(queue);
					}
					else
						return this->CParticleSystem::_updateRenderQueue(queue);
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback(visitor, debugRenderables);
					}
					else
						return this->CParticleSystem::visitRenderables(visitor, debugRenderables);
				}
				virtual void visitRenderables(_in EarthView::World::Graphic::CRenderable::CVisitor* visitor)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback(visitor);
					}
					else
						return this->CParticleSystem::visitRenderables(visitor);
				}
				virtual EVString getMovableType() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getMovableType();
				}
				virtual void _notifyParticleResized()
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback();
					}
					else
						return this->CParticleSystem::_notifyParticleResized();
				}
				virtual void _notifyParticleRotated()
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback();
					}
					else
						return this->CParticleSystem::_notifyParticleRotated();
				}
				virtual void setDefaultDimensions(_in Real width, _in Real height)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback(width, height);
					}
					else
						return this->CParticleSystem::setDefaultDimensions(width, height);
				}
				virtual void setDefaultWidth(_in Real width)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback(width);
					}
					else
						return this->CParticleSystem::setDefaultWidth(width);
				}
				virtual Real getDefaultWidth() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getDefaultWidth();
				}
				virtual void setDefaultHeight(_in Real height)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback(height);
					}
					else
						return this->CParticleSystem::setDefaultHeight(height);
				}
				virtual Real getDefaultHeight() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getDefaultHeight();
				}
				virtual ev_bool getCullIndividually() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getCullIndividually();
				}
				virtual void setCullIndividually(_in ev_bool cullIndividual)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback(cullIndividual);
					}
					else
						return this->CParticleSystem::setCullIndividually(cullIndividual);
				}
				virtual EVString getResourceGroupName() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getResourceGroupName();
				}
				virtual void setRenderQueueGroup(_in ev_uint8 queueID)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback(queueID);
					}
					else
						return this->CParticleSystem::setRenderQueueGroup(queueID);
				}
				virtual ev_uint32 getTypeFlags() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getTypeFlags();
				}
				virtual ev_bool setSelected(_in const EarthView::World::Core::IntVector& objIndics)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback(&objIndics);
						return returnValue;
					}
					else
						return this->CParticleSystem::setSelected(objIndics);
				}
				virtual EarthView::World::Core::IntVector getSelected() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Core::IntVector returnValue = *(EarthView::World::Core::IntVector*)m_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getSelected();
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, &point);
						return returnValue;
					}
					else
						return this->CParticleSystem::selectBy(ray, viewport, prepareToRenderSelection, objIndex, point);
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CAxisAlignedBox& aabb, _in ev_bool prepareToRenderSelection, _out EarthView::World::Core::IntVector& indexVec)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback(&aabb, prepareToRenderSelection, &indexVec);
						return returnValue;
					}
					else
						return this->CParticleSystem::selectBy(aabb, prepareToRenderSelection, indexVec);
				}
				virtual ev_bool selectBy(_in const EarthView::World::Spatial::Math::CSphere& sphere, _in ev_bool prepareToRenderSelection, _out EarthView::World::Core::IntVector& indexVec)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback(&sphere, prepareToRenderSelection, &indexVec);
						return returnValue;
					}
					else
						return this->CParticleSystem::selectBy(sphere, prepareToRenderSelection, indexVec);
				}
				virtual ev_bool selectComponentBy(_in const EarthView::World::Spatial::Math::CRay& ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out EarthView::World::Spatial::Math::CVector3& point)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback(&ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, &point);
						return returnValue;
					}
					else
						return this->CParticleSystem::selectComponentBy(ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, point);
				}
				virtual void renderSelection()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback();
					}
					else
						return this->CParticleSystem::renderSelection();
				}
				virtual void clearSelection()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback();
					}
					else
						return this->CParticleSystem::clearSelection();
				}
				virtual ev_bool startEditing(_in ev_uint32 objectIndex)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback(objectIndex);
						return returnValue;
					}
					else
						return this->CParticleSystem::startEditing(objectIndex);
				}
				virtual void endEditing()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback();
					}
					else
						return this->CParticleSystem::endEditing();
				}
				virtual EarthView::World::Graphic::CEditBoundingBox* getEditBoundingBox()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEditBoundingBox* returnValue = m_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getEditBoundingBox();
				}
				virtual ev_bool getSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _inout EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CParticleSystem::getSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual ev_bool setSelectedObjectWorldMatrix(_in ev_uint32 objectIndex, _in const EarthView::World::Spatial::Math::CMatrix4& matrix)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback(objectIndex, &matrix);
						return returnValue;
					}
					else
						return this->CParticleSystem::setSelectedObjectWorldMatrix(objectIndex, matrix);
				}
				virtual const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* getAnimableObjectPtr()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::CMovableObject::CMovableObjectInternalAnimableObject* returnValue = m_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getAnimableObjectPtr();
				}
				virtual ev_uint8 getRenderQueueId() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getRenderQueueId();
				}
				virtual void _notifyCreator(_in EarthView::World::Graphic::CMovableObjectFactory* ref_fact)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback(ref_fact);
					}
					else
						return this->CParticleSystem::_notifyCreator(ref_fact);
				}
				virtual EarthView::World::Graphic::CMovableObjectFactory* _getCreator() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObjectFactory* returnValue = m_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::_getCreator();
				}
				virtual void _notifyManager(_in EarthView::World::Graphic::CSceneManager* ref_mgr)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback(ref_mgr);
					}
					else
						return this->CParticleSystem::_notifyManager(ref_mgr);
				}
				virtual EarthView::World::Graphic::CSceneManager* _getManager() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneManager* returnValue = m_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::_getManager();
				}
				virtual EVString getName() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getName();
				}
				virtual EarthView::World::Graphic::CNode* getParentNode() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CNode* returnValue = m_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getParentNode();
				}
				virtual EarthView::World::Graphic::CSceneNode* getParentSceneNode() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CSceneNode* returnValue = m_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getParentSceneNode();
				}
				virtual ev_bool isParentTagPoint() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::isParentTagPoint();
				}
				virtual ev_bool isAttached() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::isAttached();
				}
				virtual void detachFromParent()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback();
					}
					else
						return this->CParticleSystem::detachFromParent();
				}
				virtual ev_bool isInScene() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::isInScene();
				}
				virtual void _notifyMoved()
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback();
					}
					else
						return this->CParticleSystem::_notifyMoved();
				}
				virtual void _notifyLightsQueried(_in const EarthView::World::Graphic::LightList* lightList)
				{
					if(m_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback(lightList);
					}
					else
						return this->CParticleSystem::_notifyLightsQueried(lightList);
				}
				virtual void setLightQueriedListener(_in EarthView::World::Graphic::CMovableObject::CLightQueriedListener* listener)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback(listener);
					}
					else
						return this->CParticleSystem::setLightQueriedListener(listener);
				}
				virtual EarthView::World::Graphic::CMovableObject::CLightQueriedListener* getLightQueriedListener()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CLightQueriedListener* returnValue = m_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getLightQueriedListener();
				}
				virtual ev_uint32 getLightListUpdated() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getLightListUpdated();
				}
				virtual void setLightListUpdated(_in ev_uint32 frame)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback(frame);
					}
					else
						return this->CParticleSystem::setLightListUpdated(frame);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getWorldBoundingBox(_in ev_bool derive) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback(derive);
						return returnValue;
					}
					else
						return this->CParticleSystem::getWorldBoundingBox(derive);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getWorldBoundingBox() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getWorldBoundingBox();
				}
				virtual const EarthView::World::Spatial::Math::CSphere& getWorldBoundingSphere(_in ev_bool derive) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CSphere& returnValue = *(EarthView::World::Spatial::Math::CSphere*)m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback(derive);
						return returnValue;
					}
					else
						return this->CParticleSystem::getWorldBoundingSphere(derive);
				}
				virtual const EarthView::World::Spatial::Math::CSphere& getWorldBoundingSphere() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CSphere& returnValue = *(EarthView::World::Spatial::Math::CSphere*)m_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getWorldBoundingSphere();
				}
				virtual ev_bool getVisible() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getVisible();
				}
				virtual ev_bool isVisible() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::isVisible();
				}
				virtual void setRenderingMaxDistance(_in Real dist)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback(dist);
					}
					else
						return this->CParticleSystem::setRenderingMaxDistance(dist);
				}
				virtual Real getRenderingMaxDistance() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getRenderingMaxDistance();
				}
				virtual void setRenderingMinDistance(_in Real dist)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback(dist);
					}
					else
						return this->CParticleSystem::setRenderingMinDistance(dist);
				}
				virtual Real getRenderingMinDistance() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getRenderingMinDistance();
				}
				virtual void setRenderingMinPixelSize(_in Real pixelSize)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback(pixelSize);
					}
					else
						return this->CParticleSystem::setRenderingMinPixelSize(pixelSize);
				}
				virtual Real getRenderingMinPixelSize() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getRenderingMinPixelSize();
				}
				virtual void setSelectionColour(_in const EarthView::World::Graphic::CColourValue& colour)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback(&colour);
					}
					else
						return this->CParticleSystem::setSelectionColour(colour);
				}
				virtual void setRenderQueueGroupAndPriority(_in ev_uint8 queueID, _in ev_uint16 priority)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback(queueID, priority);
					}
					else
						return this->CParticleSystem::setRenderQueueGroupAndPriority(queueID, priority);
				}
				virtual ev_uint8 getRenderQueueGroup() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback != NULL && this->isCustomExtend())
					{
						ev_uint8 returnValue = m_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getRenderQueueGroup();
				}
				virtual const EarthView::World::Spatial::Math::CMatrix4& _getParentNodeFullTransform() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CMatrix4& returnValue = *(EarthView::World::Spatial::Math::CMatrix4*)m_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::_getParentNodeFullTransform();
				}
				virtual void setQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::setQueryFlags(flags);
				}
				virtual void addQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::addQueryFlags(flags);
				}
				virtual void removeQueryFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::removeQueryFlags(flags);
				}
				virtual ev_uint32 getQueryFlags() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getQueryFlags();
				}
				virtual void setVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::setVisibilityFlags(flags);
				}
				virtual void addVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::addVisibilityFlags(flags);
				}
				virtual void removeVisibilityFlags(_in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback(flags);
					}
					else
						return this->CParticleSystem::removeVisibilityFlags(flags);
				}
				virtual ev_uint32 getVisibilityFlags() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getVisibilityFlags();
				}
				virtual void addListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* ref_listener)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback(ref_listener);
					}
					else
						return this->CParticleSystem::addListener(ref_listener);
				}
				virtual void removeListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback(listener);
					}
					else
						return this->CParticleSystem::removeListener(listener);
				}
				virtual ev_bool existListener(_in EarthView::World::Graphic::CMovableObject::CMovableObjectListener* listener) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback(listener);
						return returnValue;
					}
					else
						return this->CParticleSystem::existListener(listener);
				}
				virtual ev_uint32 getListenerCount() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getListenerCount();
				}
				virtual EarthView::World::Graphic::CMovableObject::CMovableObjectListener* getListener(_in ev_uint32 index) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CMovableObject::CMovableObjectListener* returnValue = m_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback(index);
						return returnValue;
					}
					else
						return this->CParticleSystem::getListener(index);
				}
				virtual const EarthView::World::Graphic::LightList& queryLights() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Graphic::LightList& returnValue = *(EarthView::World::Graphic::LightList*)m_EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::queryLights();
				}
				virtual ev_uint32 getLightMask() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						ev_uint32 returnValue = m_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getLightMask();
				}
				virtual void setLightMask(_in ev_uint32 lightMask)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback(lightMask);
					}
					else
						return this->CParticleSystem::setLightMask(lightMask);
				}
				virtual EarthView::World::Graphic::LightList* _getLightList()
				{
					if(m_EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::LightList* returnValue = m_EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::_getLightList();
				}
				virtual EarthView::World::Graphic::CEdgeData* getEdgeList()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CEdgeData* returnValue = m_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getEdgeList();
				}
				virtual ev_bool hasEdgeList()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::hasEdgeList();
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
						return returnValue;
					}
					else
						return this->CParticleSystem::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist, flags);
				}
				virtual EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator getShadowVolumeRenderableIterator(_in EarthView::World::Graphic::ShadowTechnique shadowTechnique, _in const EarthView::World::Graphic::CLight* light, _in EarthView::World::Graphic::CHardwareIndexBufferSharedPtr* indexBuffer, _in ev_bool extrudeVertices, _in Real extrusionDist)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator returnValue = *(EarthView::World::Graphic::CShadowCaster::ShadowRenderableListIterator*)m_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback((int)shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
						return returnValue;
					}
					else
						return this->CParticleSystem::getShadowVolumeRenderableIterator(shadowTechnique, light, indexBuffer, extrudeVertices, extrusionDist);
				}
				virtual const EarthView::World::Spatial::Math::CAxisAlignedBox& getLightCapBounds() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback != NULL && this->isCustomExtend())
					{
						const EarthView::World::Spatial::Math::CAxisAlignedBox& returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getLightCapBounds();
				}
				virtual EarthView::World::Spatial::Math::CAxisAlignedBox getDarkCapBounds(_in const EarthView::World::Graphic::CLight& light, _in Real dirLightExtrusionDist) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback != NULL && this->isCustomExtend())
					{
						EarthView::World::Spatial::Math::CAxisAlignedBox returnValue = *(EarthView::World::Spatial::Math::CAxisAlignedBox*)m_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback(&light, dirLightExtrusionDist);
						return returnValue;
					}
					else
						return this->CParticleSystem::getDarkCapBounds(light, dirLightExtrusionDist);
				}
				virtual void setCastShadows(_in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback(enabled);
					}
					else
						return this->CParticleSystem::setCastShadows(enabled);
				}
				virtual ev_bool getCastShadows() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getCastShadows();
				}
				virtual ev_bool getReceivesShadows()
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::getReceivesShadows();
				}
				virtual Real getPointExtrusionDistance(_in const EarthView::World::Graphic::CLight* l) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback != NULL && this->isCustomExtend())
					{
						Real returnValue = m_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback(l);
						return returnValue;
					}
					else
						return this->CParticleSystem::getPointExtrusionDistance(l);
				}
				virtual void setDebugDisplayEnabled(_in ev_bool enabled)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback(enabled);
					}
					else
						return this->CParticleSystem::setDebugDisplayEnabled(enabled);
				}
				virtual ev_bool isDebugDisplayEnabled() const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback();
						return returnValue;
					}
					else
						return this->CParticleSystem::isDebugDisplayEnabled();
				}
				virtual void updateEdgeListLightFacing(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Spatial::Math::CVector4& lightPos)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback(edgeData, &lightPos);
					}
					else
						return this->CParticleSystem::updateEdgeListLightFacing(edgeData, lightPos);
				}
				virtual void generateShadowVolume(_in EarthView::World::Graphic::CEdgeData* edgeData, _in const EarthView::World::Graphic::CHardwareIndexBufferSharedPtr& indexBuffer, _in const EarthView::World::Graphic::CLight* light, _inout EarthView::World::Graphic::CShadowCaster::ShadowRenderableList& shadowRenderables, _in ev_uint32 flags)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback(edgeData, &indexBuffer, light, &shadowRenderables, flags);
					}
					else
						return this->CParticleSystem::generateShadowVolume(edgeData, indexBuffer, light, shadowRenderables, flags);
				}
				virtual void extrudeBounds(_inout EarthView::World::Spatial::Math::CAxisAlignedBox& box, _in const EarthView::World::Spatial::Math::CVector4& lightPos, _in Real extrudeDist) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback(&box, &lightPos, extrudeDist);
					}
					else
						return this->CParticleSystem::extrudeBounds(box, lightPos, extrudeDist);
				}
			};
			REGISTER_FACTORY_CLASS(CParticleSystemProxy);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback)(_in char*& name, _in char*& value);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback)(_in char*& name, _in ev_bool readOnly, _in ev_bool enable);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback)(_in const void* paramList);
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback)(_in char*& name);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback)(_in EarthView::World::Core::CStringInterface* dest);
			class CParticleSystemInternalStringInterfaceProxy : public EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface
			{
			private:
				EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback* m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback;
				EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback* m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback;
				EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback* m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback;
			public:
				CParticleSystemInternalStringInterfaceProxy(EarthView::World::Core::CNameValuePairList *pList) : CParticleSystemInternalStringInterface(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool(EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList(EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface(EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback = pCallback;
				}
				virtual ev_bool setParameter(_in const EVString& name, _in const EVString& value)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						char* value_Char = value.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback(name_Char, value_Char);
						return returnValue;
					}
					else
						return this->CParticleSystemInternalStringInterface::setParameter(name, value);
				}
				virtual ev_bool setParameter(_in const EVString& name, _in ev_bool readOnly, _in ev_bool enable)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback(name_Char, readOnly, enable);
						return returnValue;
					}
					else
						return this->CParticleSystemInternalStringInterface::setParameter(name, readOnly, enable);
				}
				virtual void setParameterList(_in const EarthView::World::Core::CommonStringPairList& paramList)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback(&paramList);
					}
					else
						return this->CParticleSystemInternalStringInterface::setParameterList(paramList);
				}
				virtual EVString getParameter(_in const EVString& name) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* name_Char = name.makeBuffer();
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback(name_Char);
						return returnValue;
					}
					else
						return this->CParticleSystemInternalStringInterface::getParameter(name);
				}
				virtual void copyParametersTo(_in EarthView::World::Core::CStringInterface* dest) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback != NULL && this->isCustomExtend())
					{
						m_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback(dest);
					}
					else
						return this->CParticleSystemInternalStringInterface::copyParametersTo(dest);
				}
			};
			REGISTER_FACTORY_CLASS(CParticleSystemInternalStringInterfaceProxy);
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString_Callback* pCallback )
			{
				CParticleSystemInternalStringInterfaceProxy* ptr = dynamic_cast<CParticleSystemInternalStringInterfaceProxy*>((EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool_Callback* pCallback )
			{
				CParticleSystemInternalStringInterfaceProxy* ptr = dynamic_cast<CParticleSystemInternalStringInterfaceProxy*>((EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameter_ev_bool_EVString_ev_bool_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList_Callback* pCallback )
			{
				CParticleSystemInternalStringInterfaceProxy* ptr = dynamic_cast<CParticleSystemInternalStringInterfaceProxy*>((EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_setParameterList_void_CommonStringPairList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString_Callback* pCallback )
			{
				CParticleSystemInternalStringInterfaceProxy* ptr = dynamic_cast<CParticleSystemInternalStringInterfaceProxy*>((EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_getParameter_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface_Callback* pCallback )
			{
				CParticleSystemInternalStringInterfaceProxy* ptr = dynamic_cast<CParticleSystemInternalStringInterfaceProxy*>((EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CParticleSystemInternalStringInterface_copyParametersTo_void_CStringInterface(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*  _stdcall EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface* objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getStringInterfacePtr();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface* objXXXX = ptrNativeObject->getStringInterfacePtr();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface*  _stdcall EarthView_World_Graphic_CParticleSystem_getStringInterfacePtr_CParticleSystemInternalStringInterface_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystem::CParticleSystemInternalStringInterface* objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getStringInterfacePtr();
				return objXXXX;
			}
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback)(_in const void* target);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback)(_in void* target, _in char*& val);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback)(_in void* target, _in char*& val, _inout char*& reason);
			class CCmdSortedProxy : public EarthView::World::Graphic::CParticleSystem::CCmdSorted
			{
			private:
				EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback;
			public:
				CCmdSortedProxy(EarthView::World::Core::CNameValuePairList *pList) : CCmdSorted(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void(EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString(EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback = pCallback;
				}
				virtual EVString doGet(_in const void* target) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback(target);
						return returnValue;
					}
					else
						return this->CCmdSorted::doGet(target);
				}
				virtual void doSet(_inout void* target, _in const EVString& val)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback(target, val_Char);
					}
					else
						return this->CCmdSorted::doSet(target, val);
				}
				virtual ev_bool trySet(_in void* target, _in const EVString& val, _inout EVString& reason)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						char* reason_Char = reason.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback(target, val_Char, reason_Char);
						reason = reason_Char;
						if(reason_Char != NULL){ delete[] reason_Char;reason_Char = NULL;}
						return returnValue;
					}
					else
						return this->CCmdSorted::trySet(target, val, reason);
				}
			};
			REGISTER_FACTORY_CLASS(CCmdSortedProxy);
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdSorted* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX;
				if (dynamic_cast<CCmdSortedProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdSorted*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdSorted::doGet(target);
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->doGet(target);
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_Callback* pCallback )
			{
				CCmdSortedProxy* ptr = dynamic_cast<CCmdSortedProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doGet_EVString_void_NoVirtual(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdSorted* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdSorted::doGet(target);
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdSorted* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX;
				if (dynamic_cast<CCmdSortedProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdSorted*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdSorted::doSet(target, val1);
				else
					ptrNativeObject->doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_Callback* pCallback )
			{
				CCmdSortedProxy* ptr = dynamic_cast<CCmdSortedProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdSorted_doSet_void_void_EVString_NoVirtual(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdSorted* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdSorted::doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString_Callback* pCallback )
			{
				CCmdSortedProxy* ptr = dynamic_cast<CCmdSortedProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdSorted*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdSorted_trySet_ev_bool_void_EVString_EVString(pCallback);
				}
			}
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback)(_in const void* target);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback)(_in void* target, _in char*& val);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback)(_in void* target, _in char*& val, _inout char*& reason);
			class CCmdLocalSpaceProxy : public EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace
			{
			private:
				EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback;
			public:
				CCmdLocalSpaceProxy(EarthView::World::Core::CNameValuePairList *pList) : CCmdLocalSpace(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void(EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString(EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback = pCallback;
				}
				virtual EVString doGet(_in const void* target) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback(target);
						return returnValue;
					}
					else
						return this->CCmdLocalSpace::doGet(target);
				}
				virtual void doSet(_inout void* target, _in const EVString& val)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback(target, val_Char);
					}
					else
						return this->CCmdLocalSpace::doSet(target, val);
				}
				virtual ev_bool trySet(_in void* target, _in const EVString& val, _inout EVString& reason)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						char* reason_Char = reason.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback(target, val_Char, reason_Char);
						reason = reason_Char;
						if(reason_Char != NULL){ delete[] reason_Char;reason_Char = NULL;}
						return returnValue;
					}
					else
						return this->CCmdLocalSpace::trySet(target, val, reason);
				}
			};
			REGISTER_FACTORY_CLASS(CCmdLocalSpaceProxy);
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX;
				if (dynamic_cast<CCmdLocalSpaceProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace::doGet(target);
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->doGet(target);
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_Callback* pCallback )
			{
				CCmdLocalSpaceProxy* ptr = dynamic_cast<CCmdLocalSpaceProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doGet_EVString_void_NoVirtual(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace::doGet(target);
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX;
				if (dynamic_cast<CCmdLocalSpaceProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace::doSet(target, val1);
				else
					ptrNativeObject->doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_Callback* pCallback )
			{
				CCmdLocalSpaceProxy* ptr = dynamic_cast<CCmdLocalSpaceProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_doSet_void_void_EVString_NoVirtual(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace::doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString_Callback* pCallback )
			{
				CCmdLocalSpaceProxy* ptr = dynamic_cast<CCmdLocalSpaceProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdLocalSpace*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdLocalSpace_trySet_ev_bool_void_EVString_EVString(pCallback);
				}
			}
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback)(_in const void* target);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback)(_in void* target, _in char*& val);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback)(_in void* target, _in char*& val, _inout char*& reason);
			class CCmdIterationIntervalProxy : public EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval
			{
			private:
				EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback;
			public:
				CCmdIterationIntervalProxy(EarthView::World::Core::CNameValuePairList *pList) : CCmdIterationInterval(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void(EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString(EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback = pCallback;
				}
				virtual EVString doGet(_in const void* target) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback(target);
						return returnValue;
					}
					else
						return this->CCmdIterationInterval::doGet(target);
				}
				virtual void doSet(_inout void* target, _in const EVString& val)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback(target, val_Char);
					}
					else
						return this->CCmdIterationInterval::doSet(target, val);
				}
				virtual ev_bool trySet(_in void* target, _in const EVString& val, _inout EVString& reason)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						char* reason_Char = reason.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback(target, val_Char, reason_Char);
						reason = reason_Char;
						if(reason_Char != NULL){ delete[] reason_Char;reason_Char = NULL;}
						return returnValue;
					}
					else
						return this->CCmdIterationInterval::trySet(target, val, reason);
				}
			};
			REGISTER_FACTORY_CLASS(CCmdIterationIntervalProxy);
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX;
				if (dynamic_cast<CCmdIterationIntervalProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval::doGet(target);
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->doGet(target);
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_Callback* pCallback )
			{
				CCmdIterationIntervalProxy* ptr = dynamic_cast<CCmdIterationIntervalProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doGet_EVString_void_NoVirtual(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval::doGet(target);
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX;
				if (dynamic_cast<CCmdIterationIntervalProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval::doSet(target, val1);
				else
					ptrNativeObject->doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_Callback* pCallback )
			{
				CCmdIterationIntervalProxy* ptr = dynamic_cast<CCmdIterationIntervalProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_doSet_void_void_EVString_NoVirtual(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval::doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString_Callback* pCallback )
			{
				CCmdIterationIntervalProxy* ptr = dynamic_cast<CCmdIterationIntervalProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdIterationInterval*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdIterationInterval_trySet_ev_bool_void_EVString_EVString(pCallback);
				}
			}
			typedef char*  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback)(_in const void* target);
			typedef void  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback)(_in void* target, _in char*& val);
			typedef ev_bool  ( _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback)(_in void* target, _in char*& val, _inout char*& reason);
			class CCmdNonvisibleTimeoutProxy : public EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout
			{
			private:
				EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback;
				EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback* m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback;
			public:
				CCmdNonvisibleTimeoutProxy(EarthView::World::Core::CNameValuePairList *pList) : CCmdNonvisibleTimeout(pList)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback = NULL;
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback = NULL;
				}
			public:
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void(EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString(EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback = pCallback;
				}
				ev_void registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString(EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback* pCallback)
				{
					m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback = pCallback;
				}
				virtual EVString doGet(_in const void* target) const
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback != NULL && this->isCustomExtend())
					{
						EVString returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback(target);
						return returnValue;
					}
					else
						return this->CCmdNonvisibleTimeout::doGet(target);
				}
				virtual void doSet(_inout void* target, _in const EVString& val)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback(target, val_Char);
					}
					else
						return this->CCmdNonvisibleTimeout::doSet(target, val);
				}
				virtual ev_bool trySet(_in void* target, _in const EVString& val, _inout EVString& reason)
				{
					if(m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback != NULL && this->isCustomExtend())
					{
						char* val_Char = val.makeBuffer();
						char* reason_Char = reason.makeBuffer();
						ev_bool returnValue = m_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback(target, val_Char, reason_Char);
						reason = reason_Char;
						if(reason_Char != NULL){ delete[] reason_Char;reason_Char = NULL;}
						return returnValue;
					}
					else
						return this->CCmdNonvisibleTimeout::trySet(target, val, reason);
				}
			};
			REGISTER_FACTORY_CLASS(CCmdNonvisibleTimeoutProxy);
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX;
				if (dynamic_cast<CCmdNonvisibleTimeoutProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout::doGet(target);
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->doGet(target);
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_Callback* pCallback )
			{
				CCmdNonvisibleTimeoutProxy* ptr = dynamic_cast<CCmdNonvisibleTimeoutProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doGet_EVString_void_NoVirtual(void *pObjectXXXX, _in const void* target )
			{
				const EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout::doGet(target);
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX;
				if (dynamic_cast<CCmdNonvisibleTimeoutProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout::doSet(target, val1);
				else
					ptrNativeObject->doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_Callback* pCallback )
			{
				CCmdNonvisibleTimeoutProxy* ptr = dynamic_cast<CCmdNonvisibleTimeoutProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_doSet_void_void_EVString_NoVirtual(void *pObjectXXXX, _inout void* target, _in const char* val )
			{
				EarthView::World::Core::ev_string val1 = val;
				EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout::doSet(target, val1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString_Callback* pCallback )
			{
				CCmdNonvisibleTimeoutProxy* ptr = dynamic_cast<CCmdNonvisibleTimeoutProxy*>((EarthView::World::Graphic::CParticleSystem::CCmdNonvisibleTimeout*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_CCmdNonvisibleTimeout_trySet_ev_bool_void_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setVisible(visible);
				else
					ptrNativeObject->setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setVisible_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool visible )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setVisible(visible);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setSelected_void_ev_bool(void *pObjectXXXX, _in ev_bool val )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setSelected(val);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setRenderer_void_EVString(void *pObjectXXXX, _in const char* typeName )
			{
				EarthView::World::Core::ev_string typeName1 = typeName;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setRenderer(typeName1);
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleSystemRenderer*  _stdcall EarthView_World_Graphic_CParticleSystem_getRenderer_CParticleSystemRenderer(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleSystemRenderer* objXXXX = ptrNativeObject->getRenderer();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getRendererName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->getRendererName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleEmitter*  _stdcall EarthView_World_Graphic_CParticleSystem_addEmitter_CParticleEmitter_EVString(void *pObjectXXXX, _in const char* emitterType )
			{
				EarthView::World::Core::ev_string emitterType1 = emitterType;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleEmitter* objXXXX = ptrNativeObject->addEmitter(emitterType1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleEmitter*  _stdcall EarthView_World_Graphic_CParticleSystem_getEmitter_CParticleEmitter_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleEmitter* objXXXX = ptrNativeObject->getEmitter(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CParticleSystem_getNumEmitters_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->getNumEmitters();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_removeEmitter_void_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->removeEmitter(index);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_removeAllEmitters_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->removeAllEmitters();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleAffector*  _stdcall EarthView_World_Graphic_CParticleSystem_addAffector_CParticleAffector_EVString(void *pObjectXXXX, _in const char* affectorType )
			{
				EarthView::World::Core::ev_string affectorType1 = affectorType;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleAffector* objXXXX = ptrNativeObject->addAffector(affectorType1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticleAffector*  _stdcall EarthView_World_Graphic_CParticleSystem_getAffector_CParticleAffector_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleAffector* objXXXX = ptrNativeObject->getAffector(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint16  _stdcall EarthView_World_Graphic_CParticleSystem_getNumAffectors_ev_uint16(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_uint16 objXXXX = ptrNativeObject->getNumAffectors();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_removeAffector_void_ev_uint16(void *pObjectXXXX, _in ev_uint16 index )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->removeAffector(index);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_removeAllAffectors_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->removeAllAffectors();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_clear_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->clear();
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CParticleSystem_getNumParticles_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->getNumParticles();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticle*  _stdcall EarthView_World_Graphic_CParticleSystem_createParticle_CParticle(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticle* objXXXX = ptrNativeObject->createParticle();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticle*  _stdcall EarthView_World_Graphic_CParticleSystem_createEmitterParticle_CParticle_EVString(void *pObjectXXXX, _in const char* emitterName )
			{
				EarthView::World::Core::ev_string emitterName1 = emitterName;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticle* objXXXX = ptrNativeObject->createEmitterParticle(emitterName1);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CParticle*  _stdcall EarthView_World_Graphic_CParticleSystem_getParticle_CParticle_ev_size_t(void *pObjectXXXX, _in ev_uint64  index )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticle* objXXXX = ptrNativeObject->getParticle(index);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CParticleSystem_getParticleQuota_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->getParticleQuota();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setParticleQuota_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  quota )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setParticleQuota(quota);
			}
			extern "C" EV_DLL_EXPORT  ev_uint64   _stdcall EarthView_World_Graphic_CParticleSystem_getEmittedEmitterQuota_ev_size_t(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_size_t objXXXX = ptrNativeObject->getEmittedEmitterQuota();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setEmittedEmitterQuota_void_ev_size_t(void *pObjectXXXX, _in ev_uint64  quota )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setEmittedEmitterQuota(quota);
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CParticleSystem_OperatorAssign_CParticleSystem_CParticleSystem(void *pObjXXXX, _in const void* rhs )
			{
				EarthView::World::Graphic::CParticleSystem& objXXXX = *((EarthView::World::Graphic::CParticleSystem*) pObjXXXX);
				objXXXX = *(EarthView::World::Graphic::CParticleSystem*)rhs;
				EarthView::World::Graphic::CParticleSystem *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__update_void_Real(void *pObjectXXXX, _in Real timeElapsed )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->_update(timeElapsed);
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CParticleSystem__getIterator_CParticleIterator(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CParticleIterator objXXXX = ptrNativeObject->_getIterator();
				EarthView::World::Graphic::CParticleIterator *pXXXX = new EarthView::World::Graphic::CParticleIterator(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString(void *pObjectXXXX, _in const char* name, _in const char* groupName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setMaterialName(name1, groupName1);
				else
					ptrNativeObject->setMaterialName(name1, groupName1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_EVString_NoVirtual(void *pObjectXXXX, _in const char* name, _in const char* groupName )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Core::ev_string groupName1 = groupName;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setMaterialName(name1, groupName1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setMaterialName(name1);
				else
					ptrNativeObject->setMaterialName(name1);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setMaterialName_void_EVString_NoVirtual(void *pObjectXXXX, _in const char* name )
			{
				EarthView::World::Core::ev_string name1 = name;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setMaterialName(name1);
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getMaterialName();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getMaterialName();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getMaterialName_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getMaterialName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyCurrentCamera(cam);
				else
					ptrNativeObject->_notifyCurrentCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyCurrentCamera_void_CCamera_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CCamera* cam )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyCurrentCamera(cam);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyAttached(ref_parent, isTagPoint);
				else
					ptrNativeObject->_notifyAttached(ref_parent, isTagPoint);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent, _in ev_bool isTagPoint )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyAttached(ref_parent, isTagPoint);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyAttached(ref_parent);
				else
					ptrNativeObject->_notifyAttached(ref_parent);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyAttached_void_CNode_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CNode* ref_parent )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyAttached(ref_parent);
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
				else
				{
					const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->getBoundingBox();
					const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  const void*  _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingBox_CAxisAlignedBox_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				const EarthView::World::Spatial::Math::CAxisAlignedBox& objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getBoundingBox();
				const EarthView::World::Spatial::Math::CAxisAlignedBox *pXXXX = &objXXXX;
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getBoundingRadius();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getBoundingRadius();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getBoundingRadius_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getBoundingRadius();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_updateRenderQueue(queue);
				else
					ptrNativeObject->_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__updateRenderQueue_void_CRenderQueue_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderQueue* queue )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_updateRenderQueue(queue);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::visitRenderables(visitor, debugRenderables);
				else
					ptrNativeObject->visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_ev_bool_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor, _in ev_bool debugRenderables )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::visitRenderables(visitor, debugRenderables);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::visitRenderables(visitor);
				else
					ptrNativeObject->visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_visitRenderables_void_CVisitor_NoVirtual(void *pObjectXXXX, _in EarthView::World::Graphic::CRenderable::CVisitor* visitor )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::visitRenderables(visitor);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_fastForward_void_Real_Real(void *pObjectXXXX, _in Real time, _in Real interval )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->fastForward(time, interval);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_fastForward_void_Real(void *pObjectXXXX, _in Real time )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->fastForward(time);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setSpeedFactor_void_Real(void *pObjectXXXX, _in Real speedFactor )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setSpeedFactor(speedFactor);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getSpeedFactor_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->getSpeedFactor();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setIterationInterval_void_Real(void *pObjectXXXX, _in Real iterationInterval )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setIterationInterval(iterationInterval);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getIterationInterval_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->getIterationInterval();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultIterationInterval_void_Real(_in Real iterationInterval )
			{
				EarthView::World::Graphic::CParticleSystem::setDefaultIterationInterval(iterationInterval);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultIterationInterval_Real( )
			{
				Real objXXXX = EarthView::World::Graphic::CParticleSystem::getDefaultIterationInterval();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setNonVisibleUpdateTimeout_void_Real(void *pObjectXXXX, _in Real timeout )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setNonVisibleUpdateTimeout(timeout);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getNonVisibleUpdateTimeout_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->getNonVisibleUpdateTimeout();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultNonVisibleUpdateTimeout_void_Real(_in Real timeout )
			{
				EarthView::World::Graphic::CParticleSystem::setDefaultNonVisibleUpdateTimeout(timeout);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultNonVisibleUpdateTimeout_Real( )
			{
				Real objXXXX = EarthView::World::Graphic::CParticleSystem::getDefaultNonVisibleUpdateTimeout();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getMovableType_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getMovableType();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getMovableType();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getMovableType_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getMovableType_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getMovableType();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyParticleResized();
				else
					ptrNativeObject->_notifyParticleResized();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleResized_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyParticleResized();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyParticleRotated();
				else
					ptrNativeObject->_notifyParticleRotated();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyParticleRotated_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::_notifyParticleRotated();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real(void *pObjectXXXX, _in Real width, _in Real height )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultDimensions(width, height);
				else
					ptrNativeObject->setDefaultDimensions(width, height);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultDimensions_void_Real_Real_NoVirtual(void *pObjectXXXX, _in Real width, _in Real height )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultDimensions(width, height);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real(void *pObjectXXXX, _in Real width )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultWidth(width);
				else
					ptrNativeObject->setDefaultWidth(width);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultWidth_void_Real_NoVirtual(void *pObjectXXXX, _in Real width )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultWidth(width);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getDefaultWidth();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getDefaultWidth();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultWidth_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getDefaultWidth();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real(void *pObjectXXXX, _in Real height )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultHeight(height);
				else
					ptrNativeObject->setDefaultHeight(height);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setDefaultHeight_void_Real_NoVirtual(void *pObjectXXXX, _in Real height )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setDefaultHeight(height);
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getDefaultHeight();
					return objXXXX;
				}
				else
				{
					Real objXXXX = ptrNativeObject->getDefaultHeight();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  Real  _stdcall EarthView_World_Graphic_CParticleSystem_getDefaultHeight_Real_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				Real objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getDefaultHeight();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getCullIndividually();
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getCullIndividually();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getCullIndividually_ev_bool_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getCullIndividually();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool(void *pObjectXXXX, _in ev_bool cullIndividual )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setCullIndividually(cullIndividual);
				else
					ptrNativeObject->setCullIndividually(cullIndividual);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setCullIndividually_void_ev_bool_NoVirtual(void *pObjectXXXX, _in ev_bool cullIndividual )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setCullIndividually(cullIndividual);
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getResourceGroupName();
					return objXXXX.makeBuffer();
				}
				else
				{
					EVString objXXXX = ptrNativeObject->getResourceGroupName();
					return objXXXX.makeBuffer();
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  char*  _stdcall EarthView_World_Graphic_CParticleSystem_getResourceGroupName_EVString_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EVString objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getResourceGroupName();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  const char*  _stdcall EarthView_World_Graphic_CParticleSystem_getOrigin_EVString(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				const EVString& objXXXX = ptrNativeObject->getOrigin();
				return objXXXX.makeBuffer();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__notifyOrigin_void_EVString(void *pObjectXXXX, _in const char* origin )
			{
				EarthView::World::Core::ev_string origin1 = origin;
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->_notifyOrigin(origin1);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setRenderQueueGroup(queueID);
				else
					ptrNativeObject->setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setRenderQueueGroup_void_ev_uint8_NoVirtual(void *pObjectXXXX, _in ev_uint8 queueID )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setRenderQueueGroup(queueID);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setSortingEnabled_void_ev_bool(void *pObjectXXXX, _in ev_bool enabled )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setSortingEnabled(enabled);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getSortingEnabled_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getSortingEnabled();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setBounds_void_CAxisAlignedBox(void *pObjectXXXX, _in const void* aabb )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setBounds(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setBoundsAutoUpdated_void_ev_bool_Real(void *pObjectXXXX, _in ev_bool autoUpdate, _in Real stopIn )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setBoundsAutoUpdated(autoUpdate, stopIn);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setBoundsAutoUpdated_void_ev_bool(void *pObjectXXXX, _in ev_bool autoUpdate )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setBoundsAutoUpdated(autoUpdate);
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setKeepParticlesInLocalSpace_void_ev_bool(void *pObjectXXXX, _in ev_bool keepLocal )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setKeepParticlesInLocalSpace(keepLocal);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getKeepParticlesInLocalSpace_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getKeepParticlesInLocalSpace();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem__updateBounds_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->_updateBounds();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_setEmitting_void_ev_bool(void *pObjectXXXX, _in ev_bool v )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->setEmitting(v);
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getEmitting_ev_bool(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->getEmitting();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getTypeFlags();
					return objXXXX;
				}
				else
				{
					ev_uint32 objXXXX = ptrNativeObject->getTypeFlags();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_uint32  _stdcall EarthView_World_Graphic_CParticleSystem_getTypeFlags_ev_uint32_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_uint32 objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getTypeFlags();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setSelected(*(EarthView::World::Core::IntVector*)objIndics);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_setSelected_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* objIndics )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setSelected(*(EarthView::World::Core::IntVector*)objIndics);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CParticleSystem_getSelected_IntVector(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
				else
				{
					EarthView::World::Core::IntVector objXXXX = ptrNativeObject->getSelected();
					EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
					((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
					return (void*)pXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getSelected_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void*  _stdcall EarthView_World_Graphic_CParticleSystem_getSelected_IntVector_NoVirtual(void *pObjectXXXX )
			{
				const EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Core::IntVector objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getSelected();
				EarthView::World::Core::IntVector *pXXXX = new EarthView::World::Core::IntVector(objXXXX);
				((EarthView::World::Core::CBaseObject*)pXXXX)->setExternFree(true);
				return (void*)pXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_CVector3_NoVirtual(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out void* point )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(void *pObjectXXXX, _in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CAxisAlignedBox_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* aabb, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CAxisAlignedBox*)aabb, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector(void *pObjectXXXX, _in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectBy_ev_bool_CSphere_ev_bool_IntVector_NoVirtual(void *pObjectXXXX, _in const void* sphere, _in ev_bool prepareToRenderSelection, _out void* indexVec )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectBy(*(EarthView::World::Spatial::Math::CSphere*)sphere, prepareToRenderSelection, *(EarthView::World::Core::IntVector*)indexVec);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_selectComponentBy_ev_bool_CRay_CViewport_ev_bool_ev_int32_ev_int32_ev_int32_ev_int32_CVector3_NoVirtual(void *pObjectXXXX, _in const void* ray, _in const EarthView::World::Graphic::CViewport* viewport, _in ev_bool prepareToRenderSelection, _out ev_int32& objIndex, _out ev_int32& submeshIndex, _out ev_int32& instanceIndex, _out ev_int32& segmentIndex, _out void* point )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::selectComponentBy(*(EarthView::World::Spatial::Math::CRay*)ray, viewport, prepareToRenderSelection, objIndex, submeshIndex, instanceIndex, segmentIndex, *(EarthView::World::Spatial::Math::CVector3*)point);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_renderSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::renderSelection();
				else
					ptrNativeObject->renderSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_renderSelection_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_renderSelection_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_renderSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_renderSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::renderSelection();
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_clearSelection_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::clearSelection();
				else
					ptrNativeObject->clearSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_clearSelection_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_clearSelection_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_clearSelection_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_clearSelection_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::clearSelection();
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32(void *pObjectXXXX, _in ev_uint32 objectIndex )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::startEditing(objectIndex);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->startEditing(objectIndex);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_startEditing_ev_bool_ev_uint32_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::startEditing(objectIndex);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_endEditing_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
					ptrNativeObject->EarthView::World::Graphic::CParticleSystem::endEditing();
				else
					ptrNativeObject->endEditing();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_endEditing_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_endEditing_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_endEditing_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_endEditing_void_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->EarthView::World::Graphic::CParticleSystem::endEditing();
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEditBoundingBox*  _stdcall EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getEditBoundingBox();
					return objXXXX;
				}
				else
				{
					EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->getEditBoundingBox();
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  EarthView::World::Graphic::CEditBoundingBox*  _stdcall EarthView_World_Graphic_CParticleSystem_getEditBoundingBox_CEditBoundingBox_NoVirtual(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				EarthView::World::Graphic::CEditBoundingBox* objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getEditBoundingBox();
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(void *pObjectXXXX, _in ev_uint32 objectIndex, _inout void* matrix )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_getSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex, _inout void* matrix )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::getSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(void *pObjectXXXX, _in ev_uint32 objectIndex, _in const void* matrix )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				if (dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*)ptrNativeObject) != NULL)
				{
					ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
				else
				{
					ev_bool objXXXX = ptrNativeObject->setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
					return objXXXX;
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_bool  _stdcall EarthView_World_Graphic_CParticleSystem_setSelectedObjectWorldMatrix_ev_bool_ev_uint32_CMatrix4_NoVirtual(void *pObjectXXXX, _in ev_uint32 objectIndex, _in const void* matrix )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ev_bool objXXXX = ptrNativeObject->EarthView::World::Graphic::CParticleSystem::setSelectedObjectWorldMatrix(objectIndex, *(EarthView::World::Spatial::Math::CMatrix4*)matrix);
				return objXXXX;
			}
			extern "C" EV_DLL_EXPORT  void  _stdcall EarthView_World_Graphic_CParticleSystem_configureRenderer_void(void *pObjectXXXX )
			{
				EarthView::World::Graphic::CParticleSystem* ptrNativeObject = (EarthView::World::Graphic::CParticleSystem*) pObjectXXXX;
				ptrNativeObject->configureRenderer();
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getAnimableObjectPtr_CMovableObjectInternalAnimableObject(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueId_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyCreator_void_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__getCreator_CMovableObjectFactory(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyManager_void_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__getManager_CSceneManager(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getName_EVString( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getName_EVString_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getName_EVString(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getParentNode_CNode_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getParentNode_CNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getParentSceneNode_CSceneNode(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_isParentTagPoint_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_isAttached_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_detachFromParent_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_detachFromParent_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_detachFromParent_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_isInScene_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyMoved_void( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyMoved_void_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyMoved_void(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__notifyLightsQueried_void_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setLightQueriedListener_void_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getLightQueriedListener_CLightQueriedListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getLightListUpdated_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setLightListUpdated_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingSphere_CSphere(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_isVisible_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMaxDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMaxDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinDistance_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinDistance_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderingMinPixelSize_void_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderingMinPixelSize_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setSelectionColour_void_CColourValue(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setRenderQueueGroupAndPriority_void_ev_uint8_ev_uint16(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getRenderQueueGroup_ev_uint8(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__getParentNodeFullTransform_CMatrix4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_addQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_removeQueryFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getQueryFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_addVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_removeVisibilityFlags_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getVisibilityFlags_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_addListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_removeListener_void_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_existListener_ev_bool_CMovableObjectListener(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getListenerCount_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getListener_CMovableObjectListener_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_queryLights_LightList( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_queryLights_LightList_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_queryLights_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getLightMask_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setLightMask_void_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem__getLightList_LightList( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem__getLightList_LightList_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem__getLightList_LightList(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setCastShadows_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getReceivesShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_setDebugDisplayEnabled_void_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_isDebugDisplayEnabled_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getCastShadows_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getEdgeList_CEdgeData(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_hasEdgeList_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_ev_bool(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getWorldBoundingBox_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getLightCapBounds_CAxisAlignedBox(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getDarkCapBounds_CAxisAlignedBox_CLight_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getShadowVolumeRenderableIterator_ShadowRenderableListIterator_ShadowTechnique_CLight_CHardwareIndexBufferSharedPtr_ev_bool_Real(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_getPointExtrusionDistance_Real_CLight(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_updateEdgeListLightFacing_void_CEdgeData_CVector4(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_generateShadowVolume_void_CEdgeData_CHardwareIndexBufferSharedPtr_CLight_ShadowRenderableList_ev_uint32(pCallback);
				}
			}
			extern "C" EV_DLL_EXPORT  ev_void _stdcall  EV_RegisterCallback_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real( void *pObjectXXXX, EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real_Callback* pCallback )
			{
				CParticleSystemProxy* ptr = dynamic_cast<CParticleSystemProxy*>((EarthView::World::Graphic::CParticleSystem*) pObjectXXXX);
				if(ptr != NULL)
				{
					ptr->registerCallback_EarthView_World_Graphic_CParticleSystem_extrudeBounds_void_CAxisAlignedBox_CVector4_Real(pCallback);
				}
			}
		}
	}
}
