#ifndef _EV_Graphic_H__
#define _EV_Graphic_H__
/// This file includes all the other files which you will need to build a client application
#include "core/any.h"
#include "core/datastream.h"
#include "core/ev_string.h"
#include "core/stringvector.h"
#include "core/graphic_exception.h"
#include "core/logmanager.h"
#include "core/archive.h"
#include "core/archivemanager.h"

#include <mathengine/ev_math.h>
#include <mathengine/matrix3.h>
#include <mathengine/matrix4.h>
#include <mathengine/axisalignedbox.h>

#include "graphic/animation.h"
#include "graphic/animationstate.h"
#include "graphic/animationtrack.h"
#include "graphic/billboardchain.h"
#include "graphic/billboardset.h"
#include "graphic/bone.h"
#include "graphic/camera.h"
#include "graphic/configfile.h"
#include "graphic/controllermanager.h"
#include "graphic/entity.h"
#include "graphic/frustum.h"
#include "graphic/gpuprogram.h"
#include "graphic/gpuprogrammanager.h"
#include "graphic/hardwarebuffermanager.h"
#include "graphic/hardwareindexbuffer.h"
#include "graphic/hardwarepixelbuffer.h"
#include "graphic/hardwareocclusionquery.h"
#include "graphic/hardwarevertexbuffer.h"
#include "graphic/hardwarepixelbuffer.h"
#include "graphic/highlevelgpuprogram.h"
#include "graphic/highlevelgpuprogrammanager.h"
#include "graphic/instancebatch.h"
#include "graphic/instancedentity.h"
#include "graphic/instancemanager.h"
#include "graphic/keyframe.h"
#include "graphic/light.h"
#include "graphic/manualobject.h"
#include "graphic/material.h"
#include "graphic/materialmanager.h"
#include "graphic/materialserializer.h"
#include "graphic/mesh.h"
#include "graphic/meshmanager.h"
#include "graphic/meshserializer.h"
#include "graphic/overlay.h"
#include "graphic/overlaycontainer.h"
#include "graphic/overlayelement.h"
#include "graphic/overlaymanager.h"
#include "graphic/particleaffector.h"
#include "graphic/particleemitter.h"
#include "graphic/particlesystemmanager.h"
#include "graphic/pass.h"
#include "graphic/patchmesh.h"
#include "graphic/patchsurface.h"
#include "graphic/profiler.h"
#include "graphic/radixsort.h"
#include "graphic/renderqueueinvocation.h"
#include "graphic/renderqueuelistener.h"
#include "graphic/renderobjectlistener.h"
#include "graphic/rendersystem.h"
#include "graphic/rendertargetlistener.h"
#include "graphic/rendertexture.h"
#include "graphic/renderwindow.h"
#include "graphic/resourcebackgroundqueue.h"
#include "graphic/resourcegroupmanager.h"
#include "graphic/ribbontrail.h"
#include "graphic/root.h"
#include "graphic/scenemanager.h"
#include "graphic/scenemanagerenumerator.h"
#include "graphic/scenenode.h"
#include "graphic/simplerenderable.h"
#include "graphic/skeleton.h"
#include "graphic/skeletoninstance.h"
#include "graphic/skeletonmanager.h"
#include "graphic/skeletonserializer.h"
#include "graphic/staticgeometry.h"
#include "graphic/stringconverter.h"
#include "graphic/subentity.h"
#include "graphic/submesh.h"
#include "graphic/technique.h"
#include "graphic/texturemanager.h"
#include "graphic/textureunitstate.h"
#include "graphic/viewport.h"
#include "graphic/compositor.h"
#include "graphic/compositormanager.h"
#include "graphic/compositorchain.h"
#include "graphic/compositorinstance.h"
#include "graphic/compositiontechnique.h"
#include "graphic/compositionpass.h"
#include "graphic/compositiontargetpass.h"
#include "graphic/windoweventutilities.h"
#include "graphic/shadowcamerasetup.h"
#include "graphic/shadowcamerasetupfocused.h"
#include "graphic/shadowcamerasetuplispsm.h"
#include "graphic/shadowcamerasetupplaneoptimal.h"
#include "graphic/shadowcamerasetuppssm.h"

/// .... more to come


#endif

